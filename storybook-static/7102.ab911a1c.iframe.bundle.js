"use strict";(self.webpackChunkwebviewer_ui=self.webpackChunkwebviewer_ui||[]).push([[7102],{"./src/components/FormFieldPanel/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>components_FormFieldPanel});var react=__webpack_require__("./node_modules/react/index.js"),es=__webpack_require__("./node_modules/react-redux/es/index.js"),actions=__webpack_require__("./src/redux/actions/index.js"),useTranslation=__webpack_require__("./node_modules/react-i18next/dist/es/useTranslation.js"),core=__webpack_require__("./src/core/index.js"),prop_types=__webpack_require__("./node_modules/prop-types/index.js"),prop_types_default=__webpack_require__.n(prop_types),selectors=__webpack_require__("./src/redux/selectors/index.js"),classnames=__webpack_require__("./node_modules/classnames/index.js"),classnames_default=__webpack_require__.n(classnames),Icon=__webpack_require__("./src/components/Icon/index.js"),DataElementWrapper=__webpack_require__("./src/components/DataElementWrapper/index.js"),dataElement=__webpack_require__("./src/constants/dataElement.js"),actionPriority=__webpack_require__("./src/constants/actionPriority.js"),getToolStyles=__webpack_require__("./src/helpers/getToolStyles.js"),setToolStyles=__webpack_require__("./src/helpers/setToolStyles.js"),getDeviceSize=__webpack_require__("./src/helpers/getDeviceSize.js"),mapValidationResponseToTranslation=__webpack_require__("./src/helpers/mapValidationResponseToTranslation.js"),FormFieldPanel=__webpack_require__("./src/components/FormFieldPanel/FormFieldPanel.js");__webpack_require__("./src/components/FormFieldPanel/FormFieldPanel.scss");function _instanceof(left,right){return null!=right&&"undefined"!=typeof Symbol&&right[Symbol.hasInstance]?!!right[Symbol.hasInstance](left):left instanceof right}var _window_Core=window.Core,Annotations=_window_Core.Annotations,Tools=_window_Core.Tools,defaultProperties={name:"",value:"",radioButtonGroups:[]},defaultDimension={width:0,height:0},defaultFlags={ReadOnly:!1,Multiline:!1,Required:!1,MultiSelect:!1},getSignatureOption=function(widget){var formFieldCreationManager=core.A.getFormFieldCreationManager();if(widget)return formFieldCreationManager.getSignatureOption(widget);var currentTool=core.A.getToolMode(),toolStyles=(0,getToolStyles.A)(currentTool.name);return(null==toolStyles?void 0:toolStyles.signatureType)||""},redrawAnnotation=function(annotation){core.A.getAnnotationManager().drawAnnotationsFromList([annotation])},validateDimension=function(value,documentSize,annotationOffset){var maxDimension=documentSize-annotationOffset;return Math.min(value,maxDimension)};function _array_like_to_array(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function _define_property(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function FormFieldPanelContainer_instanceof(left,right){return null!=right&&"undefined"!=typeof Symbol&&right[Symbol.hasInstance]?!!right[Symbol.hasInstance](left):left instanceof right}function _object_spread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{},ownKeys=Object.keys(source);"function"==typeof Object.getOwnPropertySymbols&&(ownKeys=ownKeys.concat(Object.getOwnPropertySymbols(source).filter((function(sym){return Object.getOwnPropertyDescriptor(source,sym).enumerable})))),ownKeys.forEach((function(key){_define_property(target,key,source[key])}))}return target}function _object_spread_props(target,source){return source=null!=source?source:{},Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))})),target}function _sliced_to_array(arr,i){return function _array_with_holes(arr){if(Array.isArray(arr))return arr}(arr)||function _iterable_to_array_limit(arr,i){var _i=null==arr?null:"undefined"!=typeof Symbol&&arr[Symbol.iterator]||arr["@@iterator"];if(null!=_i){var _s,_e,_arr=[],_n=!0,_d=!1;try{for(_i=_i.call(arr);!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}}(arr,i)||_unsupported_iterable_to_array(arr,i)||function _non_iterable_rest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _to_consumable_array(arr){return function _array_without_holes(arr){if(Array.isArray(arr))return _array_like_to_array(arr)}(arr)||function _iterable_to_array(iter){if("undefined"!=typeof Symbol&&null!=iter[Symbol.iterator]||null!=iter["@@iterator"])return Array.from(iter)}(arr)||_unsupported_iterable_to_array(arr)||function _non_iterable_spread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _unsupported_iterable_to_array(o,minLen){if(o){if("string"==typeof o)return _array_like_to_array(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);return"Object"===n&&o.constructor&&(n=o.constructor.name),"Map"===n||"Set"===n?Array.from(n):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?_array_like_to_array(o,minLen):void 0}}var FormFieldPanelContainer_window_Core=window.Core,FormFieldPanelContainer_Annotations=FormFieldPanelContainer_window_Core.Annotations,FormFieldPanelContainer_Tools=FormFieldPanelContainer_window_Core.Tools,propTypes={annotation:prop_types_default().object},FormFieldPanelContainer_FormFieldPanelContainer=react.memo((function(param){var _annotation_getFieldOptions,annotation=param.annotation,closeAndReset=function closeAndReset(){dispatch(actions.A.enableElement(dataElement.A.ANNOTATION_POPUP,actionPriority.sg)),dispatch(actions.A.closeElement(dataElement.A.FORM_FIELD_PANEL)),setFieldProperties(defaultProperties),setFieldDimension(defaultDimension),setFieldFlags(defaultFlags),setIndicator({showIndicator:!1,indicatorText:""}),setPanelTitle(""),setIsValid(!0)},_useSelector=_sliced_to_array((0,es.d4)((function(state){return[selectors.A.isElementOpen(state,dataElement.A.FORM_FIELD_PANEL),selectors.A.getToolButtonObjects(state),selectors.A.isElementDisabled(state,"signatureOptionsDropdown"),selectors.A.isInDesktopOnlyMode(state),selectors.A.getMobilePanelSize(state),selectors.A.getFeatureFlags(state)]}),es.bN),6),isOpen=_useSelector[0],toolButtonObject=_useSelector[1],isSignatureOptionsDropdownDisabled=_useSelector[2],isInDesktopOnlyMode=_useSelector[3],mobilePanelSize=_useSelector[4],featureFlags=_useSelector[5],t=(0,useTranslation.B)().t,dispatch=(0,es.wA)(),isMobile=(0,getDeviceSize.IS)(),customizableUI=featureFlags.customizableUI,_useState=_sliced_to_array((0,react.useState)(defaultProperties),2),fieldProperties=_useState[0],setFieldProperties=_useState[1],_useState1=_sliced_to_array((0,react.useState)(defaultDimension),2),fieldDimension=_useState1[0],setFieldDimension=_useState1[1],_useState2=_sliced_to_array((0,react.useState)(defaultFlags),2),fieldFlags=_useState2[0],setFieldFlags=_useState2[1],_useState3=_sliced_to_array((0,react.useState)({showIndicator:!1,indicatorText:""}),2),indicator=_useState3[0],setIndicator=_useState3[1],_useState4=_sliced_to_array((0,react.useState)(!0),2),isValid=_useState4[0],setIsValid=_useState4[1],_useState5=_sliced_to_array((0,react.useState)(""),2),validationMessage=_useState5[0],setValidationMessage=_useState5[1],currentTool=core.A.getToolMode(),isUsingDefaultOptions=FormFieldPanelContainer_instanceof(currentTool,FormFieldPanelContainer_Tools.ListBoxFormFieldCreateTool)||FormFieldPanelContainer_instanceof(currentTool,FormFieldPanelContainer_Tools.ComboBoxFormFieldCreateTool),_useState6=_sliced_to_array((0,react.useState)(isUsingDefaultOptions?currentTool.defaults.options:[]),2),toolOptions=_useState6[0],setToolOptions=_useState6[1],_useState7=_sliced_to_array((0,react.useState)(null!==(_annotation_getFieldOptions=null==annotation?void 0:annotation.getFieldOptions())&&void 0!==_annotation_getFieldOptions?_annotation_getFieldOptions:[]),2),fieldOptions=_useState7[0],setFieldOptions=_useState7[1],_useState8=_sliced_to_array((0,react.useState)(),2),panelTitle=_useState8[0],setPanelTitle=_useState8[1],formFieldCreationManager=core.A.getFormFieldCreationManager(),deleteWidgetsInFormBuilderMode=(0,react.useCallback)((function(annotation){core.A.deleteAnnotations([annotation])}),[]),handleToolModeChange=(0,react.useCallback)((function(newTool){if(FormFieldPanelContainer_instanceof(newTool,FormFieldPanelContainer_Tools.FormFieldCreateTool)){var _ref=(0,getToolStyles.A)(newTool.name)||{},options=_ref.options,flags=_ref.flags,tmp=_ref.Width,width=void 0===tmp?0:tmp,tmp1=_ref.Height,height=void 0===tmp1?0:tmp1,_ref_value=_ref.value,value=void 0===_ref_value?"":_ref_value,_ref_indicatorText=_ref.indicatorText,indicatorText=void 0===_ref_indicatorText?"":_ref_indicatorText,_ref_showIndicator=_ref.showIndicator,showIndicator=void 0!==_ref_showIndicator&&_ref_showIndicator;setFieldProperties((function(prev){return _object_spread_props(_object_spread({},prev),{value})})),setFieldDimension({width,height}),setFieldFlags({ReadOnly:(null==flags?void 0:flags.READ_ONLY)||!1,Required:(null==flags?void 0:flags.REQUIRED)||!1,Multiline:(null==flags?void 0:flags.MULTILINE)||!1,MultiSelect:(null==flags?void 0:flags.MULTI_SELECT)||!1}),setToolOptions(options),setIndicator({showIndicator,indicatorText}),toolName=newTool.name,title=toolButtonObject[toolName].title,setPanelTitle("".concat(t(title)," ").concat(t("stylePanel.headings.tool")))}else closeAndReset();var toolName,title}),[toolButtonObject,t]);(0,react.useEffect)((function(){var radioButtons=core.A.getAnnotationsList().filter((function(annotation){return FormFieldPanelContainer_instanceof(annotation,FormFieldPanelContainer_Annotations.RadioButtonWidgetAnnotation)})),radioGroups=radioButtons.map((function(radioButton){return radioButton.getField().name})),dedupedRadioGroups=_to_consumable_array(new Set(_to_consumable_array(radioGroups)));setFieldProperties((function(previousFieldProperties){return _object_spread_props(_object_spread({},previousFieldProperties),{radioButtonGroups:dedupedRadioGroups})}));var onFormFieldCreationModeStarted=function(){setFieldProperties((function(fieldProperties){return _object_spread_props(_object_spread({},fieldProperties),{radioButtonGroups:formFieldCreationManager.getRadioButtonGroups()})}))},onAnnotationSelected=function(annotations,action){if("deselected"===action){var currentTool=core.A.getToolMode();FormFieldPanelContainer_instanceof(currentTool,FormFieldPanelContainer_Tools.FormFieldCreateTool)?handleToolModeChange(currentTool):setTimeout((function(){annotation||closeAndReset()}),500)}};return core.A.addEventListener("formFieldCreationModeStarted",onFormFieldCreationModeStarted),core.A.addEventListener("toolModeUpdated",handleToolModeChange),core.A.addEventListener("annotationSelected",onAnnotationSelected),function(){core.A.removeEventListener("formFieldCreationModeStarted",onFormFieldCreationModeStarted),core.A.removeEventListener("annotationSelected",onAnnotationSelected),core.A.removeEventListener("toolModeUpdated",handleToolModeChange)}}),[]);(0,react.useEffect)((function(){if(isOpen)if(annotation){!function(annotation){var options=annotation.getFieldOptions();1===options.length&&""===options[0].value&&""===options[0].displayValue?setFieldOptions([]):setFieldOptions(options)}(annotation);var currentFlags=annotation.getFieldFlags(),_Annotations_WidgetFlags=FormFieldPanelContainer_Annotations.WidgetFlags,READ_ONLY=_Annotations_WidgetFlags.READ_ONLY,MULTILINE=_Annotations_WidgetFlags.MULTILINE,REQUIRED=_Annotations_WidgetFlags.REQUIRED,MULTI_SELECT=_Annotations_WidgetFlags.MULTI_SELECT,field=annotation.getField(),fieldName=field.name,radioButtons=fieldProperties.radioButtonGroups,isFieldNameValid=Boolean(fieldName),validationMessage=isFieldNameValid?"":"formField.formFieldPopup.invalidField.empty";setIsValid(isFieldNameValid),setFieldDimension({width:parseInt(annotation.Width),height:parseInt(annotation.Height)}),setFieldProperties((function(prev){return _object_spread_props(_object_spread({},prev),{name:fieldName,value:field.value,radioButtonGroups:_to_consumable_array(new Set(_to_consumable_array(radioButtons).concat(_to_consumable_array(formFieldCreationManager.getRadioButtonGroups()))))})})),setFieldFlags({ReadOnly:currentFlags[READ_ONLY]||!1,Multiline:currentFlags[MULTILINE]||!1,Required:currentFlags[REQUIRED]||!1,MultiSelect:currentFlags[MULTI_SELECT]||!1}),setIndicator({showIndicator:formFieldCreationManager.getShowIndicator(annotation),indicatorText:formFieldCreationManager.getIndicatorText(annotation)}),setPanelTitle(t("formField.formFieldPanel.".concat(field.getFieldType()))),setValidationMessage(validationMessage)}else handleToolModeChange(core.A.getToolMode())}),[isOpen,annotation]);var _obj,panelFields,panelFlags,shouldShowOptions,onFieldNameChange=(0,react.useCallback)((function(name){var validatedResponse=formFieldCreationManager.setFieldName(annotation,name);setIsValid(validatedResponse.isValid);var validationResponse=(0,mapValidationResponseToTranslation.A)(validatedResponse);setValidationMessage(validationResponse),setFieldProperties((function(previousFieldProperties){return _object_spread_props(_object_spread({},previousFieldProperties),{name})}))}),[annotation]),handleFlagChange=(0,react.useCallback)((function(value,flagName){if(setFieldFlags((function(previousFieldFlags){return _object_spread_props(_object_spread({},previousFieldFlags),_define_property({},FormFieldPanelContainer_Annotations.WidgetFlags[flagName],value))})),annotation)annotation.setFieldFlag(FormFieldPanelContainer_Annotations.WidgetFlags[flagName],value);else{var currentTool=core.A.getToolMode(),toolStyles=(0,getToolStyles.A)(currentTool.name),flags=_object_spread({},null==toolStyles?void 0:toolStyles.flags);flags[flagName]=value,(0,setToolStyles.A)(currentTool.name,"flags",flags)}}),[annotation]),onFieldValueChange=(0,react.useCallback)((function(value){if(setFieldProperties((function(previousFieldProperties){return _object_spread_props(_object_spread({},previousFieldProperties),{value})})),annotation)annotation.getField().setValue(value);else{var currentTool=core.A.getToolMode();(0,setToolStyles.A)(currentTool.name,"value",value)}}),[annotation]),onFieldOptionsChange=(0,react.useCallback)((function(options){annotation.setFieldOptions(options)}),[fieldOptions,annotation]),onToolOptionsChange=(0,react.useCallback)((function(options){core.A.getToolMode().defaults.options=options})),onShowFieldIndicatorChange=(0,react.useCallback)((function(showIndicator){if(setIndicator((function(previousIndicator){return _object_spread_props(_object_spread({},previousIndicator),{showIndicator})})),annotation)formFieldCreationManager.setShowIndicator(annotation,showIndicator);else{var currentTool=core.A.getToolMode();(0,setToolStyles.A)(currentTool.name,"showIndicator",showIndicator)}}),[annotation]),onFieldIndicatorTextChange=(0,react.useCallback)((function(indicatorText){if(setIndicator((function(previousIndicator){return _object_spread_props(_object_spread({},previousIndicator),{indicatorText})})),annotation)formFieldCreationManager.setIndicatorText(annotation,indicatorText);else{var currentTool=core.A.getToolMode();(0,setToolStyles.A)(currentTool.name,"indicatorText",indicatorText)}}),[annotation]),closeFormFieldEditPanel=(0,react.useCallback)((function(){closeAndReset()}),[]),onWidthChange=function(newWidth){if(annotation){var validatedWidth=validateDimension(newWidth,core.A.getPageWidth(core.A.getCurrentPage()),annotation.X);annotation.setWidth(validatedWidth),setFieldDimension((function(previousFieldDimension){return _object_spread_props(_object_spread({},previousFieldDimension),{width:validatedWidth})})),redrawAnnotation(annotation)}else{setFieldDimension((function(previousFieldDimension){return _object_spread_props(_object_spread({},previousFieldDimension),{width:newWidth})}));var currentTool=core.A.getToolMode();(0,setToolStyles.A)(currentTool.name,"Width",newWidth)}},onHeightChange=function(newHeight){if(annotation){var validatedHeight=validateDimension(newHeight,core.A.getPageHeight(core.A.getCurrentPage()),annotation.Y);annotation.setHeight(validatedHeight),setFieldDimension((function(previousFieldDimension){return _object_spread_props(_object_spread({},previousFieldDimension),{height:validatedHeight})})),redrawAnnotation(annotation)}else{setFieldDimension((function(previousFieldDimension){return _object_spread_props(_object_spread({},previousFieldDimension),{height:newHeight})}));var currentTool=core.A.getToolMode();(0,setToolStyles.A)(currentTool.name,"Height",newHeight)}},onCancelEmptyFieldName=(0,react.useCallback)((function(widgetAnnotation){widgetAnnotation?onFieldNameChange(widgetAnnotation.getField().name):deleteWidgetsInFormBuilderMode(widgetAnnotation),closeFormFieldEditPanel()}),[]),onCloseRadioButtonPanel=(0,react.useCallback)((function(){isValid&&-1===fieldProperties.radioButtonGroups.indexOf(fieldProperties.name)&&""!==fieldProperties.name&&setFieldProperties((function(previousFieldProperties){return _object_spread_props(_object_spread({},previousFieldProperties),{radioButtonGroups:[fieldProperties.name].concat(_to_consumable_array(previousFieldProperties.radioButtonGroups))})})),closeAndReset()}),[fieldProperties]),onSignatureOptionChange=(0,react.useCallback)((function(signatureOption){var value=signatureOption.value;if(annotation)formFieldCreationManager.setSignatureOption(annotation,value);else{var currentTool=core.A.getToolMode();(0,setToolStyles.A)(currentTool.name,"signatureType",value)}}),[annotation]),closeFormFieldPanel=function(){dispatch(actions.A.closeElement(dataElement.A.FORM_FIELD_PANEL))},fields=function(options){var onFieldNameChange=options.onFieldNameChange,onFieldValueChange=options.onFieldValueChange,fieldProperties=options.fieldProperties,onSignatureOptionChange=options.onSignatureOptionChange,getSignatureOption=options.getSignatureOption,annotation=options.annotation;return{NAME:{label:"formField.formFieldPopup.fieldName",onChange:onFieldNameChange,value:fieldProperties.name,required:!0,type:"text",focus:!0},VALUE:{label:"formField.formFieldPopup.fieldValue",onChange:onFieldValueChange,value:fieldProperties.value,type:"text"},RADIO_GROUP:{label:"formField.formFieldPopup.fieldName",onChange:onFieldNameChange,value:fieldProperties.name,required:!0,type:"select"},SIGNATURE_OPTION:{label:"formField.formFieldPopup.signatureOption",onChange:onSignatureOptionChange,value:getSignatureOption(annotation),required:!1,type:"signatureOption"}}}({onFieldNameChange,onFieldValueChange,fieldProperties,onSignatureOptionChange,getSignatureOption,annotation}),flags=function(handleFlagChange,fieldFlags){return{READ_ONLY:{label:"formField.formFieldPopup.readOnly",name:"READ_ONLY",onChange:handleFlagChange,isChecked:fieldFlags.ReadOnly},MULTI_LINE:{label:"formField.formFieldPopup.multiLine",name:"MULTILINE",onChange:handleFlagChange,isChecked:fieldFlags.Multiline},REQUIRED:{label:"formField.formFieldPopup.required",name:"REQUIRED",onChange:handleFlagChange,isChecked:fieldFlags.Required},MULTI_SELECT:{name:"MULTI_SELECT",label:"formField.formFieldPopup.multiSelect",onChange:handleFlagChange,isChecked:fieldFlags.MultiSelect}}}(handleFlagChange,fieldFlags),indicatorProps={label:"formField.formFieldPopup.includeFieldIndicator",toggleIndicator:onShowFieldIndicatorChange,isChecked:indicator.showIndicator,onChange:onFieldIndicatorTextChange,value:indicator.indicatorText};return react.createElement(DataElementWrapper.A,{dataElement:dataElement.A.FORM_FIELD_PANEL,className:classnames_default()((_obj={Panel:!0,FormFieldPanel:!0},_define_property(_obj,mobilePanelSize,isMobile),_define_property(_obj,"modular-ui-panel",customizableUI),_obj))},!isInDesktopOnlyMode&&isMobile&&react.createElement("div",{className:"close-container"},react.createElement("button",{className:"close-icon-container",onClick:closeFormFieldPanel},react.createElement(Icon.A,{glyph:"ic_close_black_24px",className:"close-icon"}))),(panelFields=function(annotation,fields,isSignatureOptionsDropdownDisabled){var currentTool=core.A.getToolMode(),panelFields=[];switch(!0){case _instanceof(annotation,Annotations.RadioButtonWidgetAnnotation):panelFields.push(fields.RADIO_GROUP);break;case!!annotation:panelFields.push(fields.NAME)}switch(!0){case _instanceof(annotation,Annotations.SignatureWidgetAnnotation)&&!isSignatureOptionsDropdownDisabled:case _instanceof(currentTool,Tools.SignatureFormFieldCreateTool)&&!isSignatureOptionsDropdownDisabled:panelFields.push(fields.SIGNATURE_OPTION);break;case _instanceof(annotation,Annotations.TextWidgetAnnotation):case _instanceof(currentTool,Tools.TextFormFieldCreateTool):panelFields.push(fields.VALUE)}return panelFields}(annotation,fields,isSignatureOptionsDropdownDisabled),panelFlags=function(annotation,flags){var fieldFlags=[flags.READ_ONLY,flags.REQUIRED],currentTool=core.A.getToolMode();switch(!0){case _instanceof(annotation,Annotations.TextWidgetAnnotation):case _instanceof(currentTool,Tools.TextFormFieldCreateTool):fieldFlags.push(flags.MULTI_LINE);break;case _instanceof(annotation,Annotations.ListWidgetAnnotation):case _instanceof(currentTool,Tools.ListBoxFormFieldCreateTool):fieldFlags.push(flags.MULTI_SELECT)}return fieldFlags}(annotation,flags),shouldShowOptions=function(annotation){var currentTool=core.A.getToolMode();switch(!0){case _instanceof(annotation,Annotations.ListWidgetAnnotation):case _instanceof(annotation,Annotations.ChoiceWidgetAnnotation):case _instanceof(currentTool,Tools.ComboBoxFormFieldCreateTool):case _instanceof(currentTool,Tools.ListBoxFormFieldCreateTool):return!0;default:return!1}}(annotation),react.createElement(FormFieldPanel.A,{width:fieldDimension.width,height:fieldDimension.height,isValid,panelTitle,fields:panelFields,flags:panelFlags,validationMessage,radioButtonGroups:fieldProperties.radioButtonGroups,onFieldOptionsChange,fieldOptions,onToolOptionsChange,toolOptions,annotation,selectedRadioGroup:fieldProperties.name,redrawAnnotation,onWidthChange,onHeightChange,indicator:indicatorProps,onCancelEmptyFieldName,closeFormFieldEditPanel:onCloseRadioButtonPanel,shouldShowOptions})))}));FormFieldPanelContainer_FormFieldPanelContainer.displayName="FormFieldPanelContainer",FormFieldPanelContainer_FormFieldPanelContainer.propTypes=propTypes;const FormFieldPanel_FormFieldPanelContainer=FormFieldPanelContainer_FormFieldPanelContainer;FormFieldPanelContainer_FormFieldPanelContainer.__docgenInfo={description:"",methods:[],displayName:"FormFieldPanelContainer",props:{annotation:{description:"",type:{name:"object"},required:!1}}};const components_FormFieldPanel=FormFieldPanel_FormFieldPanelContainer;FormFieldPanelContainer.__docgenInfo={description:"",methods:[],displayName:"FormFieldPanelContainer",props:{annotation:{description:"",type:{name:"object"},required:!1}}}},"./src/helpers/mapValidationResponseToTranslation.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{function __WEBPACK_DEFAULT_EXPORT__(param){switch(param.errorType){case"empty":return"formField.formFieldPopup.invalidField.empty";case"duplicate":return"formField.formFieldPopup.invalidField.duplicate"}}__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__})}}]);