"use strict";(self.webpackChunkwebviewer_ui=self.webpackChunkwebviewer_ui||[]).push([[3813],{"./src/components/ScaleOverlay/ScaleOverlayContainer.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>ScaleOverlay_ScaleOverlayContainer});var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),actions=__webpack_require__("./src/redux/actions/index.js"),react=__webpack_require__("./node_modules/react/index.js"),Button=__webpack_require__("./src/components/Button/index.js"),Icon=__webpack_require__("./src/components/Icon/index.js"),ScaleSelector=__webpack_require__("./src/components/ScaleOverlay/ScaleSelector.js"),prop_types=__webpack_require__("./node_modules/prop-types/index.js"),prop_types_default=__webpack_require__.n(prop_types),useTranslation=__webpack_require__("./node_modules/react-i18next/dist/es/useTranslation.js"),useFocusHandler=__webpack_require__("./src/hooks/useFocusHandler/index.js");const propTypes={scales:prop_types_default().arrayOf(prop_types_default().object).isRequired,selectedScales:prop_types_default().arrayOf(prop_types_default().string).isRequired,onScaleSelected:prop_types_default().func.isRequired,onAddingNewScale:prop_types_default().func.isRequired},ScaleHeader=({scales,selectedScales,onScaleSelected,onAddingNewScale})=>{const[t]=(0,useTranslation.B)(),onClickFocusWrapped=(0,useFocusHandler.A)(onAddingNewScale);return(0,jsx_runtime.jsxs)("div",{className:"scale-overlay-header",children:[(0,jsx_runtime.jsx)(Icon.A,{glyph:"ic-calibrate",className:"scale-overlay-icon"}),(0,jsx_runtime.jsx)("h4",{id:"scale-dropdown-label",className:"scale-overlay-title",children:t("option.measurementOption.scale")}),scales.length?(0,jsx_runtime.jsx)(ScaleSelector.A,{scales,selectedScales,onScaleSelected,onAddingNewScale,ariaLabelledBy:"scale-dropdown-label"}):(0,jsx_runtime.jsx)(Button.A,{className:"add-new-scale",onClick:onClickFocusWrapped,dataElement:"addNewScale",label:t("option.measurement.scaleOverlay.addNewScale")})]})};ScaleHeader.propTypes=propTypes;const ScaleOverlay_ScaleHeader=ScaleHeader;ScaleHeader.__docgenInfo={description:"",methods:[],displayName:"ScaleHeader",props:{scales:{description:"",type:{name:"arrayOf",value:{name:"object"}},required:!0},selectedScales:{description:"",type:{name:"arrayOf",value:{name:"string"}},required:!0},onScaleSelected:{description:"",type:{name:"func"},required:!0},onAddingNewScale:{description:"",type:{name:"func"},required:!0}}};var core=__webpack_require__("./src/core/index.js"),MeasurementDetail=__webpack_require__("./src/components/ScaleOverlay/MeasurementDetail.js"),selectors=__webpack_require__("./src/redux/selectors/index.js"),es=__webpack_require__("./node_modules/react-redux/es/index.js");const Scale=window.Core.Scale,CalibrationOverlayPropTypes={tempScale:prop_types_default().string,onCancelCalibrationMode:prop_types_default().func,onApplyCalibration:prop_types_default().func},CalibrationOverlay=({tempScale,onCancelCalibrationMode,onApplyCalibration})=>{const[t]=(0,useTranslation.B)(),isCalibrationPopupOpen=(0,es.d4)((state=>selectors.A.isElementOpen(state,"annotationPopup"))),canApplyCalibration=isCalibrationPopupOpen&&tempScale;return(0,jsx_runtime.jsxs)("div",{className:"scale-overlay-calibrate",children:[(0,jsx_runtime.jsxs)("div",{className:"scale-overlay-header",children:[(0,jsx_runtime.jsx)(Icon.A,{glyph:"ic-calibrate",className:"scale-overlay-icon"}),(0,jsx_runtime.jsx)("div",{className:"scale-overlay-title",children:t("option.measurement.scaleModal.calibrate")})]}),(0,jsx_runtime.jsx)("div",{className:"scale-overlay-content",children:t(canApplyCalibration?"option.measurement.scaleOverlay.inputKnowDimension":"option.measurement.scaleOverlay.selectTwoPoints")}),(0,jsx_runtime.jsx)("div",{className:"divider"}),(0,jsx_runtime.jsxs)("div",{className:"scale-overlay-footer",children:[(0,jsx_runtime.jsx)("button",{className:"calibration-cancel",onMouseDown:onCancelCalibrationMode,children:t("action.cancel")}),(0,jsx_runtime.jsx)("button",{className:"calibration-apply",disabled:!(isCalibrationPopupOpen&&tempScale&&new Scale(tempScale).worldScale?.value>0),"data-element":"calibrationApply",onMouseDown:onApplyCalibration,onTouchStart:onApplyCalibration,children:t("action.apply")})]})]})};CalibrationOverlay.propTypes=CalibrationOverlayPropTypes;const ScaleOverlay_CalibrationOverlay=CalibrationOverlay;CalibrationOverlay.__docgenInfo={description:"",methods:[],displayName:"CalibrationOverlay",props:{tempScale:{description:"",type:{name:"string"},required:!1},onCancelCalibrationMode:{description:"",type:{name:"func"},required:!1},onApplyCalibration:{description:"",type:{name:"func"},required:!1}}};__webpack_require__("./src/components/ScaleOverlay/ScaleOverlay.scss");const ScaleOverlay_Scale=window.Core.Scale,ScaleOverlay_propTypes={annotations:prop_types_default().arrayOf(prop_types_default().object).isRequired,selectedTool:prop_types_default().object,updateIsCalibration:prop_types_default().func.isRequired,enableOrDisableToolElements:prop_types_default().func.isRequired,onScaleSelected:prop_types_default().func.isRequired,onCancelCalibrationMode:prop_types_default().func.isRequired,onApplyCalibration:prop_types_default().func.isRequired,onAddingNewScale:prop_types_default().func.isRequired},ScaleOverlay_ScaleOverlay=({annotations,selectedTool,updateIsCalibration,enableOrDisableToolElements,onScaleSelected,onCancelCalibrationMode,onApplyCalibration,onAddingNewScale,forceUpdate})=>{const[{isCalibration,tempScale,previousToolName="AnnotationCreateDistanceMeasurement",isFractionalUnit},activeToolName]=(0,es.d4)((state=>[selectors.A.getCalibrationInfo(state),selectors.A.getActiveToolName(state)]),es.bN),[scales,setScales]=(0,react.useState)(core.A.getScales()),shouldShowMeasurementDetail=!(!Object.keys(scales).length||!selectedTool&&(!annotations.length||annotations.length>1));(0,react.useEffect)((()=>{forceUpdate()}),[scales]),(0,react.useEffect)((()=>{const onScaleUpdated=newScales=>{setScales(newScales)},updateScales=()=>{setScales(core.A.getScales())},onCreateAnnotationWithNoScale=()=>{onAddingNewScale()};return core.A.addEventListener("scaleUpdated",onScaleUpdated),core.A.addEventListener("createAnnotationWithNoScale",onCreateAnnotationWithNoScale),core.A.addEventListener("annotationsLoaded",updateScales),core.A.addEventListener("annotationChanged",updateScales),()=>{core.A.removeEventListener("scaleUpdated",onScaleUpdated),core.A.removeEventListener("createAnnotationWithNoScale",onCreateAnnotationWithNoScale),core.A.removeEventListener("annotationsLoaded",updateScales),core.A.removeEventListener("annotationChanged",updateScales)}}),[]),(0,react.useEffect)((()=>{"AnnotationCreateCalibrationMeasurement"===activeToolName?(!isCalibration&&updateIsCalibration(!0),enableOrDisableToolElements(!0)):(updateIsCalibration(!1),enableOrDisableToolElements(!1))}),[activeToolName,updateIsCalibration,enableOrDisableToolElements]);const selectedScales=(0,react.useMemo)((()=>{const scales=new Set;return[...annotations,selectedTool].forEach((measurementItem=>{const scale=measurementItem?.Measure?.scale;scale&&!scales.has(scale)&&scales.add(scale)})),[...scales]}),[annotations,selectedTool,scales]),totalScales=Object.keys(scales).map((scale=>new ScaleOverlay_Scale(scale))),canModifyMeasurement=1===annotations.length&&core.A.canModify(annotations[0]);return isCalibration?(0,jsx_runtime.jsx)(ScaleOverlay_CalibrationOverlay,{tempScale,onCancelCalibrationMode:()=>onCancelCalibrationMode(previousToolName),onApplyCalibration:()=>onApplyCalibration(previousToolName,tempScale,isFractionalUnit),previousToolName}):(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(ScaleOverlay_ScaleHeader,{scales:totalScales,selectedScales,onScaleSelected,onAddingNewScale}),shouldShowMeasurementDetail&&(0,jsx_runtime.jsx)(MeasurementDetail.A,{annotation:annotations.length>1?null:annotations[0]||null,selectedTool,isOpen:!0,canModify:canModifyMeasurement})]})};ScaleOverlay_ScaleOverlay.propTypes=ScaleOverlay_propTypes;const components_ScaleOverlay_ScaleOverlay=(0,react.memo)(ScaleOverlay_ScaleOverlay);ScaleOverlay_ScaleOverlay.__docgenInfo={description:"",methods:[],displayName:"ScaleOverlay",props:{annotations:{description:"",type:{name:"arrayOf",value:{name:"object"}},required:!0},selectedTool:{description:"",type:{name:"object"},required:!1},updateIsCalibration:{description:"",type:{name:"func"},required:!0},enableOrDisableToolElements:{description:"",type:{name:"func"},required:!0},onScaleSelected:{description:"",type:{name:"func"},required:!0},onCancelCalibrationMode:{description:"",type:{name:"func"},required:!0},onApplyCalibration:{description:"",type:{name:"func"},required:!0},onAddingNewScale:{description:"",type:{name:"func"},required:!0}}};var classnames=__webpack_require__("./node_modules/classnames/index.js"),classnames_default=__webpack_require__.n(classnames),cjs=__webpack_require__("./node_modules/react-draggable/build/cjs/cjs.js"),cjs_default=__webpack_require__.n(cjs),dataElement=__webpack_require__("./src/constants/dataElement.js"),MobilePopupWrapper=__webpack_require__("./src/components/MobilePopupWrapper/index.js"),getDeviceSize=__webpack_require__("./src/helpers/getDeviceSize.js");const ScaleOverlayContainer_Scale=window.Core.Scale,measurementDataElements=["distanceToolGroupButton","arcMeasurementToolGroupButton","perimeterToolGroupButton","areaToolGroupButton","rectangleAreaToolGroupButton","ellipseAreaToolGroupButton","countToolGroupButton","cloudyRectangleAreaToolGroupButton","arcToolGroupButton"],ScaleOverlayContainer=({annotations,selectedTool})=>{const dispatch=(0,es.wA)(),[t]=(0,useTranslation.B)(),[isDisabled,isOpen,initialPosition]=(0,es.d4)((state=>[selectors.A.isElementDisabled(state,dataElement.A.SCALE_OVERLAY_CONTAINER),selectors.A.isElementOpen(state,dataElement.A.SCALE_OVERLAY_CONTAINER),selectors.A.getScaleOverlayPosition(state)])),[position,setPosition]=(0,react.useState)({x:0,y:0}),[,forceUpdate]=(0,react.useReducer)((x=>x+1),0,(()=>0)),[documentContainerWidth,documentContainerHeight]=(0,es.d4)((state=>[selectors.A.getDocumentContainerWidth(state),selectors.A.getDocumentContainerHeight(state)])),containerRef=(0,react.useRef)(null),documentElement=core.A.getViewerElement(),documentContainerElement=core.A.getScrollViewElement(),style=(()=>{const initialPositionParts=initialPosition.split("-"),offset={left:0,top:0};if("top"===initialPositionParts[0])offset.top=documentElement?.offsetTop+10||85;else{let containerHeight=400;containerRef?.current&&(containerHeight=containerRef.current.getBoundingClientRect().height),offset.top=documentContainerHeight+documentContainerElement?.offsetTop-10-containerHeight||85}if("right"===initialPositionParts[1])offset.left=.666*documentContainerWidth,documentElement&&containerRef?.current&&(offset.left=Math.min(documentElement?.offsetLeft+documentElement?.offsetWidth+10||offset.left,documentContainerWidth-containerRef.current.getBoundingClientRect().width-10));else{if(documentElement&&containerRef?.current){const containerWidth=containerRef.current.getBoundingClientRect().width;offset.left=documentElement?.offsetLeft-10-containerWidth||10,documentContainerElement&&offset.left<documentContainerElement.offsetLeft&&(offset.left=documentContainerElement.offsetLeft+10)}(!offset.left||isNaN(offset.left)||offset.left<0)&&(offset.left=10)}return offset})();(0,react.useEffect)((()=>{setPosition({x:0,y:0})}),[initialPosition]);const containerBounds=()=>{const initialPositionParts=initialPosition.split("-"),bounds={top:0,bottom:0,left:0,right:0};return"top"===initialPositionParts[0]?(bounds.top=0,bounds.bottom=documentContainerHeight-20,containerRef.current?bounds.bottom-=containerRef.current.getBoundingClientRect().height:bounds.bottom-=85):(bounds.top=20-documentContainerHeight,containerRef.current?bounds.top+=containerRef.current.getBoundingClientRect().height:bounds.top+=85,bounds.bottom=0),"right"===initialPositionParts[1]?(bounds.left=-documentContainerWidth,bounds.right=documentContainerWidth/3,style&&(bounds.right=documentContainerWidth-style.left)):(bounds.left=documentContainerElement?.offsetLeft,style&&(bounds.left=documentContainerElement?.offsetLeft-style.left+10),bounds.right=documentContainerWidth-10-35,style&&(bounds.right-=style.left)),bounds},syncDraggablePosition=(e,{x,y})=>{setPosition({x,y})},updateIsCalibration=(0,react.useCallback)((isCalibration=>{dispatch(actions.A.updateCalibrationInfo({isCalibration}))}),[]),enableOrDisableToolElements=(0,react.useCallback)((disabled=>{measurementDataElements.forEach((dataElement=>{dispatch(actions.A.setCustomElementOverrides(dataElement,{disabled}))}))}),[]),openScaleModal=(0,react.useCallback)((scale=>{scale&&(scale=>{dispatch(actions.A.setSelectedScale(scale))})(new ScaleOverlayContainer_Scale(scale)),dispatch(actions.A.openElements([dataElement.A.SCALE_MODAL])),dispatch(actions.A.setIsAddingNewScale())}),[]),onScaleSelected=(0,react.useCallback)(((selectedScales,scale)=>{const newScale=new ScaleOverlayContainer_Scale(scale);if(1===selectedScales.length&&selectedScales.includes(scale))openScaleModal(scale);else{const applyTo=[...annotations,selectedTool],scaleToDelete=core.A.getDocumentViewer().getMeasurementManager().getOldScalesToDeleteAfterApplying({scale:newScale,applyTo})[0],createAndApplyScale=()=>{core.A.createAndApplyScale(newScale,[...annotations,selectedTool])};scaleToDelete?confirmScaleToDelete(scaleToDelete,createAndApplyScale):createAndApplyScale()}}),[annotations,selectedTool]),confirmScaleToDelete=(scaleToDelete,createAndApplyScale)=>{const warning={message:(0,jsx_runtime.jsxs)("div",{className:"customMessage",children:[(0,jsx_runtime.jsx)("p",{children:(0,jsx_runtime.jsxs)("span",{children:[t("option.measurement.deleteScaleModal.ifChangeScale"),(0,jsx_runtime.jsx)("b",{children:scaleToDelete}),t("option.measurement.deleteScaleModal.notUsedWillDelete")]})}),(0,jsx_runtime.jsx)("p",{children:(0,jsx_runtime.jsx)("span",{children:t("option.measurement.deleteScaleModal.ifToContinue")})})]}),title:`${t("option.measurement.deleteScaleModal.deleteScale")} ${scaleToDelete}`,confirmBtnText:t("action.confirm"),onConfirm:()=>createAndApplyScale()};dispatch(actions.A.showWarningMessage(warning))},onCancelCalibrationMode=(0,react.useCallback)((previousToolName=>{core.A.setToolMode(previousToolName),updateIsCalibration(!1),dispatch(actions.A.setIsElementHidden(dataElement.A.SCALE_MODAL,!1))}),[]),onApplyCalibration=(0,react.useCallback)(((previousToolName,tempScale,isFractionalUnit)=>{dispatch(actions.A.updateCalibrationInfo({isCalibration:!1,tempScale,isFractionalUnit})),dispatch(actions.A.setIsElementHidden(dataElement.A.SCALE_MODAL,!1)),core.A.setToolMode(previousToolName),core.A.deleteAnnotations([annotations[0]])}),[annotations]),onAddingNewScale=(0,react.useCallback)((()=>{openScaleModal(),dispatch(actions.A.setIsAddingNewScale(!0))}),[]);return(0,getDeviceSize.IS)()?!isDisabled&&(0,jsx_runtime.jsx)(MobilePopupWrapper.A,{children:(0,jsx_runtime.jsx)(components_ScaleOverlay_ScaleOverlay,{annotations,selectedTool,updateIsCalibration,enableOrDisableToolElements,onScaleSelected,onCancelCalibrationMode,onApplyCalibration,onAddingNewScale,forceUpdate,tabIndex:0})}):!isDisabled&&(0,jsx_runtime.jsx)(cjs_default(),{position,bounds:containerBounds(),onDrag:syncDraggablePosition,onStop:syncDraggablePosition,cancel:".scale-overlay-selector, .add-new-scale",children:(0,jsx_runtime.jsx)("div",{className:classnames_default()({Overlay:!0,ScaleOverlay:!0,open:isOpen,closed:!isOpen}),"data-element":dataElement.A.SCALE_OVERLAY_CONTAINER,style,ref:containerRef,children:(0,jsx_runtime.jsx)(components_ScaleOverlay_ScaleOverlay,{annotations,selectedTool,updateIsCalibration,enableOrDisableToolElements,onScaleSelected,onCancelCalibrationMode,onApplyCalibration,onAddingNewScale,forceUpdate,tabIndex:0})})})},ScaleOverlay_ScaleOverlayContainer=ScaleOverlayContainer;ScaleOverlayContainer.__docgenInfo={description:"",methods:[],displayName:"ScaleOverlayContainer"}},"./src/components/ScaleOverlay/ScaleSelector.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/jsx-runtime.js"),classnames__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/classnames/index.js"),classnames__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_1__),components_Icon__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/components/Icon/index.js"),components_DataElementWrapper__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/components/DataElementWrapper/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_11__=__webpack_require__("./node_modules/prop-types/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_11___default=__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_11__),react__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/react/index.js"),react_i18next__WEBPACK_IMPORTED_MODULE_12__=__webpack_require__("./node_modules/react-i18next/dist/es/useTranslation.js"),actions__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./src/redux/actions/index.js"),react_redux__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/react-redux/es/index.js"),selectors__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./src/redux/selectors/index.js"),core__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("./src/core/index.js"),hooks_useOnClickOutside__WEBPACK_IMPORTED_MODULE_9__=__webpack_require__("./src/hooks/useOnClickOutside.js"),components_Button__WEBPACK_IMPORTED_MODULE_10__=__webpack_require__("./src/components/Button/index.js");const propTypes={scales:prop_types__WEBPACK_IMPORTED_MODULE_11___default().arrayOf(prop_types__WEBPACK_IMPORTED_MODULE_11___default().object).isRequired,selectedScales:prop_types__WEBPACK_IMPORTED_MODULE_11___default().arrayOf(prop_types__WEBPACK_IMPORTED_MODULE_11___default().string).isRequired,onScaleSelected:prop_types__WEBPACK_IMPORTED_MODULE_11___default().func.isRequired,onAddingNewScale:prop_types__WEBPACK_IMPORTED_MODULE_11___default().func.isRequired,ariaLabelledBy:prop_types__WEBPACK_IMPORTED_MODULE_11___default().string},Scale=window.Core.Scale,ScaleSelector=({scales=[],selectedScales=[],onScaleSelected,onAddingNewScale,ariaLabelledBy})=>{const[t]=(0,react_i18next__WEBPACK_IMPORTED_MODULE_12__.B)(),dispatch=(0,react_redux__WEBPACK_IMPORTED_MODULE_6__.wA)(),[scalesInfo,setScalesInfo]=(0,react__WEBPACK_IMPORTED_MODULE_4__.useState)([]);(0,react__WEBPACK_IMPORTED_MODULE_4__.useEffect)((()=>{if(!scales||0===scales.length)return void setScalesInfo([]);const scalesInfo=getScalesInfo(scales||[]);setScalesInfo(scalesInfo)}),[scales]);const isMultipleScalesMode=(0,react_redux__WEBPACK_IMPORTED_MODULE_6__.d4)((state=>selectors__WEBPACK_IMPORTED_MODULE_7__.A.getIsMultipleScalesMode(state))),isMultipleScales=selectedScales.length>1,getScalesInfo=scales=>{const scalesInfo=[],coreScales=core__WEBPACK_IMPORTED_MODULE_8__.A.getScales();return scales&&0!==scales.length&&coreScales&&0!==Object.keys(coreScales).length?(scales.forEach((scale=>{const coreScaleKey=scale.toString(),scaleData=coreScales[coreScaleKey];if(!scaleData||0===scaleData.length)return void console.warn(`No measurements found for scale ${coreScaleKey}`);const measurements=[],relatedPages=new Set;let canDelete=!0;scaleData.forEach((measurementItem=>{measurementItem instanceof window.Core.Annotations.Annotation&&(relatedPages.add(measurementItem.PageNumber),measurements.push(measurementItem),core__WEBPACK_IMPORTED_MODULE_8__.A.canModify(measurementItem)||(canDelete=!1))}));scalesInfo.some((info=>info.title===coreScaleKey))||scalesInfo.push({scale,title:scale.toString(),measurementsNum:measurements.length,pages:[...relatedPages],canDelete})})),scalesInfo):scalesInfo},openScaleDeletionModal=scaleInfo=>{if(!scaleInfo)return;const warning={message:!!scaleInfo.pages.length?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{className:"customMessage",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("p",{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("span",{children:[t("option.measurement.deleteScaleModal.scaleIsOn-delete-info"),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("b",{children:` ${t("option.measurement.deleteScaleModal.page-delete-info")} ${scaleInfo.pages.join(", ")} `}),t("option.measurement.deleteScaleModal.appliedTo-delete-info"),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("b",{children:` ${scaleInfo.measurementsNum} ${scaleInfo.measurementsNum>1?t("option.measurement.deleteScaleModal.measurements"):t("option.measurement.deleteScaleModal.measurement")}.`})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("span",{children:" "}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("span",{children:[t("option.measurement.deleteScaleModal.deletionIs"),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("b",{children:` ${t("option.measurement.deleteScaleModal.irreversible")} `}),t("option.measurement.deleteScaleModal.willDeleteMeasurement")]})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("p",{children:t("option.measurement.deleteScaleModal.confirmDelete")})]}):(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{className:"customMessage",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("p",{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("span",{children:[t("option.measurement.deleteScaleModal.confirmDelete"),t("option.measurement.deleteScaleModal.thisCantBeUndone")]})})}),title:`${t("option.measurement.deleteScaleModal.deleteScale")} ${scaleInfo.title}`,confirmBtnText:t("action.confirm"),onConfirm:()=>core__WEBPACK_IMPORTED_MODULE_8__.A.deleteScale(scaleInfo.scale)};dispatch(actions__WEBPACK_IMPORTED_MODULE_5__.A.showWarningMessage(warning))},renderScale=scale=>{const precision=core__WEBPACK_IMPORTED_MODULE_8__.A.getScalePrecision(scale),scaleDisplay=`${Scale.getFormattedValue(scale.pageScale.value,scale.pageScale.unit,precision,!1)} = ${Scale.getFormattedValue(scale.worldScale.value,scale.worldScale.unit,precision,!1)}`;return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{children:scaleDisplay})};let title=t("option.measurement.scaleOverlay.multipleScales");if(selectedScales.length&&!isMultipleScales){const selectedScale=new Scale(selectedScales[0]);title=renderScale(selectedScale)}const[isDropDownOpen,setOpenDropDown]=(0,react__WEBPACK_IMPORTED_MODULE_4__.useState)(!1),toggleDropdown=()=>{setOpenDropDown((prevValue=>!prevValue))},selectorRef=(0,react__WEBPACK_IMPORTED_MODULE_4__.useRef)(null);(0,hooks_useOnClickOutside__WEBPACK_IMPORTED_MODULE_9__.A)(selectorRef,(()=>{setOpenDropDown(!1)}));return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(components_DataElementWrapper__WEBPACK_IMPORTED_MODULE_3__.A,{className:"scale-overlay-selector",dataElement:"scaleSelector",tabIndex:-1,ref:selectorRef,onKeyDown:e=>{"Enter"!==e.key&&" "!==e.key||toggleDropdown()},onClick:toggleDropdown,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{"data-testid":"scale-selector",className:"scale-overlay-selection","aria-expanded":isDropDownOpen,"aria-labelledby":ariaLabelledBy,"aria-controls":"scale-overlay-dropdown",role:"combobox",tabIndex:0,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{className:"scale-overlay-item",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{className:"scale-overlay-name",children:title}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{className:"scale-overlay-arrow",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(components_Icon__WEBPACK_IMPORTED_MODULE_2__.A,{glyph:"icon-chevron-down",ariaHidden:!0})})]})}),isDropDownOpen&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("ul",{id:"scale-overlay-dropdown",className:classnames__WEBPACK_IMPORTED_MODULE_1___default()("scale-overlay-list"),children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("li",{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{className:"scale-overlay-name",children:title}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{className:"scale-overlay-arrow",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("button",{className:"scale-overlay-selected-arrow",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(components_Icon__WEBPACK_IMPORTED_MODULE_2__.A,{glyph:"icon-chevron-up",ariaHidden:!0})})})]}),scalesInfo.map((scaleInfo=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("li",{className:classnames__WEBPACK_IMPORTED_MODULE_1___default()({'className="scale-overlay-item':!0,"option-selected":selectedScales.includes(scaleInfo.title)}),children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("button",{className:classnames__WEBPACK_IMPORTED_MODULE_1___default()({options:!0}),onClick:()=>onScaleSelected(selectedScales,scaleInfo.title),onKeyDown:e=>{"Enter"!==e.key&&" "!==e.key||(e.preventDefault(),onScaleSelected(selectedScales,scaleInfo.title))},children:renderScale(scaleInfo.scale)}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("button",{className:"delete",tabIndex:0,onClick:e=>{e.preventDefault(),e.stopPropagation(),openScaleDeletionModal(scaleInfo)},onKeyDown:e=>{"Enter"!==e.key&&" "!==e.key||(e.preventDefault(),openScaleDeletionModal(scaleInfo))},disabled:scalesInfo.length<=1||!scaleInfo.canDelete,"aria-label":`${t("action.delete")} ${scaleInfo.title}`,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(components_Icon__WEBPACK_IMPORTED_MODULE_2__.A,{glyph:"icon-delete-line"})})]},scaleInfo.title))),isMultipleScalesMode&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("li",{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(components_Button__WEBPACK_IMPORTED_MODULE_10__.A,{onClick:onAddingNewScale,label:t("option.measurement.scaleOverlay.addNewScale"),className:"add-new-scale"})})]})]})};ScaleSelector.propTypes=propTypes;const __WEBPACK_DEFAULT_EXPORT__=ScaleSelector;ScaleSelector.__docgenInfo={description:"",methods:[],displayName:"ScaleSelector",props:{scales:{defaultValue:{value:"[]",computed:!1},description:"",type:{name:"arrayOf",value:{name:"object"}},required:!1},selectedScales:{defaultValue:{value:"[]",computed:!1},description:"",type:{name:"arrayOf",value:{name:"string"}},required:!1},onScaleSelected:{description:"",type:{name:"func"},required:!0},onAddingNewScale:{description:"",type:{name:"func"},required:!0},ariaLabelledBy:{description:"",type:{name:"string"},required:!1}}}}}]);