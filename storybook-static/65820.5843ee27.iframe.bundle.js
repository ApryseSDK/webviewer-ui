"use strict";(self.webpackChunkwebviewer_ui=self.webpackChunkwebviewer_ui||[]).push([[65820],{"./src/components/ModularComponents/PresetButton/buttons/SheetEditor/CellFormatButton.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>SheetEditor_CellFormatButton});var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),react=__webpack_require__("./node_modules/react/index.js"),ActionButton=__webpack_require__("./src/components/ActionButton/index.js"),prop_types=__webpack_require__("./node_modules/prop-types/index.js"),prop_types_default=__webpack_require__.n(prop_types),FlyoutItemContainer=__webpack_require__("./src/components/ModularComponents/FlyoutItemContainer/index.js"),menuItems=__webpack_require__("./src/components/ModularComponents/Helpers/menuItems.js"),es=__webpack_require__("./node_modules/react-redux/es/index.js"),selectors=__webpack_require__("./src/redux/selectors/index.js"),core=__webpack_require__("./src/core/index.js"),spreadsheetEditor=__webpack_require__("./src/constants/spreadsheetEditor.js");const regexOfValidFormatstring=/^([^\d#,.%]{0,10}[#0,]+)(\.0+)?([^\d]{0,10})$/,isFinancialFormat=formatString=>/^#,##0(\.0+)?;\(#,##0(\.0+)?\)$/.test(formatString),isAccountingFormat=formatString=>/^_\(\$\* #,##0(\.0+)?_\);_\(\$\* \(#,##0(\.0+)?\);$/.test(formatString);const adjustDecimalForSemicolonSeparatedFormat=(formatString,options={preserveTrailingSemicolon:!1,adjustDecimalFunction:void 0})=>{if(!options.adjustDecimalFunction||!formatString.includes(";"))return formatString;const{preserveTrailingSemicolon=!1,adjustDecimalFunction}=options,hasTrailingSemicolon=preserveTrailingSemicolon&&formatString.endsWith(";"),sanitizedFormat=preserveTrailingSemicolon?formatString.replace(/;$/,""):formatString,[positive,negative]=sanitizedFormat.split(";"),newPositive=adjustDecimalFunction(positive);let result=`${newPositive};${negative?adjustDecimalFunction(negative):newPositive}`;return hasTrailingSemicolon&&(result+=";"),result},addOneDecimalPlace=formatString=>formatString.replace(/(0)(\.0+)?/,((_,intZero,decimalPart)=>decimalPart?`${intZero}.${"0".repeat(decimalPart.length-1+1)}`:`${intZero}.0`)),removeOneDecimalPlace=formatString=>{const match=formatString.match(regexOfValidFormatstring);if(!match||match.length<2)return formatString;const integerPart=match[1];let decimalPart=match[2]||"";const suffix=match[3]||"";return decimalPart?(decimalPart=decimalPart.slice(0,-1),"."===decimalPart&&(decimalPart=""),`${integerPart}${decimalPart}${suffix}`):formatString};function adjustDecimalOnFormatString(formatString,type){if(function cannotBeAdjustedWithDecimal(formatString){const isQuoted=/".+?"/.test(formatString),isAccounting=isAccountingFormat(formatString),isFinancial=isFinancialFormat(formatString),hasSpecialSymbols=/[_*@]/.test(formatString),hasSemicolon=formatString?.includes(";"),isGeneral="general"===formatString.trim().toLowerCase(),isDateLike=/\b([ymdhs])\1*\b/i.test(formatString);return!formatString||isGeneral||isDateLike||isQuoted||hasSemicolon&&!isFinancial&&!isAccounting||hasSpecialSymbols&&!isAccounting}(formatString))return formatString;const adjustDecimalFunction="increaseDecimalFormat"===type?addOneDecimalPlace:removeOneDecimalPlace;return isFinancialFormat(formatString)?adjustDecimalForSemicolonSeparatedFormat(formatString,{adjustDecimalFunction}):isAccountingFormat(formatString)?adjustDecimalForSemicolonSeparatedFormat(formatString,{preserveTrailingSemicolon:!0,adjustDecimalFunction}):adjustDecimalFunction(formatString)}const helpers_setCellFormatString=function setCellFormatString(formatType){let formatString;if(formatString="decreaseDecimalFormat"===formatType||"increaseDecimalFormat"===formatType?function getDecimalAdjustedFormatString(type){const cell=core.A.getDocumentViewer().getSpreadsheetEditorManager().getSelectedCells()[0],cellStyle=cell.getStyle();if(!cellStyle)return;const currentFormatString=cellStyle.getDataFormatString();let newFormatString;return"General"===currentFormatString&&!Number.isNaN(cell.numericCellValue)&&(newFormatString="#0"),newFormatString=adjustDecimalOnFormatString(newFormatString||currentFormatString,type),newFormatString}(formatType):spreadsheetEditor.V3[formatType],!formatString)return;core.A.getDocumentViewer().getSpreadsheetEditorManager().setSelectedCellsStyle({formatString})},propTypes={formatType:prop_types_default().string,isFlyoutItem:prop_types_default().bool,secondaryLabel:prop_types_default().string,dataElement:prop_types_default().string,style:prop_types_default().object,className:prop_types_default().string,selector:prop_types_default().func,img:prop_types_default().string,title:prop_types_default().string},CellFormatButton=(0,react.forwardRef)(((props,ref)=>{const{isFlyoutItem,formatType,secondaryLabel,style,className,dataElement=menuItems.W[formatType].dataElement,img:icon=menuItems.W[formatType].icon,title=menuItems.W[formatType].title}=props,currentFormatType=(0,es.d4)((state=>selectors.A.getActiveCellFormatType(state))),isActive=formatType===currentFormatType,handleClick=()=>{helpers_setCellFormatString(formatType)};return isFlyoutItem?(0,jsx_runtime.jsx)(FlyoutItemContainer.A,{...props,ref,onClick:handleClick,secondaryLabel,additionalClass:isActive?"active":""}):(0,jsx_runtime.jsx)(ActionButton.A,{isActive,onClick:handleClick,dataElement,title,img:icon,ariaPressed:isActive,style,className},formatType)}));CellFormatButton.propTypes=propTypes,CellFormatButton.displayName="CellFormatButton";const SheetEditor_CellFormatButton=CellFormatButton;CellFormatButton.__docgenInfo={description:"",methods:[],displayName:"CellFormatButton",props:{formatType:{description:"",type:{name:"string"},required:!1},isFlyoutItem:{description:"",type:{name:"bool"},required:!1},secondaryLabel:{description:"",type:{name:"string"},required:!1},dataElement:{description:"",type:{name:"string"},required:!1},style:{description:"",type:{name:"object"},required:!1},className:{description:"",type:{name:"string"},required:!1},selector:{description:"",type:{name:"func"},required:!1},img:{description:"",type:{name:"string"},required:!1},title:{description:"",type:{name:"string"},required:!1}}}}}]);