"use strict";(self.webpackChunkwebviewer_ui=self.webpackChunkwebviewer_ui||[]).push([[43547],{"./src/components/ModularComponents/PresetButton/buttons/SheetEditor/CopyPasteCutButton.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>SheetEditor_CopyPasteCutButton});var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),react=__webpack_require__("./node_modules/react/index.js"),ActionButton=__webpack_require__("./src/components/ActionButton/index.js"),prop_types=__webpack_require__("./node_modules/prop-types/index.js"),prop_types_default=__webpack_require__.n(prop_types),FlyoutItemContainer=__webpack_require__("./src/components/ModularComponents/FlyoutItemContainer/index.js"),menuItems=__webpack_require__("./src/components/ModularComponents/Helpers/menuItems.js"),spreadsheetEditor=__webpack_require__("./src/constants/spreadsheetEditor.js");const helpers_capitalize=str=>"string"!=typeof str?"":str.charAt(0).toUpperCase()+str.slice(1);var es=__webpack_require__("./node_modules/react-redux/es/index.js"),selectors=__webpack_require__("./src/redux/selectors/index.js"),core=__webpack_require__("./src/core/index.js");const helpers_performClipboardActionOnCells=function performClipboardActionOnCells(actionType){if(!actionType)return;const clipboard=core.A.getDocumentViewer().getDocument().getSpreadsheetEditorDocument().getClipboard();switch(actionType){case"copy":clipboard.copy();break;case"paste":clipboard.paste();break;case"cut":clipboard.cut()}},propTypes={actionType:prop_types_default().oneOf(Object.values(spreadsheetEditor.de)).isRequired,isFlyoutItem:prop_types_default().bool,dataElement:prop_types_default().string,style:prop_types_default().object,className:prop_types_default().string,img:prop_types_default().string,title:prop_types_default().string},CopyPasteCutButton=(0,react.forwardRef)(((props,ref)=>{const{isFlyoutItem,actionType,style,className}=props,buttonSelector=`cell${helpers_capitalize(actionType)}`,{dataElement=menuItems.W[buttonSelector].dataElement,img:icon=menuItems.W[buttonSelector].icon,title=menuItems.W[buttonSelector].title}=props,isEnabled=(0,es.d4)((state=>{const selectorName=`getCan${helpers_capitalize(actionType)}`,selector=selectors.A[selectorName];return!!selector&&selector(state)})),handleClick=()=>{helpers_performClipboardActionOnCells(actionType)};return isFlyoutItem?(0,jsx_runtime.jsx)(FlyoutItemContainer.A,{...props,ref,onClick:handleClick,additionalClass:"",disabled:!isEnabled}):(0,jsx_runtime.jsx)(ActionButton.A,{disabled:!isEnabled,isActive:false,onClick:handleClick,dataElement,title,img:icon,ariaPressed:false,style,className},actionType)}));CopyPasteCutButton.propTypes=propTypes,CopyPasteCutButton.displayName="CopyPasteCutButton";const SheetEditor_CopyPasteCutButton=CopyPasteCutButton;CopyPasteCutButton.__docgenInfo={description:"",methods:[],displayName:"CopyPasteCutButton",props:{actionType:{description:"",type:{name:"enum",computed:!0,value:"Object.values(CELL_ACTION_OPTIONS)"},required:!0},isFlyoutItem:{description:"",type:{name:"bool"},required:!1},dataElement:{description:"",type:{name:"string"},required:!1},style:{description:"",type:{name:"object"},required:!1},className:{description:"",type:{name:"string"},required:!1},img:{description:"",type:{name:"string"},required:!1},title:{description:"",type:{name:"string"},required:!1}}}}}]);