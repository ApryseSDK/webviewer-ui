"use strict";(self.webpackChunkwebviewer_ui=self.webpackChunkwebviewer_ui||[]).push([[8565],{"./src/components/FormulaBar/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>components_FormulaBar});var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),react=__webpack_require__("./node_modules/react/index.js"),es=__webpack_require__("./node_modules/react-redux/es/index.js"),selectors=__webpack_require__("./src/redux/selectors/index.js"),FormulaBar=__webpack_require__("./src/components/FormulaBar/FormulaBar.js"),core=__webpack_require__("./src/core/index.js");const EDIT_MODE=window.Core.SpreadsheetEditor.SpreadsheetEditorEditMode,FormulaBarContainer=()=>{const activeCellRange=(0,es.d4)(selectors.A.getActiveCellRange),cellFormula=(0,es.d4)(selectors.A.getCellFormula),stringCellValue=(0,es.d4)(selectors.A.getStringCellValue),isReadOnlyMode=(0,es.d4)(selectors.A.getSpreadsheetEditorEditMode)===EDIT_MODE.VIEW_ONLY,[rangeInputValue,setRangeInputValue]=(0,react.useState)(activeCellRange);return(0,react.useEffect)((()=>{setRangeInputValue(activeCellRange)}),[activeCellRange]),(0,jsx_runtime.jsx)(FormulaBar.A,{isReadOnly:isReadOnlyMode,activeCellRange:rangeInputValue,cellFormula,stringCellValue,onRangeInputChange:value=>{setRangeInputValue(value)},onRangeInputKeyDown:event=>{if("Enter"===event.key)try{const spreadsheetEditorDocument=core.A.getDocumentViewer().getDocument().getSpreadsheetEditorDocument(),cellRange=core.A.getCellRange(event.target.value);spreadsheetEditorDocument.selectCellRange(cellRange)}catch(e){return setRangeInputValue(activeCellRange),void console.error(e)}}})},FormulaBar_FormulaBarContainer=FormulaBarContainer;FormulaBarContainer.__docgenInfo={description:"",methods:[],displayName:"FormulaBarContainer"};const components_FormulaBar=FormulaBar_FormulaBarContainer}}]);