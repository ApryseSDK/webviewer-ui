"use strict";(self.webpackChunkwebviewer_ui=self.webpackChunkwebviewer_ui||[]).push([[7514],{"./src/components/InsertPageModal/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>components_InsertPageModal});var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),InsertPageModal=(__webpack_require__("./node_modules/react/index.js"),__webpack_require__("./src/components/InsertPageModal/InsertPageModal.js")),es=__webpack_require__("./node_modules/react-redux/es/index.js"),selectors=__webpack_require__("./src/redux/selectors/index.js"),dataElement=__webpack_require__("./src/constants/dataElement.js"),core=__webpack_require__("./src/core/index.js");const InsertPageModalContainer=()=>{const[isDisabled,isOpen]=(0,es.d4)((state=>[selectors.A.isElementDisabled(state,dataElement.A.INSERT_PAGE_MODAL),selectors.A.isElementOpen(state,dataElement.A.INSERT_PAGE_MODAL)]));if(!isDisabled&&isOpen){const loadedDocumentPageCount=core.A.getDocumentViewer().getDocument()?core.A.getTotalPages():null;return(0,jsx_runtime.jsx)(InsertPageModal.A,{loadedDocumentPageCount})}return null},InsertPageModal_InsertPageModalContainer=InsertPageModalContainer;InsertPageModalContainer.__docgenInfo={description:"",methods:[],displayName:"InsertPageModalContainer"};const components_InsertPageModal=InsertPageModal_InsertPageModalContainer}}]);