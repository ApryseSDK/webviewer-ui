"use strict";(self.webpackChunkwebviewer_ui=self.webpackChunkwebviewer_ui||[]).push([[86616],{"./src/components/PrintModal/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>components_PrintModal});var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),react=__webpack_require__("./node_modules/react/index.js"),actions=__webpack_require__("./src/redux/actions/index.js"),selectors=__webpack_require__("./src/redux/selectors/index.js"),es=__webpack_require__("./node_modules/react-redux/es/index.js"),dataElement=__webpack_require__("./src/constants/dataElement.js"),core=__webpack_require__("./src/core/index.js"),print=__webpack_require__("./src/helpers/print.js"),rasterPrint=__webpack_require__("./src/helpers/rasterPrint.js"),embeddedPrint=__webpack_require__("./src/helpers/embeddedPrint.js"),PrintModal=__webpack_require__("./src/components/PrintModal/PrintModal.js"),useFocusOnClose=__webpack_require__("./src/hooks/useFocusOnClose/index.js");__webpack_require__("./src/components/PrintModal/PrintModal.scss");const PrintModalContainer=()=>{const dispatch=(0,es.wA)(),[isDisabled,isOpen,isApplyWatermarkDisabled,currentPage,printQuality,defaultPrintOptions,pageLabels,sortStrategy,colorMap,layoutMode,printedNoteDateFormat,language,watermarkModalOptions,timezone,useEmbeddedPrint]=(0,es.d4)((state=>[selectors.A.isElementDisabled(state,dataElement.A.PRINT_MODAL),selectors.A.isElementOpen(state,dataElement.A.PRINT_MODAL),selectors.A.isElementDisabled(state,"applyWatermark"),selectors.A.getCurrentPage(state),selectors.A.getPrintQuality(state),selectors.A.getDefaultPrintOptions(state),selectors.A.getPageLabels(state,"pageLabels"),selectors.A.getSortStrategy(state),selectors.A.getColorMap(state),selectors.A.getDisplayMode(state),selectors.A.getPrintedNoteDateFormat(state),selectors.A.getCurrentLanguage(state),selectors.A.getWatermarkModalOptions(state),selectors.A.getTimezone(state),selectors.A.isEmbedPrintSupported(state,"useEmbeddedPrint")]),es.bN),existingWatermarksRef=(0,react.useRef)(),[allowWatermarkModal,setAllowWatermarkModal]=(0,react.useState)(!1),[count,setCount]=(0,react.useState)(-1),[maintainPageOrientation,setMaintainPageOrientation]=(0,react.useState)(!1),[pagesToPrint,setPagesToPrint]=(0,react.useState)([]),[isGrayscale,setIsGrayscale]=(0,react.useState)(!1),[isWatermarkModalVisible,setIsWatermarkModalVisible]=(0,react.useState)(!1),[includeAnnotations,setIncludeAnnotations]=(0,react.useState)(!0),[includeComments,setIncludeComments]=(0,react.useState)(!1),[isCurrentView,setIsCurrentView]=(0,react.useState)(!1),[isCurrentViewDisabled,setIsCurrentViewDisabled]=(0,react.useState)(!1);(0,react.useEffect)((()=>{defaultPrintOptions&&(setIncludeAnnotations(defaultPrintOptions.includeAnnotations??includeAnnotations),setIncludeComments(defaultPrintOptions.includeComments??includeComments),setMaintainPageOrientation(defaultPrintOptions.maintainPageOrientation??maintainPageOrientation))}),[defaultPrintOptions]);const isPrinting=count>=0;(0,react.useEffect)((()=>{isOpen&&(useEmbeddedPrint&&checkCurrentView(),dispatch(actions.A.closeElements([dataElement.A.SIGNATURE_MODAL,dataElement.A.LOADING_MODAL,dataElement.A.PROGRESS_MODAL,dataElement.A.ERROR_MODAL])))}),[isOpen,dispatch]);const checkCurrentView=()=>{if(isCurrentViewDisabled)return;const visiblePagesArray=core.A.getDisplayModeObject().getVisiblePages(0,0);setIsCurrentViewDisabled(visiblePagesArray?.length>1)},embeddedPrinting=async()=>{const isAlwaysPrintAnnotationsInColorEnabled=core.A.getDocumentViewer().isAlwaysPrintAnnotationsInColorEnabled(),printingOptions={isCurrentView,includeAnnotations,includeComments,watermarkModalOptions,pagesToPrint,isGrayscale,isAlwaysPrintAnnotationsInColorEnabled},document=core.A.getDocument(),annotationManager=core.A.getAnnotationManager();(0,embeddedPrint.aW)(await(0,embeddedPrint.X0)(printingOptions,document,annotationManager))},rasterPrinting=e=>{if(e.preventDefault(),pagesToPrint.length<1)return;setCount(0),allowWatermarkModal?core.A.setWatermark(watermarkModalOptions):core.A.setWatermark(existingWatermarksRef.current);const printOptions={includeComments,includeAnnotations,maintainPageOrientation,printQuality,sortStrategy,colorMap,printedNoteDateFormat,isCurrentView,language,timezone,createCanvases:!1,isGrayscale},createPages=(0,rasterPrint.F1)(pagesToPrint,printOptions,void 0);createPages.forEach((async pagePromise=>{await pagePromise,setCount(count<pagesToPrint.length&&(-1!==count?count+1:count))})),Promise.all(createPages).then((pages=>{(0,print.g)(pages),closePrintModalAfterPrint()})).catch((e=>{console.error(e),setCount(-1)}))},closePrintModal=()=>{setCount(-1),dispatch(actions.A.closeElement(dataElement.A.PRINT_MODAL))},closePrintModalAfterPrint=(0,useFocusOnClose.A)(closePrintModal);return(0,jsx_runtime.jsx)(PrintModal.A,{isDisabled,isOpen,isApplyWatermarkDisabled,isFullAPIEnabled:core.A.isFullPDFEnabled(),currentPage,printQuality,isGrayscale,setIsGrayscale,setIsCurrentView,isCurrentViewDisabled,checkCurrentView,includeAnnotations,setIncludeAnnotations,includeComments,setIncludeComments,isWatermarkModalVisible,setIsWatermarkModalVisible,watermarkModalOptions,existingWatermarksRef,setAllowWatermarkModal,closePrintModal,createPagesAndPrint:e=>{const fileType=core.A.getDocument().getType();useEmbeddedPrint&&"xod"===fileType&&console.warn("Falling back to raster printing, XOD files and Embedded Printing is not supported"),useEmbeddedPrint&&"xod"!==fileType?embeddedPrinting():rasterPrinting(e)},pagesToPrint,setPagesToPrint,count,isPrinting,pageLabels,layoutMode,useEmbeddedPrint})},PrintModal_PrintModalContainer=PrintModalContainer;PrintModalContainer.__docgenInfo={description:"",methods:[],displayName:"PrintModalContainer"};const components_PrintModal=PrintModal_PrintModalContainer}}]);