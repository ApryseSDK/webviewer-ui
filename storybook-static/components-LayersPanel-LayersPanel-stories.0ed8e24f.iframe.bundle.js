"use strict";(self.webpackChunkwebviewer_ui=self.webpackChunkwebviewer_ui||[]).push([[4923],{"./src/components/LayersPanel/LayersPanel.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Basic:()=>Basic,Empty:()=>Empty,RightSide:()=>RightSide,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),components_LayersPanel__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/components/LayersPanel/index.js"),helpers_storybookHelper__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/helpers/storybookHelper.js"),src_redux_initialState__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/redux/initialState.js");function _define_property(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function _object_spread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{},ownKeys=Object.keys(source);"function"==typeof Object.getOwnPropertySymbols&&(ownKeys=ownKeys.concat(Object.getOwnPropertySymbols(source).filter((function(sym){return Object.getOwnPropertyDescriptor(source,sym).enumerable})))),ownKeys.forEach((function(key){_define_property(target,key,source[key])}))}return target}function _object_spread_props(target,source){return source=null!=source?source:{},Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))})),target}const __WEBPACK_DEFAULT_EXPORT__={title:"Components/LayersPanel",component:components_LayersPanel__WEBPACK_IMPORTED_MODULE_1__.A,parameters:{customizableUI:!0}};var layers=[{name:"Layer 1",id:"layer1"},{name:"Layer 2",id:"layer2"},{name:"Layer 3",id:"layer3"}];function Basic(){var stateWithLayersPanel=_object_spread_props(_object_spread({},src_redux_initialState__WEBPACK_IMPORTED_MODULE_3__.A),{viewer:_object_spread_props(_object_spread({},src_redux_initialState__WEBPACK_IMPORTED_MODULE_3__.A.viewer),{toolbarGroup:"toolbarGroup-Annotate",isInDesktopOnlyMode:!1,genericPanels:[{dataElement:"panel1",render:"layersPanel",location:"left"}],openElements:_object_spread_props(_object_spread({},src_redux_initialState__WEBPACK_IMPORTED_MODULE_3__.A.viewer.openElements),{contextMenuPopup:!1,panel1:!0}),disabledElements:_object_spread_props(_object_spread({},src_redux_initialState__WEBPACK_IMPORTED_MODULE_3__.A.viewer.disabledElements),{layersPanel:{disabled:!1,priority:3}}),lastPickedToolForGroupedItems:{annotateGroupedItems:"AnnotationCreateTextHighlight",annotateToolsGroupedItems:"AnnotationCreateTextHighlight"},activeGroupedItems:["annotateGroupedItems"],activeCustomRibbon:"toolbarGroup-Annotate",activeToolName:"AnnotationCreateTextHighlight",lastPickedToolAndGroup:{tool:"AnnotationCreateTextHighlight",group:["annotateGroupedItems","annotateToolsGroupedItems"]}}),document:_object_spread_props(_object_spread({},src_redux_initialState__WEBPACK_IMPORTED_MODULE_3__.A.document),{layers}),featureFlags:{customizableUI:!0}});return react__WEBPACK_IMPORTED_MODULE_0__.createElement(helpers_storybookHelper__WEBPACK_IMPORTED_MODULE_2__.os,{initialState:stateWithLayersPanel})}Basic.parameters={layout:"fullscreen"};var RightSide=function(){var stateWithLayersPanelOnRight=_object_spread_props(_object_spread({},src_redux_initialState__WEBPACK_IMPORTED_MODULE_3__.A),{viewer:_object_spread_props(_object_spread({},src_redux_initialState__WEBPACK_IMPORTED_MODULE_3__.A.viewer),{genericPanels:[{dataElement:"panel1",render:"layersPanel",location:"right"}],openElements:_object_spread_props(_object_spread({},src_redux_initialState__WEBPACK_IMPORTED_MODULE_3__.A.viewer.openElements),{contextMenuPopup:!1,panel1:!0}),disabledElements:_object_spread_props(_object_spread({},src_redux_initialState__WEBPACK_IMPORTED_MODULE_3__.A.viewer.disabledElements),{layersPanel:{disabled:!1,priority:3}}),activeCustomRibbon:"toolbarGroup-View",lastPickedToolAndGroup:{tool:"AnnotationEdit",group:["groupedLeftPanelItems"]}}),document:_object_spread_props(_object_spread({},src_redux_initialState__WEBPACK_IMPORTED_MODULE_3__.A.document),{layers}),featureFlags:{customizableUI:!0}});return react__WEBPACK_IMPORTED_MODULE_0__.createElement(helpers_storybookHelper__WEBPACK_IMPORTED_MODULE_2__.os,{initialState:stateWithLayersPanelOnRight})};RightSide.parameters={layout:"fullscreen"};var Empty=function(){var stateWithEmptyLayersPanel=_object_spread_props(_object_spread({},src_redux_initialState__WEBPACK_IMPORTED_MODULE_3__.A),{viewer:_object_spread_props(_object_spread({},src_redux_initialState__WEBPACK_IMPORTED_MODULE_3__.A.viewer),{genericPanels:[{dataElement:"panel1",render:"layersPanel",location:"left"}],openElements:_object_spread_props(_object_spread({},src_redux_initialState__WEBPACK_IMPORTED_MODULE_3__.A.viewer.openElements),{contextMenuPopup:!1,panel1:!0}),disabledElements:_object_spread_props(_object_spread({},src_redux_initialState__WEBPACK_IMPORTED_MODULE_3__.A.viewer.disabledElements),{layersPanel:{disabled:!1,priority:3}}),activeCustomRibbon:"toolbarGroup-View"}),document:_object_spread_props(_object_spread({},src_redux_initialState__WEBPACK_IMPORTED_MODULE_3__.A.document),{layers:[]}),featureFlags:{customizableUI:!0}});return react__WEBPACK_IMPORTED_MODULE_0__.createElement(helpers_storybookHelper__WEBPACK_IMPORTED_MODULE_2__.os,{initialState:stateWithEmptyLayersPanel})};Empty.parameters={layout:"fullscreen"},Basic.parameters={...Basic.parameters,docs:{...Basic.parameters?.docs,source:{originalSource:"function Basic() {\n  const stateWithLayersPanel = {\n    ...initialState,\n    viewer: {\n      ...initialState.viewer,\n      toolbarGroup: 'toolbarGroup-Annotate',\n      isInDesktopOnlyMode: false,\n      genericPanels: [{\n        dataElement: 'panel1',\n        render: 'layersPanel',\n        location: 'left'\n      }],\n      openElements: {\n        ...initialState.viewer.openElements,\n        contextMenuPopup: false,\n        panel1: true\n      },\n      disabledElements: {\n        ...initialState.viewer.disabledElements,\n        'layersPanel': {\n          disabled: false,\n          priority: 3\n        }\n      },\n      lastPickedToolForGroupedItems: {\n        'annotateGroupedItems': 'AnnotationCreateTextHighlight',\n        'annotateToolsGroupedItems': 'AnnotationCreateTextHighlight'\n      },\n      activeGroupedItems: ['annotateGroupedItems'],\n      activeCustomRibbon: 'toolbarGroup-Annotate',\n      activeToolName: 'AnnotationCreateTextHighlight',\n      lastPickedToolAndGroup: {\n        tool: 'AnnotationCreateTextHighlight',\n        group: ['annotateGroupedItems', 'annotateToolsGroupedItems']\n      }\n    },\n    document: {\n      ...initialState.document,\n      layers: layers\n    },\n    featureFlags: {\n      customizableUI: true\n    }\n  };\n  return <MockApp initialState={stateWithLayersPanel} />;\n}",...Basic.parameters?.docs?.source}}},RightSide.parameters={...RightSide.parameters,docs:{...RightSide.parameters?.docs,source:{originalSource:"() => {\n  const stateWithLayersPanelOnRight = {\n    ...initialState,\n    viewer: {\n      ...initialState.viewer,\n      genericPanels: [{\n        dataElement: 'panel1',\n        render: 'layersPanel',\n        location: 'right'\n      }],\n      openElements: {\n        ...initialState.viewer.openElements,\n        contextMenuPopup: false,\n        panel1: true\n      },\n      disabledElements: {\n        ...initialState.viewer.disabledElements,\n        'layersPanel': {\n          disabled: false,\n          priority: 3\n        }\n      },\n      activeCustomRibbon: 'toolbarGroup-View',\n      lastPickedToolAndGroup: {\n        tool: 'AnnotationEdit',\n        group: ['groupedLeftPanelItems']\n      }\n    },\n    document: {\n      ...initialState.document,\n      layers: layers\n    },\n    featureFlags: {\n      customizableUI: true\n    }\n  };\n  return <MockApp initialState={stateWithLayersPanelOnRight} />;\n}",...RightSide.parameters?.docs?.source}}},Empty.parameters={...Empty.parameters,docs:{...Empty.parameters?.docs,source:{originalSource:"() => {\n  const stateWithEmptyLayersPanel = {\n    ...initialState,\n    viewer: {\n      ...initialState.viewer,\n      genericPanels: [{\n        dataElement: 'panel1',\n        render: 'layersPanel',\n        location: 'left'\n      }],\n      openElements: {\n        ...initialState.viewer.openElements,\n        contextMenuPopup: false,\n        panel1: true\n      },\n      disabledElements: {\n        ...initialState.viewer.disabledElements,\n        'layersPanel': {\n          disabled: false,\n          priority: 3\n        }\n      },\n      activeCustomRibbon: 'toolbarGroup-View'\n    },\n    document: {\n      ...initialState.document,\n      layers: []\n    },\n    featureFlags: {\n      customizableUI: true\n    }\n  };\n  return <MockApp initialState={stateWithEmptyLayersPanel} />;\n}",...Empty.parameters?.docs?.source}}};const __namedExportsOrder=["Basic","RightSide","Empty"]}}]);