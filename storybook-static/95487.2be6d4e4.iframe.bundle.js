"use strict";(self.webpackChunkwebviewer_ui=self.webpackChunkwebviewer_ui||[]).push([[95487],{"./src/components/FormFieldEditPopup/FormFieldEditPopup.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/jsx-runtime.js"),react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/index.js"),classnames__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/classnames/index.js"),classnames__WEBPACK_IMPORTED_MODULE_2___default=__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_2__),_Button__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/components/Button/index.js"),react_i18next__WEBPACK_IMPORTED_MODULE_13__=__webpack_require__("./node_modules/react-i18next/dist/es/useTranslation.js"),_CreatableDropdown__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/components/CreatableDropdown/index.js"),_FieldFlags__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./src/components/FormFieldEditPopup/FieldFlags/index.js"),_FormFieldPopupDimensionsInput__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./src/components/FormFieldEditPopup/FormFieldPopupDimensionsInput/index.js"),_HorizontalDivider__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./src/components/HorizontalDivider/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_12__=__webpack_require__("./node_modules/prop-types/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_12___default=__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_12__),_TextInput__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("./src/components/TextInput/index.js"),_CreatableList__WEBPACK_IMPORTED_MODULE_10__=(__webpack_require__("./src/components/FormFieldEditPopup/FormFieldEditPopup.scss"),__webpack_require__("./src/components/CreatableList/index.js")),_FormFieldEditPopupIndicator__WEBPACK_IMPORTED_MODULE_11__=__webpack_require__("./src/components/FormFieldEditPopup/FormFieldEditPopupIndicator/index.js");const propTypes={fields:prop_types__WEBPACK_IMPORTED_MODULE_12___default().array.isRequired,flags:prop_types__WEBPACK_IMPORTED_MODULE_12___default().array.isRequired,closeFormFieldEditPopup:prop_types__WEBPACK_IMPORTED_MODULE_12___default().func.isRequired,isValid:prop_types__WEBPACK_IMPORTED_MODULE_12___default().bool.isRequired,validationMessage:prop_types__WEBPACK_IMPORTED_MODULE_12___default().string.isRequired,radioButtonGroups:prop_types__WEBPACK_IMPORTED_MODULE_12___default().array,options:prop_types__WEBPACK_IMPORTED_MODULE_12___default().array,onOptionsChange:prop_types__WEBPACK_IMPORTED_MODULE_12___default().func,annotation:prop_types__WEBPACK_IMPORTED_MODULE_12___default().object.isRequired,selectedRadioGroup:prop_types__WEBPACK_IMPORTED_MODULE_12___default().string,getPageHeight:prop_types__WEBPACK_IMPORTED_MODULE_12___default().func.isRequired,getPageWidth:prop_types__WEBPACK_IMPORTED_MODULE_12___default().func.isRequired,redrawAnnotation:prop_types__WEBPACK_IMPORTED_MODULE_12___default().func.isRequired,indicator:prop_types__WEBPACK_IMPORTED_MODULE_12___default().object.isRequired},FormFieldEditPopup=({fields,flags,closeFormFieldEditPopup,isValid,validationMessage,radioButtonGroups,options,onOptionsChange,annotation,selectedRadioGroup,getPageHeight,getPageWidth,redrawAnnotation,indicator})=>{const{t}=(0,react_i18next__WEBPACK_IMPORTED_MODULE_13__.B)(),className=classnames__WEBPACK_IMPORTED_MODULE_2___default()({Popup:!0,FormFieldEditPopup:!0}),[width,setWidth]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(annotation.Width.toFixed(0)),[height,setHeight]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(annotation.Height.toFixed(0)),popupRef=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null),[radioButtonGroup,setRadioButtonGroup]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(""===selectedRadioGroup?null:{value:selectedRadioGroup,label:selectedRadioGroup});function renderInput(field){return"text"===field.type?function renderTextInput(field){const hasError=field.required&&!isValid;return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_TextInput__WEBPACK_IMPORTED_MODULE_8__.A,{label:`${field.label}-input`,value:field.value,onChange:field.onChange,validationMessage,hasError,ariaDescribedBy:hasError?"FormFieldInputError":void 0,ariaLabelledBy:field.label})}(field):"select"===field.type?function renderSelectInput(field){const displayRadioGroups=radioButtonGroups.map((group=>({value:group,label:group})));return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_CreatableDropdown__WEBPACK_IMPORTED_MODULE_4__.A,{textPlaceholder:t("formField.formFieldPopup.fieldName"),options:displayRadioGroups,onChange:inputValue=>function onSelectInputChange(field,input){null===input?(field.onChange(""),setRadioButtonGroup(null)):(field.onChange(input.value),setRadioButtonGroup({value:input.value,label:input.value}))}(field,inputValue),value:radioButtonGroup,isValid,messageText:t(validationMessage)}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{className:"radio-group-label",children:t("formField.formFieldPopup.radioGroups")})]})}(field):void 0}(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{setRadioButtonGroup(""!==selectedRadioGroup?{value:selectedRadioGroup,label:selectedRadioGroup}:null)}),[selectedRadioGroup]);const indicatorPlaceholder=t(`formField.formFieldPopup.indicatorPlaceHolders.${annotation.getField().getFieldType()}`);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{className,ref:popupRef,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{className:"fields-container",children:fields.map((field=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{className:"field-input",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("span",{id:field.label,children:[t(field.label),field.required?"*":"",":"]}),renderInput(field)]},field.label)))}),options&&function renderListOptions(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{className:"field-options-container",children:[t("formField.formFieldPopup.options"),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_CreatableList__WEBPACK_IMPORTED_MODULE_10__.A,{options,onOptionsUpdated:onOptionsChange,popupRef})]})}(),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_FieldFlags__WEBPACK_IMPORTED_MODULE_5__.A,{flags}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_FormFieldPopupDimensionsInput__WEBPACK_IMPORTED_MODULE_6__.A,{width,height,onWidthChange:function onWidthChange(width){const validatedWidth=function validateWidth(width){const maxWidth=getPageWidth()-annotation.X;if(width>maxWidth)return maxWidth;return width}(width);annotation.setWidth(validatedWidth),setWidth(validatedWidth),redrawAnnotation(annotation)},onHeightChange:function onHeightChange(height){const validatedHeight=function validateHeight(height){const maxHeight=getPageHeight()-annotation.Y;if(height>maxHeight)return maxHeight;return height}(height);annotation.setHeight(validatedHeight),setHeight(validatedHeight),redrawAnnotation(annotation)}}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_HorizontalDivider__WEBPACK_IMPORTED_MODULE_7__.A,{}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_FormFieldEditPopupIndicator__WEBPACK_IMPORTED_MODULE_11__.A,{indicator,indicatorPlaceholder}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{className:"form-buttons-container",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_Button__WEBPACK_IMPORTED_MODULE_3__.A,{className:"ok-form-field-button",onClick:closeFormFieldEditPopup,dataElement:"formFieldOK",label:t("action.close"),disabled:!isValid})})]})};FormFieldEditPopup.propTypes=propTypes;const __WEBPACK_DEFAULT_EXPORT__=FormFieldEditPopup;FormFieldEditPopup.__docgenInfo={description:"",methods:[],displayName:"FormFieldEditPopup",props:{fields:{description:"",type:{name:"array"},required:!0},flags:{description:"",type:{name:"array"},required:!0},closeFormFieldEditPopup:{description:"",type:{name:"func"},required:!0},isValid:{description:"",type:{name:"bool"},required:!0},validationMessage:{description:"",type:{name:"string"},required:!0},radioButtonGroups:{description:"",type:{name:"array"},required:!1},options:{description:"",type:{name:"array"},required:!1},onOptionsChange:{description:"",type:{name:"func"},required:!1},annotation:{description:"",type:{name:"object"},required:!0},selectedRadioGroup:{description:"",type:{name:"string"},required:!1},getPageHeight:{description:"",type:{name:"func"},required:!0},getPageWidth:{description:"",type:{name:"func"},required:!0},redrawAnnotation:{description:"",type:{name:"func"},required:!0},indicator:{description:"",type:{name:"object"},required:!0}}}},"./src/components/FormFieldEditPopup/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>components_FormFieldEditPopup});var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),react=__webpack_require__("./node_modules/react/index.js"),cjs=__webpack_require__("./node_modules/react-draggable/build/cjs/cjs.js"),cjs_default=__webpack_require__.n(cjs),core=__webpack_require__("./src/core/index.js"),FormFieldEditPopup=__webpack_require__("./src/components/FormFieldEditPopup/FormFieldEditPopup.js");const FormFieldEditPopup_FormFieldEditSignaturePopup=__webpack_require__("./src/components/FormFieldEditPopup/FormFieldEditSignaturePopup/FormFieldEditSignaturePopup.js").A;var es=__webpack_require__("./node_modules/react-redux/es/index.js"),actions=__webpack_require__("./src/redux/actions/index.js"),selectors=__webpack_require__("./src/redux/selectors/index.js"),classnames=__webpack_require__("./node_modules/classnames/index.js"),classnames_default=__webpack_require__.n(classnames),useOnClickOutside=__webpack_require__("./src/hooks/useOnClickOutside.js"),getPopupPosition=__webpack_require__("./src/helpers/getPopupPosition.js"),DataElementWrapper=__webpack_require__("./src/components/DataElementWrapper/index.js"),getDeviceSize=__webpack_require__("./src/helpers/getDeviceSize.js"),dataElement=__webpack_require__("./src/constants/dataElement.js"),actionPriority=__webpack_require__("./src/constants/actionPriority.js"),throttle=__webpack_require__("./node_modules/lodash/throttle.js"),throttle_default=__webpack_require__.n(throttle),debounce=(__webpack_require__("./src/components/FormFieldEditPopup/FormFieldEditPopup.scss"),__webpack_require__("./node_modules/lodash/debounce.js")),debounce_default=__webpack_require__.n(debounce),prop_types=__webpack_require__("./node_modules/prop-types/index.js"),prop_types_default=__webpack_require__.n(prop_types);const{Annotations}=window.Core,propTypes={annotation:prop_types_default().object.isRequired};function FormFieldEditPopupContainer({annotation}){const formFieldCreationManager=core.A.getFormFieldCreationManager(),[fieldName,setFieldName]=(0,react.useState)(""),[fieldValue,setFieldValue]=(0,react.useState)(""),[isReadOnly,setReadOnly]=(0,react.useState)(!1),[isMultiLine,setMultiLine]=(0,react.useState)(!1),[isRequired,setIsRequired]=(0,react.useState)(!1),[isMultiSelect,setIsMultiSelect]=(0,react.useState)(!1),[isValid,setIsValid]=(0,react.useState)(!0),[radioButtonGroups,setRadioButtonGroups]=(0,react.useState)([]),[position,setPosition]=(0,react.useState)({left:0,top:0}),[validationMessage,setValidationMessage]=(0,react.useState)(""),[showIndicator,setShowIndicator]=(0,react.useState)(!1),[indicatorText,setIndicatorText]=(0,react.useState)(""),popupRef=(0,react.useRef)(),mountedRef=(0,react.useRef)(!0),[isOpen]=(0,es.d4)((state=>[selectors.A.isElementOpen(state,dataElement.A.FORM_FIELD_EDIT_POPUP)]),es.bN),dispatch=(0,es.wA)();function closeAndReset(){dispatch(actions.A.enableElement(dataElement.A.ANNOTATION_POPUP,actionPriority.sg)),dispatch(actions.A.closeElement(dataElement.A.FORM_FIELD_EDIT_POPUP)),setFieldName(""),setFieldValue(""),setReadOnly(!1),setMultiLine(!1),setIsRequired(!1),setIsMultiSelect(!1),setIsValid(!0),setShowIndicator(!1),setIndicatorText("")}(0,useOnClickOutside.A)(popupRef,(()=>{""!==fieldName.trim()&&closeAndReset()})),(0,react.useEffect)((()=>{const onFormFieldCreationModeStarted=()=>{setRadioButtonGroups(formFieldCreationManager.getRadioButtonGroups())};return core.A.addEventListener("formFieldCreationModeStarted",onFormFieldCreationModeStarted),()=>{core.A.removeEventListener("formFieldCreationModeStarted",onFormFieldCreationModeStarted)}}),[]),(0,react.useEffect)((()=>{const radioButtons=core.A.getAnnotationsList().filter((annotation=>annotation instanceof Annotations.RadioButtonWidgetAnnotation)),radioGroups=radioButtons.map((radioButton=>radioButton.getField().name)),dedupedRadioGroups=[...new Set([...radioGroups])];setRadioButtonGroups(dedupedRadioGroups)}),[]);const setPopupPosition=()=>{popupRef.current&&mountedRef.current&&setPosition((0,getPopupPosition.FL)(annotation,popupRef))},handleResize=throttle_default()((()=>{setPopupPosition()}),16);(0,react.useEffect)((()=>(mountedRef.current=!0,window.addEventListener("resize",handleResize),()=>{mountedRef.current=!1,window.removeEventListener("resize",handleResize)})),[]),(0,react.useLayoutEffect)((()=>{if(isOpen&&annotation){const currentFlags=annotation.getFieldFlags(),isReadOnly=currentFlags[Annotations.WidgetFlags.READ_ONLY],isMultiLine=currentFlags[Annotations.WidgetFlags.MULTILINE],isRequired=currentFlags[Annotations.WidgetFlags.REQUIRED],isMultiSelect=currentFlags[Annotations.WidgetFlags.MULTI_SELECT],field=annotation.getField();setPopupPosition(),setFieldName(field.name),setFieldValue(field.value),setReadOnly(isReadOnly||!1),setMultiLine(isMultiLine||!1),setIsRequired(isRequired||!1),setIsMultiSelect(isMultiSelect||!1);const dedupedRadioGroups=[...new Set([...radioButtonGroups,...formFieldCreationManager.getRadioButtonGroups()])];setRadioButtonGroups(dedupedRadioGroups);const isFieldNameValid=!!field.name;setIsValid(isFieldNameValid);let validationMessage="";isFieldNameValid||(validationMessage="formField.formFieldPopup.invalidField.empty"),setValidationMessage(validationMessage),setShowIndicator(formFieldCreationManager.getShowIndicator(annotation)),setIndicatorText(formFieldCreationManager.getIndicatorText(annotation))}}),[isOpen]),(0,react.useLayoutEffect)((()=>{const setPosition=debounce_default()((()=>{popupRef.current&&setPopupPosition()}),100),scrollViewElement=core.A.getDocumentViewer().getScrollViewElement();return scrollViewElement?.addEventListener("scroll",setPosition),()=>scrollViewElement?.removeEventListener("scroll",setPosition)}),[annotation]);const onFieldNameChange=(0,react.useCallback)((name=>{const validatedResponse=formFieldCreationManager.setFieldName(annotation,name);setIsValid(validatedResponse.isValid),mapValidationResponseToTranslation(validatedResponse),setFieldName(name),updateFlagsForRadioAnnotation(annotation)}),[annotation]),updateFlagsForRadioAnnotation=(0,react.useCallback)((annotation=>{if(annotation&&annotation instanceof Annotations.RadioButtonWidgetAnnotation){const currentFlags=annotation.getField().flags,{READ_ONLY,REQUIRED}=Annotations.WidgetFlags,isReadOnly=currentFlags.get(READ_ONLY),isRequired=currentFlags.get(REQUIRED);setReadOnly(isReadOnly||!1),setIsRequired(isRequired||!1)}}),[annotation]),mapValidationResponseToTranslation=validationResponse=>{const{errorType}=validationResponse;let translationKey="";switch(errorType){case"empty":translationKey="formField.formFieldPopup.invalidField.empty";break;case"duplicate":translationKey="formField.formFieldPopup.invalidField.duplicate"}setValidationMessage(translationKey)},onFieldValueChange=(0,react.useCallback)((value=>{setFieldValue(value),annotation.getField().setValue(value)}),[annotation]),onReadOnlyChange=(0,react.useCallback)((isReadOnly=>{setReadOnly(isReadOnly),annotation.setFieldFlag(Annotations.WidgetFlags.READ_ONLY,isReadOnly)}),[annotation]),onMultiLineChange=(0,react.useCallback)((isMultiLine=>{setMultiLine(isMultiLine),annotation.setFieldFlag(Annotations.WidgetFlags.MULTILINE,isMultiLine)}),[annotation]),onRequiredChange=(0,react.useCallback)((isRequired=>{setIsRequired(isRequired),annotation.setFieldFlag(Annotations.WidgetFlags.REQUIRED,isRequired)}),[annotation]),onMultiSelectChange=(0,react.useCallback)((isMultiSelect=>{setIsMultiSelect(isMultiSelect),annotation.setFieldFlag(Annotations.WidgetFlags.MULTI_SELECT,isMultiSelect)}),[annotation]),onFieldOptionsChange=(0,react.useCallback)((options=>{annotation.setFieldOptions(options)}),[annotation]),onShowFieldIndicatorChange=(0,react.useCallback)((showIndicator=>{setShowIndicator(showIndicator),formFieldCreationManager.setShowIndicator(annotation,showIndicator)}),[annotation]),onFieldIndicatorTextChange=(0,react.useCallback)((indicatorText=>{setIndicatorText(indicatorText),formFieldCreationManager.setIndicatorText(annotation,indicatorText)}),[annotation]),closeFormFieldEditPopup=(0,react.useCallback)((()=>{closeAndReset()}),[]),onCloseRadioButtonPopup=(0,react.useCallback)((()=>{isValid&&-1===radioButtonGroups.indexOf(fieldName)&&""!==fieldName&&setRadioButtonGroups([fieldName,...radioButtonGroups]),closeAndReset()}),[fieldName,radioButtonGroups]),redrawAnnotation=(0,react.useCallback)((annotation=>{core.A.getAnnotationManager().drawAnnotationsFromList([annotation])}),[]),getPageHeight=(0,react.useCallback)((()=>core.A.getPageHeight(core.A.getCurrentPage())),[]),getPageWidth=(0,react.useCallback)((()=>core.A.getPageWidth(core.A.getCurrentPage())),[]),onSignatureOptionChange=(0,react.useCallback)((signatureOption=>{const{value}=signatureOption;formFieldCreationManager.setSignatureOption(annotation,value)}),[annotation]),getSignatureOption=(0,react.useCallback)((widget=>formFieldCreationManager.getSignatureOption(widget)),[]),fields={NAME:{label:"formField.formFieldPopup.fieldName",onChange:onFieldNameChange,value:fieldName,required:!0,type:"text",focus:!0},VALUE:{label:"formField.formFieldPopup.fieldValue",onChange:onFieldValueChange,value:fieldValue,type:"text"},RADIO_GROUP:{label:"formField.formFieldPopup.fieldName",onChange:onFieldNameChange,value:fieldName,required:!0,type:"select"}},flags={READ_ONLY:{label:"formField.formFieldPopup.readOnly",onChange:onReadOnlyChange,isChecked:isReadOnly},MULTI_LINE:{label:"formField.formFieldPopup.multiLine",onChange:onMultiLineChange,isChecked:isMultiLine},REQUIRED:{label:"formField.formFieldPopup.required",onChange:onRequiredChange,isChecked:isRequired},MULTI_SELECT:{label:"formField.formFieldPopup.multiSelect",onChange:onMultiSelectChange,isChecked:isMultiSelect}},textFields=[fields.NAME,fields.VALUE],defaultFields=[fields.NAME],radioButtonFields=[fields.RADIO_GROUP],listBoxFields=[fields.NAME],comboBoxFields=[fields.NAME],pushButtonFields=[fields.NAME],textFieldFlags=[flags.READ_ONLY,flags.MULTI_LINE,flags.REQUIRED],signatureFlags=[flags.REQUIRED,flags.READ_ONLY],checkBoxFlags=[flags.READ_ONLY,flags.REQUIRED],radioButtonFlags=[flags.READ_ONLY,flags.REQUIRED],listBoxFlags=[flags.MULTI_SELECT,flags.READ_ONLY,flags.REQUIRED],comboBoxFlags=[flags.READ_ONLY,flags.REQUIRED],pushButtonFlags=[flags.READ_ONLY],isMobile=(0,getDeviceSize.IS)(),indicator={label:"formField.formFieldPopup.documentFieldIndicator",toggleIndicator:onShowFieldIndicatorChange,isChecked:showIndicator,onChange:onFieldIndicatorTextChange,value:indicatorText},renderPopUp=()=>{switch(!0){case annotation instanceof Annotations.TextWidgetAnnotation:return(0,jsx_runtime.jsx)(FormFieldEditPopup.A,{fields:textFields,flags:textFieldFlags,closeFormFieldEditPopup,isValid,validationMessage,annotation,redrawAnnotation,getPageHeight,getPageWidth,indicator});case annotation instanceof Annotations.SignatureWidgetAnnotation:return(0,jsx_runtime.jsx)(FormFieldEditPopup_FormFieldEditSignaturePopup,{fields:defaultFields,flags:signatureFlags,closeFormFieldEditPopup,isValid,validationMessage,annotation,redrawAnnotation,getPageHeight,getPageWidth,onSignatureOptionChange,getSignatureOptionHandler:getSignatureOption,indicator});case annotation instanceof Annotations.CheckButtonWidgetAnnotation:return(0,jsx_runtime.jsx)(FormFieldEditPopup.A,{fields:defaultFields,flags:checkBoxFlags,closeFormFieldEditPopup,isValid,validationMessage,annotation,redrawAnnotation,getPageHeight,getPageWidth,indicator});case annotation instanceof Annotations.RadioButtonWidgetAnnotation:return(0,jsx_runtime.jsx)(FormFieldEditPopup.A,{fields:radioButtonFields,flags:radioButtonFlags,closeFormFieldEditPopup:onCloseRadioButtonPopup,isValid,validationMessage,radioButtonGroups,annotation,selectedRadioGroup:fieldName,redrawAnnotation,getPageHeight,getPageWidth,indicator});case annotation instanceof Annotations.ListWidgetAnnotation:return(()=>{const fieldOptions=annotation.getFieldOptions();return(0,jsx_runtime.jsx)(FormFieldEditPopup.A,{fields:listBoxFields,flags:listBoxFlags,options:fieldOptions,onOptionsChange:onFieldOptionsChange,closeFormFieldEditPopup,isValid,validationMessage,annotation,redrawAnnotation,getPageHeight,getPageWidth,indicator})})();case annotation instanceof Annotations.ChoiceWidgetAnnotation:return(()=>{const fieldOptions=annotation.getFieldOptions();return(0,jsx_runtime.jsx)(FormFieldEditPopup.A,{fields:comboBoxFields,flags:comboBoxFlags,options:fieldOptions,onOptionsChange:onFieldOptionsChange,closeFormFieldEditPopup,isValid,validationMessage,annotation,redrawAnnotation,getPageHeight,getPageWidth,indicator})})();case annotation instanceof Annotations.PushButtonWidgetAnnotation:return(0,jsx_runtime.jsx)(FormFieldEditPopup.A,{fields:pushButtonFields,flags:pushButtonFlags,closeFormFieldEditPopup,isValid,validationMessage,annotation,redrawAnnotation,getPageHeight,getPageWidth,indicator});default:return null}},renderFormFieldEditPopup=()=>(0,jsx_runtime.jsx)(DataElementWrapper.A,{className:classnames_default()({Popup:!0,FormFieldEditPopupContainer:!0,open:isOpen,closed:!isOpen}),"data-element":dataElement.A.FORM_FIELD_EDIT_POPUP,style:{...position},ref:popupRef,children:isOpen&&renderPopUp()});return isMobile?renderFormFieldEditPopup():(0,jsx_runtime.jsx)(cjs_default(),{cancel:".Button, .cell, .sliders-container svg, .creatable-list, .ui__input__input, .form-dimension-input, .ui__choice__input",children:renderFormFieldEditPopup()})}FormFieldEditPopupContainer.propTypes=propTypes;const FormFieldEditPopup_FormFieldEditPopupContainer=react.memo(FormFieldEditPopupContainer);FormFieldEditPopupContainer.__docgenInfo={description:"",methods:[],displayName:"FormFieldEditPopupContainer",props:{annotation:{description:"",type:{name:"object"},required:!0}}};const components_FormFieldEditPopup=FormFieldEditPopup_FormFieldEditPopupContainer}}]);