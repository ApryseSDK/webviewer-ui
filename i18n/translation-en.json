{
  "action": {
    "addParagraph": "Add Paragraph",
    "add": "Add",
    "addSheet": "Add Sheet",
    "apply": "Apply",
    "applyAll": "Apply all",
    "calendar": "Calendar",
    "calibrate": "Calibrate",
    "cancel": "Cancel",
    "confirm": "Confirm",
    "currentPageIs": "Current page is",
    "clear": "Clear",
    "clearAll": "Clear all",
    "close": "Close",
    "undo": "Undo",
    "redo": "Redo",
    "comment": "Comment",
    "reply": "Add reply",
    "copy": "Copy",
    "cut": "Cut",
    "paste": "Paste",
    "pasteWithoutFormatting": "Paste without formatting",
    "delete": "Delete",
    "deleted": "Deleted",
    "group": "Group",
    "ungroup": "Ungroup",
    "download": "Download",
    "edit": "Edit",
    "collapse": "Collapse",
    "expand": "Expand",
    "extract": "Extract",
    "extractPage": "Extract Page",
    "enterFullscreen": "Enter Full Screen",
    "exitFullscreen": "Exit Full Screen",
    "fit": "Fit",
    "fitToPage": "Fit to page",
    "fitToWidth": "Fit to width",
    "more": "More",
    "openFile": "Open file",
    "showMoreFiles": "Show More Files",
    "page": "Page",
    "of": "of",
    "pagePrev": "Previous page",
    "pageNext": "Next page",
    "pageSet": "Set page",
    "print": "Print",
    "proceed": "Proceed",
    "name": "Name",
    "rename": "Rename",
    "remove": "Remove",
    "ok": "OK",
    "rotate": "Page Orientation",
    "rotate3D": "Rotate",
    "rotateClockwise": "Rotate Clockwise",
    "rotateCounterClockwise": "Rotate Counterclockwise",
    "rotatedClockwise": "rotated clockwise",
    "rotatedCounterClockwise": "rotated counterclockwise",
    "rotationIs": "current page rotation is ",
    "movedToBottomOfDocument": "moved to bottom of document",
    "movedToTopofDocument": "moved to top of document",
    "extracted": "extracted",
    "save": "Save",
    "post": "Post",
    "create": "Create",
    "update": "Update",
    "showMoreResults": "Show more results",
    "sign": "Sign",
    "style": "Style",
    "submit": "Submit",
    "zoom": "Zoom",
    "zoomIn": "Zoom in",
    "zoomOut": "Zoom out",
    "zoomSet": "Set zoom",
    "zoomChanged": "Current zoom is",
    "zoomControls": "Zoom Controls",
    "draw": "Draw",
    "type": "Type",
    "upload": "Upload",
    "link": "Link",
    "unlink": "Delete Link",
    "fileAttachmentDownload": "Download attached file",
    "prevResult": "Previous result",
    "nextResult": "Next result",
    "prev": "Previous",
    "next": "Next",
    "startFormEditing": "Start Form Editing",
    "exitFormEditing": "Exit Form Editing Mode",
    "exit": "Exit",
    "addOption": "Add Option",
    "formFieldEdit": "Edit Form Field",
    "formFieldEditMode": "Edit Form Fields",
    "contentEditMode": "Edit Content",
    "viewShortCutKeysFor3D": "View Shortcut Keys",
    "markAllRead": "Mark all as read",
    "pageInsertion": "Page Insertion",
    "insertPage": "Insert Page",
    "insert": "Insert",
    "pageManipulation": "Page Manipulation",
    "replace": "Replace",
    "replacePage": "Replace Page",
    "modal": "modal",
    "isOpen": "is open",
    "setDestination": "Set Destination",
    "showLess": "show less",
    "showMore": "...more",
    "chooseFile": "Choose a file",
    "changeDate": "Change Date",
    "browse": "Browse Files",
    "selectYourOption": "Select your option",
    "open": "Open",
    "deselectAll": "Deselect All",
    "select": "Select",
    "moveToTop": "Move to Top",
    "moveToBottom": "Move to Bottom",
    "movePageToTop": "Move Page to Top",
    "movePageToBottom": "Move Page to Bottom",
    "moveUp": "Move Up",
    "moveDown": "Move Down",
    "moveLeft": "Move Left",
    "moveRight": "Move Right",
    "backToMenu": "Back to Menu",
    "redactPages": "Redact Pages",
    "playAudio": "Play audio",
    "pauseAudio": "Pause audio",
    "selectAll": "Select all",
    "unselect": "Unselect",
    "addMark": "Add Mark",
    "viewFile": "View file",
    "multiReplyAnnotations": "Reply to selected annotations ({{count}})",
    "comparePages": "Compare pages",
    "startComparison": "Start Comparison",
    "showComparison": "Show Comparison",
    "highlightChanges": "Highlight Changes",
    "back": "Back",
    "clearSignature": "Clear signature",
    "clearInitial": "Clear initial",
    "readOnlySignature": "Read-only signature cannot be deleted",
    "newDocument": "New Document",
    "sideBySideView": "Side By Side View",
    "pageNumberInput": "Page number input",
    "addNewColor": "Add New Color",
    "deleteColor": "Delete Selected Color",
    "copySelectedColor": "Copy Selected Color",
    "showMoreColors": "Show More Colors",
    "showLessColors": "Show Less Colors",
    "fromCustomColorPicker": "from Custom Color Picker",
    "newSpreadsheetDocument": "New Spreadsheet",
    "resetDefault": "Reset to default"
  },
  "annotation": {
    "areaMeasurement": "Area",
    "arc": "Arc",
    "arcMeasurement": "Arc Measurement",
    "arrow": "Arrow",
    "callout": "Callout",
    "crop": "Crop Page",
    "caret": "Caret",
    "dateFreeText": "Calendar",
    "formFillCheckmark": "Tick",
    "formFillCross": "Cross",
    "distanceMeasurement": "Distance",
    "rectangularAreaMeasurement": "Rectangular Area",
    "ellipseMeasurement": "Ellipse Area",
    "countMeasurement": "Count measurement",
    "ellipse": "Ellipse",
    "eraser": "Eraser",
    "fileattachment": "File Attachment",
    "freehand": "Free Hand",
    "freeHandHighlight": "Free Hand Highlight",
    "freetext": "Free Text",
    "markInsertText": "Insert Text",
    "markReplaceText": "Replace Text",
    "highlight": "Highlight",
    "image": "Image",
    "line": "Line",
    "perimeterMeasurement": "Perimeter",
    "polygon": "Polygon",
    "polygonCloud": "Cloud",
    "polyline": "Polyline",
    "rectangle": "Rectangle",
    "redact": "Redact",
    "formFillDot": "Dot",
    "signature": "Signature",
    "snipping": "Snipping Tool",
    "squiggly": "Squiggly",
    "stamp": "Stamp",
    "stickyNote": "Note",
    "strikeout": "Strikeout",
    "underline": "Underline",
    "custom": "Custom",
    "rubberStamp": "Rubber Stamp",
    "note": "Note",
    "textField": "Text Field",
    "signatureFormField": "Signature Field",
    "checkBoxFormField": "Checkbox Field",
    "radioButtonFormField": "Radio Button Field",
    "listBoxFormField": "List Box Field",
    "comboBoxFormField": "Combo Box Field",
    "link": "Link",
    "other": "Other",
    "3D": "3D",
    "sound": "Sound",
    "changeView": "Change View",
    "newImage": "New Image",
    "defaultCustomStampTitle": "Custom Stamp"
  },
  "rubberStamp": {
    "Approved": "Approved",
    "AsIs": "As Is",
    "Completed": "Completed",
    "Confidential": "Confidential",
    "Departmental": "Departmental",
    "Draft": "Draft",
    "Experimental": "Experimental",
    "Expired": "Expired",
    "Final": "Final",
    "ForComment": "For Comment",
    "ForPublicRelease": "For Public Release",
    "InformationOnly": "Information Only",
    "NotApproved": "Not Approved",
    "NotForPublicRelease": "Not For Public Release",
    "PreliminaryResults": "Preliminary Results",
    "Sold": "Sold",
    "TopSecret": "Top Secret",
    "Void": "Void",
    "SHSignHere": "Sign Here",
    "SHWitness": "Witness",
    "SHInitialHere": "Initial Here",
    "SHAccepted": "Accepted",
    "SBRejected": "Rejected"
  },
  "component": {
    "attachmentPanel": "Attachments",
    "leftPanel": "Left Panel",
    "toolsHeader": "Tools",
    "searchOverlay": "Search",
    "searchPanel": "Search",
    "menuOverlay": "Menu",
    "notesPanel": "Comments",
    "indexPanel": "Index Panel",
    "outlinePanel": "Outline",
    "outlinesPanel": "Outlines",
    "newOutlineTitle": "New Outline Title",
    "outlineTitle": "Outline Title",
    "destination": "Destination",
    "bookmarkPanel": "Bookmark",
    "bookmarksPanel": "Bookmarks",
    "bookmarkTitle": "Bookmark Title",
    "bookmarkPage": "Page",
    "signaturePanel": "Signatures",
    "layersPanel": "Layers",
    "thumbnailsPanel": "Thumbnails",
    "toolsButton": "Tools",
    "redaction": "Redaction",
    "viewControls": "View Controls",
    "pageControls": "Page Controls",
    "calibration": "Calibration",
    "zoomOverlay": "Zoom Overlay",
    "textPopup": "Text Popup",
    "createStampButton": "Create New Stamp",
    "filter": "Filter",
    "multiSelectButton": "Multi Select",
    "pageReplaceModalTitle": "Replace Page",
    "files": "Files",
    "file": "File",
    "editText": "Edit Text",
    "redactionPanel": "Redaction Panel",
    "tabLabel": "Tab",
    "noteGroupSection": {
      "open": "View All Annotations",
      "close": "Close All Annotations"
    },
    "comparePanel": "Compare Panel",
    "watermarkPanel": "Watermark Panel",
    "mainMenu": "Main Menu"
  },
  "message": {
    "showMore": "Show More",
    "showLess": "Show Less",
    "toolsOverlayNoPresets": "No Presets",
    "badDocument": "Failed to load document. The document is either corrupt or not valid.",
    "customPrintPlaceholder": "e.g. 3, 4-10",
    "encryptedAttemptsExceeded": "Failed to load encrypted document. Too many attempts.",
    "encryptedUserCancelled": "Failed to load encrypted document. Password entry cancelled.",
    "enterPassword": "This document is password protected. Please enter a password",
    "incorrectPassword": "Incorrect password, attempts left: {{ remainingAttempts }}",
    "noAnnotations": "Start making annotations to leave a comment.",
    "noAnnotationsReadOnly": "This document has no annotations.",
    "noAnnotationsFilter": "Start making annotations and filters will appear here.",
    "noBookmarks": "No bookmarks available",
    "noOutlines": "No outlines available",
    "noAttachments": "This document has no attachments.",
    "noResults": "No results found.",
    "numResultsFound": "results found",
    "loadError": "Error Loading Document",
    "notSupported": "That file type is not supported.",
    "passwordRequired": "Password required",
    "enterPasswordPlaceholder": "Enter password",
    "preparingToPrint": "Preparing to print...",
    "annotationReplyCount": "{{count}} Reply",
    "annotationReplyCount_plural": "{{count}} Replies",
    "printTotalPageCount": "Total: {{count}} page",
    "printTotalPageCount_plural": "Total: {{count}} pages",
    "processing": "Processing...",
    "searching": "Searching...",
    "searchCommentsPlaceholder": "Search comments",
    "searchDocumentPlaceholder": "Search document",
    "clearSearchResults": "Clear search results",
    "searchResultsCleared": "Search results cleared",
    "searchSettingsPlaceholder": "Search settings",
    "searchSuggestionsPlaceholder": "Search suggestions",
    "signHere": "Sign here",
    "insertTextHere": "Insert text here",
    "imageSignatureAcceptedFileTypes": "Only {{acceptedFileTypes}} are accepted",
    "signatureRequired": "A signature and initial is required to continue",
    "enterMeasurement": "Enter measurement between the two points",
    "errorEnterMeasurement": "The number you have entered is invalid, you can enter values like 7.5 or 7 1/2",
    "linkURLorPage": "Link URL or a Page",
    "warning": "Warning",
    "svgMalicious": "SVG script ignored for security",
    "doNotShowAgain": "Do not show me this again",
    "doNotAskAgain": "Do not ask again",
    "enterReplacementText": "Enter the text you want to replace",
    "sort": "Sort",
    "sortBy": "Sort by",
    "emptyCustomStampInput": "Stamp text cannot be empty",
    "unpostedComment": "Unposted Comment",
    "lockedLayer": "Layer is locked",
    "layerVisibililtyNoChange": "Layer visibililty can't be changed",
    "noLayers": "This document has no layers.",
    "noSignatureFields": "This document has no signature fields.",
    "untitled": "Untitled",
    "selectHowToLoadFile": "Select how to load your document",
    "openFileByUrl": "Open file by URL:",
    "enterUrlHere": "Enter URL here",
    "openLocalFile": "Open local file:",
    "selectFile": "Select file",
    "selectPageToReplace": "Select the pages in the document you would like to replace with.",
    "embeddedFiles": "Embedded Files",
    "pageNum": "Page",
    "viewBookmark": "View Bookmark on Page",
    "error": "Error",
    "errorPageNumber": "Invalid page number. Limit is ",
    "errorBlankPageNumber": "Please specify a page number",
    "errorLoadingDocument": "There was a problem reading this document and some pages may not be displayed. This indicates the document may be corrupted. The total page count is {{totalPageCount}} and the number pages being displayed is {{displayedPageCount}}.",
    "noRevisions": "This document has no revisions."
  },
  "option": {
    "type": {
      "caret": "Caret",
      "custom": "Custom",
      "ellipse": "Ellipse",
      "fileattachment": "File Attachment",
      "freehand": "Free Hand",
      "callout": "Callout",
      "freetext": "Free Text",
      "line": "Line",
      "polygon": "Polygon",
      "polyline": "Polyline",
      "rectangle": "Rectangle",
      "redact": "Redact",
      "signature": "Signature",
      "stamp": "Stamp",
      "stickyNote": "Sticky Note",
      "highlight": "Highlight",
      "strikeout": "Strikeout",
      "underline": "Underline",
      "squiggly": "Squiggly",
      "3D": "3D",
      "other": "Other",
      "initials": "Initials",
      "saved": "Saved"
    },
    "notesOrder": {
      "dropdownLabel": "Sort Order List",
      "position": "Position",
      "time": "Time",
      "status": "Status",
      "author": "Author",
      "type": "Type",
      "color": "Color",
      "createdDate": "Created Date",
      "modifiedDate": "Modified Date"
    },
    "toolbarGroup": {
      "dropdownLabel": "Toolbar Groups",
      "flyoutLabel": "Ribbon",
      "toolbarGroup-View": "View",
      "toolbarGroup-Annotate": "Annotate",
      "toolbarGroup-Shapes": "Shapes",
      "toolbarGroup-Insert": "Insert",
      "toolbarGroup-Measure": "Measure",
      "toolbarGroup-Edit": "Edit",
      "toolbarGroup-EditText": "Edit Text",
      "toolbarGroup-FillAndSign": "Fill and Sign",
      "toolbarGroup-Forms": "Forms",
      "toolbarGroup-Redact": "Redact",
      "toolbarGroup-oe-Home": "Home",
      "toolbarGroup-oe-Insert": "Insert",
      "toolbarGroup-oe-Layout": "Layout",
      "toolbarGroup-oe-Review": "Review"
    },
    "annotationColor": {
      "StrokeColor": "Stroke",
      "FillColor": "Fill",
      "TextColor": "Text"
    },
    "colorPalette": {
      "colorLabel": "Color"
    },
    "colorPalettePicker": {
      "addColor": "Add new color",
      "selectColor": "Select color"
    },
    "displayMode": {
      "layout": "Page Layout",
      "pageTransition": "Page Transition"
    },
    "documentControls": {
      "selectTooltip": "Select multiple pages",
      "closeTooltip": "Close multiselect"
    },
    "bookmarkOutlineControls": {
      "edit": "Edit",
      "done": "Done",
      "reorder": "Reorder"
    },
    "layout": {
      "cover": "Cover Facing Page",
      "double": "Double Page",
      "single": "Single Page"
    },
    "mathSymbols": "Math symbols",
    "notesPanel": {
      "separator": {
        "today": "Today",
        "yesterday": "Yesterday",
        "unknown": "Unknown"
      },
      "noteContent": {
        "noName": "(no name)",
        "noDate": "(no date)"
      },
      "toggleMultiSelect": "Toggle Multi Select for Annotation"
    },
    "pageTransition": {
      "continuous": "Continuous Page",
      "default": "Page by Page",
      "reader": "Reader"
    },
    "print": {
      "all": "All",
      "current": "Current Page",
      "pages": "Pages to print",
      "specifyPages": "Specify Pages",
      "view": "Current View",
      "pageQuality": "Print Quality",
      "qualityNormal": "Normal",
      "qualityHigh": "High",
      "includeAnnotations": "Include annotations",
      "includeComments": "Include comments",
      "printSettings": "Print Settings",
      "printGrayscale": "Print Grayscale",
      "printCurrentDisabled": "Current view is only available when viewing a single page."
    },
    "printInfo": {
      "author": "Author",
      "subject": "Subject",
      "date": "Date"
    },
    "redaction": {
      "markForRedaction": "Mark for redaction"
    },
    "searchPanel": {
      "caseSensitive": "Case sensitive",
      "wholeWordOnly": "Whole word",
      "wildcard": "Wildcard",
      "replace": "Replace",
      "replaceAll": "Replace All",
      "replaceText": "Replace Text",
      "confirmMessageReplaceAll": "Are you sure you want to replace all text?",
      "confirmMessageReplaceOne": "Are you sure you want to replace this text?",
      "moreOptions": "More options",
      "lessOptions": "Less options",
      "confirm": "Confirm"
    },
    "toolsOverlay": {
      "currentStamp": "Current Stamp",
      "currentSignature": "Current Signature",
      "signatureAltText": "Signature"
    },
    "stampOverlay": {
      "addStamp": "Add New Stamp"
    },
    "signatureOverlay": {
      "addSignatureOrInitials": "New Signature/Initials",
      "addSignature": "New Signature"
    },
    "signatureModal": {
      "modalName": "Create New Signature",
      "dragAndDrop": "Drag & Drop your image here",
      "or": "Or",
      "pickImage": "Choose a signature",
      "selectImage": "Select your image here",
      "typeSignature": "Type Signature*",
      "typeInitial": "Type Initials*",
      "drawSignature": "Draw Signature*",
      "drawInitial": "Draw Initials*",
      "imageSignature": "Image Signature",
      "imageInitial": "Image Initials",
      "pickInitialsFile": "Choose Initials",
      "noSignatures": "There are currently no saved signatures.",
      "fontStyle": "Font style",
      "textSignature": {
        "dropdownLabel": "Font Family"
      }
    },
    "pageReplacementModal": {
      "yourFiles": "Your Files",
      "chooseFile": "Choose a file",
      "localFile": "Upload",
      "pageReplaceInputLabel": "Replace Page",
      "pageReplaceInputFromSource": "With Page(s)",
      "warning": {
        "title": "Exit replace page?",
        "message": "Exiting will cancel all of the selections you have made so far. Are you sure you still want to exit?"
      }
    },
    "filterAnnotModal": {
      "color": "Color",
      "includeReplies": "Include replies",
      "filters": "Filters",
      "user": "User",
      "type": "Type",
      "status": "Status",
      "filterSettings": "Filter Settings",
      "filterDocument": "Filter document and comments panel"
    },
    "state": {
      "accepted": "Accepted",
      "rejected": "Rejected",
      "completed": "Completed",
      "cancelled": "Cancelled",
      "set": "Set status:",
      "setBy": "set by",
      "none": "None",
      "marked": "Marked",
      "unmarked": "Unmarked"
    },
    "measurementOverlay": {
      "scale": "Scale Ratio",
      "angle": "Angle",
      "distance": "Distance",
      "perimeter": "Perimeter",
      "area": "Area",
      "distanceMeasurement": "Distance Measurement",
      "perimeterMeasurement": "Perimeter Measurement",
      "arcMeasurement": "Arc Measurement",
      "areaMeasurement": "Area Measurement",
      "countMeasurement": "Count measurement",
      "radius": "Radius",
      "count": "Count",
      "length": "Length",
      "xAxis": "X-Axis",
      "yAxis": "Y-Axis"
    },
    "freeTextOption": {
      "autoSizeFont": "Scale font size dynamically"
    },
    "measurementOption": {
      "scale": "Scale",
      "selectScale": "Select Scale",
      "selectScaleDropdown": "Select Scale Dropdown"
    },
    "measurement": {
      "scaleModal": {
        "calibrate": "Calibrate",
        "custom": "Custom",
        "fractionalUnits": "Fractional Units",
        "precision": "Precision",
        "preset": "Preset",
        "paperUnits": "Paper Units",
        "displayUnits": "Display Units",
        "fractionUnitsTooltip": "Fraction units only apply to in and ft-in",
        "incorrectSyntax": "Incorrect syntax",
        "units": "Units"
      },
      "scaleOverlay": {
        "addNewScale": "Add New Scale",
        "selectTwoPoints": "Select two points of a known dimension to calibrate",
        "inputKnowDimension": "Input known dimension and units to calibrate",
        "multipleScales": "Multiple Scales"
      },
      "deleteScaleModal": {
        "deleteScale": "Delete Scale",
        "scaleIsOn-delete-info": "This scale is currently in use on",
        "page-delete-info": "page",
        "appliedTo-delete-info": "and applied to",
        "measurement": "measurement",
        "measurements": "measurements",
        "deletionIs": "Deletion is",
        "irreversible": "irreversible",
        "willDeleteMeasurement": "and will delete the associated measurements.",
        "confirmDelete": "Are you sure you want to delete this scale?",
        "thisCantBeUndone": " This can't be undone.",
        "ifChangeScale": "If you change the scale for the selected measurement or tool, scale ",
        "notUsedWillDelete": " will no longer be used by any measurements or tools and will be deleted. Deletion is irreversible.",
        "ifToContinue": "Are you sure you'd like to continue?"
      }
    },
    "contentEdit": {
      "deletionModal": {
        "title": "Delete Content",
        "message": "Are you sure you want to delete the selected content? This can't be undone."
      },
      "digitalSign": {
        "title": "Warning Sealed Document",
        "message": "This document has been signed and cannot be altered or changed."
      }
    },
    "stylePopup": {
      "textStyle": "Text Style",
      "colors": "Colors",
      "invalidFontSize": "Font size must be in the following range",
      "labelText": "Label Text",
      "labelTextPlaceholder": "Add label text"
    },
    "styleOption": {
      "style": "Style",
      "solid": "Solid",
      "cloudy": "Cloudy"
    },
    "slider": {
      "opacity": "Opacity",
      "thickness": "Stroke",
      "text": "Text Size"
    },
    "shared": {
      "page": "Page",
      "precision": "Precision",
      "enableSnapping": "Enable snapping for measurement tools"
    },
    "watermark": {
      "title": "Watermark",
      "addWatermark": "Add Watermark",
      "size": "Size",
      "location": "Choose a location to edit watermarks",
      "text": "Text",
      "style": "Style",
      "resetAllSettings": "Reset All Settings",
      "font": "Font",
      "addNew": "Add New",
      "locations": {
        "center": "Center",
        "topLeft": "Top Left",
        "topRight": "Top Right",
        "topCenter": "Top Center",
        "bottomLeft": "Bottom Left",
        "bottomRight": "Bottom Right",
        "bottomCenter": "Bottom Center"
      }
    },
    "thumbnailPanel": {
      "delete": "Delete Page",
      "rotateClockwise": "Rotate Clockwise",
      "rotateCounterClockwise": "Rotate Counterclockwise",
      "rotatePageClockwise": "Rotate Page Clockwise",
      "rotatePageCounterClockwise": "Rotate Page Counterclockwise",
      "moreOptions": "More Options",
      "moreOptionsMenu": "More Thumbnails Options Menu",
      "enterPageNumbers": "Enter page numbers to select",
      "multiSelectPages": "Multi-Select Pages",
      "multiSelectPagesExample": "e.g. 1, 3, 5-10"
    },
    "thumbnailsControlOverlay": {
      "move": "Move pages"
    },
    "richText": {
      "bold": "Bold",
      "italic": "Italic",
      "underline": "Underline",
      "strikeout": "Strikeout",
      "alignLeft": "Text align left",
      "alignRight": "Text align right",
      "alignCenter": "Text align center",
      "justifyCenter": "Text justify center",
      "alignTop": "Align top",
      "alignMiddle": "Align middle",
      "alignBottom": "Align bottom"
    },
    "customStampModal": {
      "modalName": "Create New Stamp",
      "stampText": "Stamp text",
      "timestampText": "Timestamp text",
      "Username": "Username",
      "Date": "Date",
      "Time": "Time",
      "fontStyle": "Font style",
      "dateFormat": "Date format",
      "month": "Month",
      "day": "Day",
      "year": "Year",
      "hour": "Hour",
      "minute": "Minute",
      "second": "Second",
      "textColor": "Text color",
      "backgroundColor": "Background color",
      "dateToolTipLabel": "More info about date format",
      "previewCustomStamp": "Preview of"
    },
    "pageRedactModal": {
      "addMark": "Add Mark",
      "pageSelection": "Page Selection",
      "current": "Current Page",
      "specify": "Specify Pages",
      "odd": "Odd Pages only",
      "even": "Even Pages only"
    },
    "lineStyleOptions": {
      "title": "Style"
    },
    "settings": {
      "settings": "Settings",
      "searchSettings": "Search Settings",
      "general": "General",
      "language": "Language",
      "theme": "Theme",
      "darkMode": "Dark mode",
      "lightMode": "Light mode",
      "advancedSetting": "Advanced Settings",
      "viewing": "Viewing",
      "disableFadePageNavigationComponent": "Disable Fade Page Navigation Component",
      "disableFadePageNavigationComponentDesc": "Always keep the Page Navigation Component on screen. Default behaviour is to fade it after certain period of inactivity.",
      "enabledFormFieldHighlighting": "Enable Form Field Highlights",
      "enabledFormFieldHighlightingDesc": "Enable highlighting of form fields in PDF documents. Enabled by default.",
      "disableNativeScrolling": "Disable Native Scrolling",
      "disableNativeScrollingDesc": "Disable native mobile device scrolling behavior if it had previously been enabled. Note that native mobile device scrolling behavior is off by default.",
      "annotations": "Annotations",
      "disableToolDefaultStyleUpdateFromAnnotationPopup": "Disable Tool Default Style Update From Annotation Popup",
      "disableToolDefaultStyleUpdateFromAnnotationPopupDesc": "Disables syncing of annotation style updates to the associated tool that created the annotation. So if an annotation's style is changed the tool default styles will not be updated.",
      "notesPanel": "Notes Panel",
      "disableNoteSubmissionWithEnter": "Disable Note Submission With Enter",
      "disableNoteSubmissionWithEnterDesc": "Disable the ability to submit notes by only pressing Enter if it had previously been enabled. This will revert note submission to the default which is Ctrl/Cmd + Enter.",
      "disableAutoExpandCommentThread": "Disable Auto Expand Comment Thread",
      "disableAutoExpandCommentThreadDesc": "Disables the automatic expansion of all the comments threads in the Notes Panel.",
      "disableReplyCollapse": "Disable Reply Collapse",
      "disableReplyCollapseDesc": "Disables the collapsing of the replies in the Notes Panel.",
      "disableTextCollapse": "Disable Text Collapse",
      "disableTextCollapseDesc": "Disables the collapsing of the annotation's text in the Notes Panel.",
      "search": "Search",
      "disableClearSearchOnPanelClose": "Disable Clear Search On Panel Close",
      "disableClearSearchOnPanelCloseDesc": "Disable clearing search results when user closes search panel. When disabled, search results are kept even if user closes and reopens search panel. Note, mobile devices never clear search results even if this setting is enabled. This is because the panel needs to be closed to view the search results on the document.",
      "pageManipulation": "Page Manipulation",
      "disablePageDeletionConfirmationModal": "Disable Page Deletion Confirmation Modal",
      "disablePageDeletionConfirmationModalDesc": "Disable the confirmation modal when deleting a page from the thumbnail view",
      "disableMultiselect": "Disable Multiselect",
      "disableMultiselectDesc": "Disable multi select in the left thumbnail panel",
      "miscellaneous": "Miscellaneous",
      "keyboardShortcut": "Keyboard Shortcut",
      "command": "Command",
      "description": "Description",
      "action": "Action",
      "rotateDocumentClockwise": "Rotate the document clockwise",
      "rotateDocumentCounterclockwise": "Rotate the document counterclockwise",
      "copyText": "Copy selected text or annotations",
      "pasteText": "Paste text or annotations",
      "undoChange": "Undo an annotation change",
      "redoChange": "Redo an annotation change",
      "openFile": "Open the file picker",
      "openSearch": "Open the search overlay",
      "zoomOptions": "Zoom Options",
      "zoomIn": "Zoom in",
      "zoomOut": "Zoom out",
      "setHeaderFocus": "Sets the focus to the header",
      "fitScreenWidth": "Fit the document to the screen width in a small screen(< 640px), otherwise fit it to its original size",
      "print": "Print",
      "bookmarkOpenPanel": "Quickly bookmark a page and open the bookmark panel",
      "goToPreviousPage": "Go to the previous page",
      "goToNextPage": "Go to the next page",
      "goToPreviousPageArrowUp": "Go to the previous page in single layout mode (ArrowUp)",
      "goToNextPageArrowDown": "Go to the next page in single layout mode (ArrowDown)",
      "holdSwitchPan": "Hold to switch to Pan mode and release to return to previous tool",
      "selectAnnotationEdit": "Select the AnnotationEdit tool",
      "selectPan": "Select the Pan tool",
      "selectCreateArrowTool": "Select the AnnotationCreateArrow tool",
      "selectCreateCalloutTool": "Select the AnnotationCreateCallout tool",
      "selectEraserTool": "Select the AnnotationEraser tool",
      "selectCreateFreeHandTool": "Select the AnnotationCreateFreeHand tool",
      "selectCreateStampTool": "Select the AnnotationCreateStamp tool",
      "selectCreateLineTool": "Select the AnnotationCreateLine tool",
      "selectCreateStickyTool": "Select the AnnotationCreateSticky tool",
      "selectCreateEllipseTool": "Select the AnnotationCreateEllipse tool",
      "selectCreateRectangleTool": "Select the AnnotationCreateRectangle tool",
      "selectCreateRubberStampTool": "Select the AnnotationCreateRubberStamp tool",
      "selectCreateFreeTextTool": "Select the AnnotationCreateFreeText tool",
      "openSignatureModal": "Open the signature modal or the overlay",
      "selectCreateTextSquigglyTool": "Select the AnnotationCreateTextSquiggly tool",
      "selectCreateTextHighlightTool": "Select the AnnotationCreateTextHighlight tool",
      "selectCreateTextStrikeoutTool": "Select the AnnotationCreateTextStrikeout tool",
      "selectCreateTextUnderlineTool": "Select the AnnotationCreateTextUnderline tool",
      "editKeyboardShortcut": "Edit Keyboard Shortcut",
      "setShortcut": "Set Shortcut",
      "editShortcut": "Edit Shortcut",
      "shortcutAlreadyExists": "The keyboard shortcut above already exists.",
      "close": "Close tooltip"
    },
    "cellBorderStyle": {
      "none": "None",
      "thin": "Solid",
      "dashed": "Dashed",
      "dotted": "Dotted"
    }
  },
  "warning": {
    "deletePage": {
      "deleteTitle": "Delete Page",
      "deleteMessage": "Are you sure you want to delete the selected page(s). This can't be undone.",
      "deleteLastPageMessage": "You cannot delete all pages in the document."
    },
    "extractPage": {
      "title": "Extract Page",
      "message": "Are you sure you want to extract the selected page(s)?",
      "confirmBtn": "Extract",
      "secondaryBtn": "Extract and Delete"
    },
    "redaction": {
      "applyTile": "Apply Redaction",
      "applyMessage": "This action will permanently remove all items selected for redaction. It cannot be undone."
    },
    "deleteBookmark": {
      "title": "Delete Bookmark?",
      "message": "Are you sure you want to delete these bookmarks? You cannot undo this action."
    },
    "deleteOutline": {
      "title": "Delete Outline?",
      "message": "Are you sure you want to delete these outlines?\n\nDeleting an outline that has nested outlines will result in the whole inner structure being deleted and, if needed, will have to be recreated."
    },
    "selectPage": {
      "selectTitle": "No Pages Selected",
      "selectMessage": "Please select pages and try again."
    },
    "colorPicker": {
      "deleteTitle": "Delete custom color",
      "deleteMessage": "Delete the selected custom color? It will be removed from your color palette."
    },
    "colorPalettePicker": {
      "deleteTitle": "Delete custom color"
    },
    "multiDeleteAnnotation": {
      "title": "Delete Annotations?",
      "message": "Deleting will remove all comments, replies, and grouping and cannot be undone. \n\n Are you sure you want to delete these annotations?"
    },
    "closeFile": {
      "title": "Close without downloading?",
      "message": "There are changes made to this document, are you sure you want to close it without downloading your work? You can't undo this action.",
      "rejectDownloadButton": "Close without download"
    },
    "connectToURL": {
      "title": "Security Warning",
      "message": "This document is trying to connect to: \n\n{{- uri}}\n\n If you trust this document, click Confirm to open it."
    },
    "sheetTabRenameIssueOne": {
      "title": "Edit Warning",
      "message": "This name already exists. Please enter another name."
    },
    "sheetTabRenameIssueTwo": {
      "title": "Edit Warning",
      "message": "The sheet name cannot be empty."
    },
    "sheetTabDeleteMessage": {
      "title": "Edit Warning",
      "message": "Are you sure you want to delete this sheet?"
    },
    "officeEditorPageLayout": {
      "title": "Page Layout",
      "columnsMessage": "Settings you chose for column spacing are too large for the page width in some sections.",
      "marginsMessage": "Settings you chose for margins are too large for the page width in some sections."
    }
  },
  "shortcut": {
    "arrow": "(A)",
    "callout": "(C)",
    "copy": "(Ctrl C)",
    "delete": "(Del)",
    "ellipse": "(O)",
    "eraser": "(E)",
    "freehand": "(F)",
    "freetext": "(T)",
    "highlight": "(H)",
    "line": "(L)",
    "pan": "(P)",
    "rectangle": "(R)",
    "rotateClockwise": "(Ctrl Shift +)",
    "rotateCounterClockwise": "(Ctrl Shift -)",
    "select": "(Esc)",
    "signature": "(S)",
    "squiggly": "(G)",
    "image": "(I)",
    "redo": "(Ctrl Shift Z)",
    "redo_windows": "(Ctrl Y)",
    "undo": "(Ctrl Z)",
    "stickyNote": "(N)",
    "strikeout": "(K)",
    "underline": "(U)",
    "zoomIn": "(Ctrl +)",
    "zoomOut": "(Ctrl -)",
    "richText": {
      "bold": "(Ctrl B)",
      "italic": "(Ctrl I)",
      "underline": "(Ctrl U)",
      "strikeout": "(Ctrl K)"
    },
    "rotate3D": "Shift + Drag",
    "zoom3D": "Shift + Scroll"
  },
  "tool": {
    "pan": "Pan",
    "select": "Select",
    "selectAnOption": "Select an option",
    "Marquee": "Marquee Zoom",
    "Link": "Link URL or Page",
    "Standard": "Standard",
    "Custom": "Custom"
  },
  "link": {
    "url": "URL",
    "page": "Page",
    "enterurl": "Enter URL you would like to link to",
    "enterUrlAlt": "Enter URL",
    "insertLink": "Insert Link",
    "insertLinkOrPage": "Insert Link or Page",
    "enterpage": "Enter the page number you would like to link to",
    "urlLink": "URL link"
  },
  "Model3D": {
    "add3D": "Add 3D object",
    "enterurl": "Enter the URL of the 3D object in glTF format",
    "enterurlOrLocalFile": "Enter the URL or upload a 3D object in glTF format",
    "formatError": "Only glTF (.glb) format is supported"
  },
  "OpenFile": {
    "enterUrlOrChooseFile": "Enter a URL or choose a file to load into WebViewer",
    "enterUrl": "Enter file URL",
    "extension": "File Extension",
    "existingFile": "File is already open",
    "addTab": "Add Tab",
    "newTab": "New Tab"
  },
  "datePicker": {
    "previousMonth": "Previous Month",
    "nextMonth": "Next Month",
    "months": [
      "January",
      "February",
      "March",
      "April",
      "May",
      "June",
      "July",
      "August",
      "September",
      "October",
      "November",
      "December"
    ],
    "monthsShort": [
      "Jan",
      "Feb",
      "Mar",
      "Apr",
      "May",
      "Jun",
      "Jul",
      "Aug",
      "Sept",
      "Oct",
      "Nov",
      "Dec"
    ],
    "weekdays": [
      "Sunday",
      "Monday",
      "Tuesday",
      "Wednesday",
      "Thursday",
      "Friday",
      "Saturday"
    ],
    "weekdaysShort": [
      "Sun",
      "Mon",
      "Tue",
      "Wed",
      "Thu",
      "Fri",
      "Sat"
    ],
    "today": "Today",
    "invalidDateTime": "Invalid Date/Time: Input should match format"
  },
  "formField": {
    "indexPanel": {
      "formFieldList": "Form Field List",
      "notFields": "This document has no form fields"
    },
    "formFieldPopup": {
      "fieldName": "Field Name",
      "fieldValue": "Default Value",
      "readOnly": "Read Only",
      "multiSelect": "Multi Select",
      "required": "Required",
      "multiLine": "Multiline",
      "apply": "Apply",
      "cancel": "Cancel",
      "flags": "Field Flags",
      "fieldSize": "Field Size",
      "options": "Options",
      "properties": "Properties",
      "radioGroups": "Radio buttons with the same Field Name will belong in the same grouping.",
      "nameRequired": "Field name is required",
      "fieldIndicator": "Field Indicators",
      "documentFieldIndicator": "Document Field Indicators",
      "includeFieldIndicator": "Include Field Indicator",
      "indicatorPlaceHolders": {
        "TextFormField": "Insert Text Here",
        "CheckBoxFormField": "Check",
        "RadioButtonFormField": "Fill",
        "ListBoxFormField": "Select",
        "ComboBoxFormField": "Select",
        "SignatureFormField": {
          "fullSignature": "Sign Here",
          "initialsSignature": "Initial Here"
        }
      },
      "size": "Size",
      "width": "Width",
      "height": "Height",
      "invalidField": {
        "duplicate": "Field Name already exists",
        "empty": "Field Name cannot be empty"
      }
    },
    "formFieldPanel": {
      "SignatureFormField": "Signature Field Annotation",
      "CheckBoxFormField": "Checkbox Field Annotation",
      "RadioButtonFormField": "Radio Button Field Annotation",
      "ListBoxFormField": "List Box Field Annotation",
      "ComboBoxFormField": "Combo Box Field Annotation",
      "TextFormField": "Text Field Annotation"
    },
    "apply": "Apply Fields",
    "type": "Field Type",
    "types": {
      "text": "Text",
      "signature": "Signature",
      "checkbox": "Check box",
      "radio": "Radio button",
      "listbox": "List box",
      "combobox": "Combo box",
      "button": "Button"
    }
  },
  "alignmentPopup": {
    "alignment": "Align",
    "alignLeft": "Align Left",
    "alignHorizontalCenter": "Align Horizontal Center",
    "alignVerticalCenter": "Align Vertical Center",
    "alignRight": "Align Right",
    "alignTop": "Align Top",
    "alignBottom": "Align Bottom",
    "distribute": "Distribute",
    "distributeHorizontal": "Distribute Horizontally",
    "distributeVertical": "Distribute Vertically"
  },
  "digitalSignatureModal": {
    "certification": "certification",
    "Certification": "Certification",
    "signature": "signature",
    "Signature": "Signature",
    "valid": "valid",
    "invalid": "invalid",
    "unknown": "unknown",
    "title": "{{type}} Properties",
    "header": {
      "documentIntegrity": "Document Integrity",
      "identitiesTrust": "Identities & Trust",
      "generalErrors": "General Errors",
      "digestStatus": "Digest Status"
    },
    "documentPermission": {
      "noChangesAllowed": "The {{editor}} has specified that no changes are allowed for this document",
      "formfillingSigningAllowed": "The {{editor}} has specified that Form Fill-in and Signing are allowed for this document. No other changes are permitted.",
      "annotatingFormfillingSigningAllowed": "The {{editor}} has specified that Form Fill-in, Signing and Commenting are allowed for this document. No other changes are permitted.",
      "unrestricted": "The {{editor}} has specified that there are no restrictions for this document."
    },
    "digestAlgorithm": {
      "preamble": "The digest algorithm that was used to sign the signature: ",
      "unknown": "The digest algorithm that was used to sign the signature is unknown."
    },
    "trustVerification": {
      "none": "No detailed trust verification result available.",
      "current": "Trust verification attempted with respect to current time",
      "signing": "Trust verification attempted with respect to signing time: {{trustVerificationTime}}",
      "timestamp": "Trust verification attempted with respect to secure embedded timestamp: {{trustVerificationTime}}"
    },
    "signerIdentity": {
      "preamble": "The signer's identity is ",
      "valid": "valid.",
      "unknown": "unknown."
    },
    "summaryBox": {
      "summary": "Digital {{type}} is {{status}}",
      "signedBy": ", signed by {{name}}"
    }
  },
  "digitalSignatureVerification": {
    "certifier": "certifier",
    "certified": "certified",
    "Certified": "Certified",
    "Certification": "Certification",
    "signer": "signer",
    "signed": "signed",
    "Signed": "Signed",
    "Signature": "Signature",
    "by": "by",
    "on": "on",
    "disallowedChange": "Disallowed Change: {{type}}, objnum: {{objnum}}",
    "unsignedSignatureField": "Unsigned signature field: {{fieldName}}",
    "signatureProperties": "Signature Properties",
    "trustVerification": {
      "current": "Verification time used was the current time",
      "signing": "Verification time is from the clock on the signer's computer",
      "timestamp": "Verification time is from the secure timestamp embedded in the document",
      "verifiedTrust": "Trust verification result: Verified",
      "noTrustVerification": "No detailed trust verification result available."
    },
    "permissionStatus": {
      "noPermissionsStatus": "No permissions status to report.",
      "permissionsVerificationDisabled": "Permissions verification has been disabled.",
      "hasAllowedChanges": "The document has changes that are allowed by the signature's permissions settings.",
      "invalidatedByDisallowedChanges": "The document has changes that are disallowed by the signature's permissions settings.",
      "unmodified": "The document has not been modified since it was",
      "unsupportedPermissionsFeatures": "Encountered unsupported permissions features."
    },
    "trustStatus": {
      "trustVerified": "Established trust in {{verificationType}} successfully.",
      "untrusted": "Trust could not be established.",
      "trustVerificationDisabled": "Trust verification has been disabled.",
      "noTrustStatus": "No trust status to report."
    },
    "digestStatus": {
      "digestInvalid": "The digest is incorrect.",
      "digestVerified": "The digest is correct.",
      "digestVerificationDisabled": "Digest verification has been disabled.",
      "weakDigestAlgorithmButDigestVerifiable": "The digest is correct, but the digest algorithm is weak and not secure.",
      "noDigestStatus": "No digest status to report.",
      "unsupportedEncoding": "No installed SignatureHandler was able to recognize the signature's encoding",
      "documentHasBeenAltered": "Document has been altered or corrupted since it was signed."
    },
    "documentStatus": {
      "noError": "No general error to report.",
      "corruptFile": "SignatureHandler reported file corruption.",
      "unsigned": "The signature has not yet been cryptographically signed.",
      "badByteRanges": "SignatureHandler reports corruption in the ByteRanges in the digital signature.",
      "corruptCryptographicContents": "SignatureHandler reports corruption in the Contents of the digital signature."
    },
    "signatureDetails": {
      "signatureDetails": "Signature Details",
      "contactInformation": "Contact Information",
      "location": "Location",
      "reason": "Reason",
      "signingTime": "Signing Time",
      "noContactInformation": "No contact information provided",
      "noLocation": "No location provided",
      "noReason": "No reason provided",
      "noSigningTime": "No signing time found"
    },
    "panelMessages": {
      "noSignatureFields": "This document has no signature fields",
      "certificateDownloadError": "Error encountered when trying to download a trusted certificate",
      "localCertificateError": "There are some issues with reading a local certificate"
    },
    "verificationStatus": {
      "valid": "{{verificationType}} is valid.",
      "failed": "{{verificationType}} failed."
    }
  },
  "cropPopUp": {
    "title": "Pages to Crop",
    "allPages": "All",
    "singlePage": "Current Page",
    "multiPage": "Specify Page",
    "cropDimensions": "Crop Dimensions",
    "dimensionInput": {
      "unitOfMeasurement": "Unit",
      "autoTrim": "Presets",
      "autoTrimCustom": "Custom"
    },
    "cropModal": {
      "applyTitle": "Apply crop?",
      "applyMessage": "This action will permanently crop all selected pages. It cannot be undone.",
      "cancelTitle": "Cancel crop?",
      "cancelMessage": "Are you sure you want to cancel cropping all selected pages?"
    }
  },
  "snippingPopUp": {
    "title": "Snipping Tool",
    "clipboard": "Copy to Clipboard",
    "download": "Download",
    "cropAndRemove": "Crop and Remove",
    "snippingModal": {
      "applyTitle": "Apply snipping?",
      "applyMessage": "This action will permanently cut out the specified area and remove other pages. It cannot be undone.",
      "cancelTitle": "Cancel snipping?",
      "cancelMessage": "Are you sure you want to stop snipping?"
    }
  },
  "textEditingPanel": {
    "paragraph": "Paragraph",
    "text": "Text"
  },
  "redactionPanel": {
    "noMarkedRedactions": "Start redacting by marking text, regions, pages or making a search.",
    "redactionSearchPlaceholder": "Redact by keyboard or patterns",
    "redactionCounter": "Marked for Redaction",
    "clearMarked": "Clear",
    "redactAllMarked": "Redact All",
    "redactionItems": "Redaction Items",
    "redactionItem": {
      "regionRedaction": "Region redaction",
      "fullPageRedaction": "Full page redaction",
      "fullVideoFrameRedaction": "Video Redaction",
      "audioRedaction": "Audio Redaction",
      "fullVideoFrameAndAudioRedaction": "Video and Audio Redaction",
      "image": "Image"
    },
    "expand": "Expand",
    "collapse": "Collapse",
    "searchResults": "Search Results",
    "search": {
      "creditCards": "Credit Card",
      "phoneNumbers": "Phone Numbers",
      "images": "Images",
      "emails": "Emails",
      "pattern": "Patterns",
      "start": "Start making your search"
    }
  },
  "wv3dPropertiesPanel": {
    "propertiesHeader": "Properties",
    "miscValuesHeader": "All",
    "emptyPanelMessage": "Select an element to view its properties."
  },
  "watermarkPanel": {
    "textWatermark": "Text Watermark",
    "uploadImage": "Upload Image",
    "browse": "Browse",
    "watermarkOptions": "Watermark Options",
    "watermarks": "Watermarks"
  },
  "portfolio": {
    "createPDFPortfolio": "Create PDF Portfolio",
    "uploadFiles": "Upload Files",
    "uploadFolder": "Upload Folder",
    "addFiles": "Add Files",
    "addFile": "Add File",
    "addFolder": "Add Folder",
    "createFolder": "Create Folder",
    "portfolioPanelTitle": "PDF Portfolio",
    "portfolioNewFolder": "New Folder",
    "portfolioDocumentTitle": "Document Title",
    "portfolioFolderPlaceholder": "Folder Name",
    "portfolioFilePlaceholder": "File Name",
    "folderNameAlreadyExists": "Folder name already exists",
    "fileNameAlreadyExists": "File name already exists",
    "openFile": "Open in New Tab",
    "fileAlreadyExists": "File Already Exists",
    "fileAlreadyExistsMessage": "The file \"{{fileName}}\" already exists in the portfolio.",
    "deletePortfolio": "Are you sure you want to delete \"{{fileName}}\"?",
    "reselect": "Reselect"
  },
  "languageModal": {
    "selectLanguage": "Select language"
  },
  "officeEditor": {
    "bold": "Bold",
    "italic": "Italic",
    "underline": "Underline",
    "textColor": "Text color",
    "leftAlign": "Left align",
    "centerAlign": "Center align",
    "rightAlign": "Right align",
    "justify": "Justify",
    "lineSpacing": "Line & paragraph spacing",
    "lineSpacingMenu": "Line Spacing",
    "bulletList": "Bulleted list",
    "numberList": "Numbered list",
    "decreaseIndent": "Decrease indent",
    "increaseIndent": "Increase indent",
    "nonPrintingCharacters": "Non-printing characters",
    "insertLink": "Insert link",
    "insertImage": "Insert image",
    "image": "Image",
    "table": "Table",
    "insertRowAbove": "Insert Row Above",
    "insertRowBelow": "Insert Row Below",
    "insertColumnRight": "Insert Column Right",
    "insertColumnLeft": "Insert Column Left",
    "deleteRow": "Delete Row",
    "deleteColumn": "Delete Column",
    "deleteTable": "Delete Table",
    "deleted": "Deleted: ",
    "added": "Added: ",
    "editing": "Editing",
    "editingDescription": "Edit document",
    "reviewing": "Reviewing",
    "reviewingDescription": "Make suggestions",
    "viewOnly": "Viewing",
    "viewOnlyDescription": "View without suggestions",
    "notSupportedOnMobile": "Office editing is not supported on mobile devices.",
    "previewAllChanges": "Preview all changes",
    "accept": "Accept",
    "reject": "Reject",
    "pastingTitle": "Pasting not available",
    "pastingMessage": "Pasting is not supported in your browser. Instead, you can use a keyboard shortcut",
    "pastingWithoutFormatTitle": "Pasting without formatting not available",
    "pastingWithoutFormatMessage": "Pasting without formatting is not supported in your browser. Instead, you can use a keyboard shortcut",
    "breaks": "Breaks",
    "pageBreak": "Page Break",
    "pageBreakDescription": "End page and start on new page",
    "sectionBreakNextPage": "Section Break - Next Page",
    "sectionBreakNextPageDescription": "Insert section break and start on next page",
    "sectionBreakContinuous": "Section Break - Continuous",
    "sectionBreakContinuousDescription": "Insert section break and continue on the same page ",
    "section": "Section",
    "margins": "Margins",
    "normal": "Normal",
    "narrow": "Narrow",
    "moderate": "Moderate",
    "wide": "Wide",
    "top": "Top",
    "bottom": "Bottom",
    "left": "Left",
    "right": "Right",
    "customMargins": "Custom Margins",
    "customMarginsDescription": "Define custom margins",
    "column": "Column",
    "columns": "Columns",
    "singleColumn": "1 Column",
    "twoColumn": "2 Columns",
    "threeColumn": "3 Columns",
    "customColumn": "Custom Columns",
    "customColumnDescription": "Define custom columns",
    "unitMeasurement": "Unit Measurement",
    "header": {
      "0": "Header",
      "1": "First Page Header",
      "2": "Even Page Header",
      "3": "Odd Page Header",
      "-1": "Invalid Header"
    },
    "footer": {
      "0": "Footer",
      "1": "First Page Footer",
      "2": "Even Page Footer",
      "3": "Odd Page Footer",
      "-1": "Invalid Footer"
    },
    "options": "Options",
    "pageOptions": "Page Options",
    "removeHeader": "Remove Header",
    "removeFooter": "Remove Footer",
    "headerFooterOptionsModal": {
      "title": "Header & footer format",
      "headerFromTop": "Header from Top",
      "footerFromBottom": "Footer from Bottom",
      "layouts": {
        "layout": "Layout",
        "noSelection": "No Selection",
        "differentFirstPage": "Different First Page",
        "differentEvenOddPages": "Different Even & Odd Pages",
        "differentFirstEvenOddPages": "Different First, Even, and Odd Pages"
      }
    },
    "columnsModal": {
      "title": "Custom Column Adjustment",
      "columnAmount": "Number of Columns",
      "columnNumber": "Column Number",
      "width": "Width",
      "spacing": "Spacing",
      "widthAndSpacing": "Width and Spacing",
      "equalColumns": "Equal Column Width"
    },
    "marginsModal": {
      "title": "Custom Margin Adjustment",
      "leftMargin": "Left Margin",
      "rightMargin": "Right Margin",
      "topMargin": "Top Margin",
      "bottomMargin": "Bottom Margin"
    },
    "lineSpacingOptions": {
      "15": "1.5",
      "115": "1.15",
      "single": "Single",
      "double": "Double",
      "custom": "Custom"
    },
    "numberDropdown": {
      "6": "Number Latin Roman 1",
      "7": "Number Decimal",
      "8": "Number Latin Roman 2",
      "10": "Latin Roman",
      "11": "Roman Latin Number",
      "dropdownLabel": "Numbering Presets"
    },
    "bulletDropdown": {
      "0": "Bullet",
      "1": "Bullet Square",
      "2": "Square Bullet",
      "3": "Diamond",
      "4": "Check",
      "5": "Arrow",
      "dropdownLabel": "Bullet Presets"
    },
    "fontSize": {
      "dropdownLabel": "Font Size"
    },
    "fontStyles": {
      "dropdownLabel": "Font Styles"
    },
    "fontFamily": {
      "dropdownLabel": "Font Family"
    }
  },
  "spreadsheetEditor": {
    "editing": "Editing",
    "viewOnly": "Viewing",
    "editingDescription": "Edit document",
    "viewOnlyDescription": "View only",
    "editModeDropdown": "Edit mode selection",
    "bold": "Bold",
    "italic": "Italic",
    "underline": "Underline",
    "strikethrough": "Strikethrough",
    "strikeout": "Strikeout",
    "cellBorderStyle": "Border Style",
    "merge": "Merge",
    "unmerge": "Unmerge",
    "cellFormat": "Cell Format",
    "automaticFormat": "Automatic",
    "plainTextFormat": "Plain text",
    "increaseDecimalFormat": "Increase decimal",
    "decreaseDecimalFormat": "Decrease decimal",
    "numberFormat": "Number",
    "percentFormat": "Percent",
    "accountingFormat": "Accounting",
    "financialFormat": "Financial",
    "currencyFormat": "Currency",
    "currencyRoundedFormat": "Currency rounded",
    "calendarFormat": "Date",
    "clockHourFormat": "Time",
    "calendarTimeFormat": "Date Time",
    "formatAsCurrency": "Format as currency",
    "formatAsPercent": "Format as percent",
    "formatAsDecDecimal": "Decrease decimal point",
    "formatAsIncDecimal": "Increase decimal point",
    "textColor": "Text Color",
    "cellBackgroundColor": "Background Color",
    "cellBorderColor": "Border Color",
    "textLabel": "Text",
    "backgroundLabel": "Background",
    "borderLabel": "Border",
    "textAlignment": "Text Alignment",
    "topAlign": "Top align",
    "middleAlign": "Middle align",
    "bottomAlign": "Bottom align",
    "cellAdjustment": "Cell Adjustment",
    "cellFormatMoreOptions": "More cell format options",
    "insertColumnLeft": "Insert column left",
    "insertColumnRight": "Insert column right",
    "insertRowTop": "Insert row above",
    "insertRowBottom": "Insert row below",
    "insertColumnShiftDown": "Insert cells and shift down",
    "insertColumnShiftRight": "Insert cells and shift right",
    "deleteColumn": "Delete column",
    "deleteRow": "Delete row",
    "deleteColumnShiftUp": "Delete cells and shift up",
    "deleteColumnShiftLeft": "Delete cells and shift left",
    "clearBorder": "Clear Borders",
    "all": "All Borders",
    "inside": "Inside Borders",
    "outside": "Outside Borders",
    "top": "Top Border",
    "bottom": "Bottom Border",
    "left": "Left Border",
    "right": "Right Border",
    "vertical": "Vertical Border",
    "horizontal": "Horizontal Border",
    "none": "No Borders",
    "borders": "Borders",
    "fontSize": {
      "dropdownLabel": "Font Size"
    },
    "fontFamily": {
      "dropdownLabel": "Font Family"
    },
    "blankSheet": "Blank Sheet"
  },
  "insertPageModal": {
    "title": "Insert New Page",
    "tabs": {
      "blank": "Blank",
      "upload": "Upload"
    },
    "pagePlacements": {
      "header": "Page Placement",
      "above": "Above Page",
      "below": "Below Page"
    },
    "pageLocations": {
      "header": "Page Location",
      "specify": "Specify Page",
      "specifyLocation": "Specify Page Location",
      "amount": "Number Of Pages",
      "total": "Total",
      "pages": "Pages"
    },
    "pageDimensions": {
      "header": "Page Dimensions",
      "subHeader": "Presets",
      "presets": {
        "letter": "Letter",
        "halfLetter": "Half letter",
        "juniorLegal": "Junior legal",
        "custom": "Custom"
      },
      "units": "Units"
    },
    "browse": "Browse Files",
    "fileSelected": {
      "title": "Select Pages to Add"
    },
    "button": "Add Page(s)",
    "selectPages": "Select Pages to Add",
    "page": "Page",
    "warning": {
      "title": "Exit insert new page?",
      "message": "Exiting will cancel all of the selections you have made so far. Are you sure you still want to exit?"
    }
  },
  "multiViewer": {
    "dragAndDrop": "Drag and Drop your file here to compare",
    "or": "Or",
    "browse": "Browse Files",
    "startSync": "Start Sync",
    "stopSync": "Stop Sync",
    "closeDocument": "Close Document",
    "save": "Save Document",
    "comparePanel": {
      "Find": "Find in document",
      "changesList": "Change List",
      "change": "Change",
      "old": "Old",
      "new": "New",
      "page": "Page",
      "textContent": "Text Content",
      "delete": "delete",
      "insert": "insert",
      "edit": "edit"
    }
  },
  "saveModal": {
    "close": "Close",
    "saveAs": "Save As",
    "general": "General",
    "fileName": "File Name",
    "fileType": "File Type",
    "fileLocation": "File Location",
    "browse": "Browse",
    "pageRange": "Page Range",
    "all": "All",
    "currentView": "Current View",
    "currentPage": "Current Page",
    "specifyPage": "Specify Page",
    "properties": "Properties",
    "includeAnnotation": "Include Annotations",
    "includeComments": "Include Comments",
    "watermark": "Watermark",
    "addWatermark": "Add Watermark",
    "save": "Save File",
    "pageError": "Please enter a range between  1 - ",
    "fileNameCannotBeEmpty": "File Name cannot be empty"
  },
  "filePicker": {
    "dragAndDrop": "Drag & Drop your file here",
    "selectFile": "Select your file here",
    "or": "Or"
  },
  "stylePanel": {
    "headings": {
      "styles": "Styles",
      "annotation": "Annotation",
      "annotations": "Annotations",
      "tool": "Tool",
      "textStyles": "Text Styles",
      "currentColor": "Current Color",
      "customColors": "Custom Colors",
      "redactionTextLabel": "Add Text Label",
      "redactionMarkOutline": "Mark Outline",
      "redactionFill": "Redaction Color",
      "redactionTextPlaceholder": "Insert text label",
      "contentEdit": "Content Edit"
    },
    "lineStyles": {
      "startLineStyleLabel": "Start Line Style",
      "middleLineStyleLabel": "Middle Line Style",
      "endLineStyleLabel": "End Line Style"
    },
    "addColorToCustom": "Add to custom colors",
    "noToolSelected": "Select a tool to view tool properties",
    "noToolStyle": "Tool does not contain any styling properties.",
    "noSharedToolStyle": "Selected annotations do not share any styling properties.",
    "lineEnding": {
      "start": {
        "dropdownLabel": "Line Start"
      },
      "end": {
        "dropdownLabel": "Line End"
      },
      "middle": {
        "dropdownLabel": "Line Middle"
      }
    },
    "borderStyle": {
      "dropdownLabel": "Border"
    }
  },
  "signatureListPanel": {
    "header": "Signature List",
    "newSignature": "New Signature",
    "newSignatureAndInitial": "Create New Signature & Initials",
    "signatureList": {
      "signature": "Signature",
      "initials": "Initials"
    }
  },
  "rubberStampPanel": {
    "header": "Stamps",
    "standard": "Standard Stamps"
  },
  "colorPickerModal": {
    "modalTitle": "Color Picker"
  },
  "accessibility": {
    "landmarks": {
      "topHeader": "Top Header",
      "leftHeader": "Left Header",
      "rightHeader": "Right Header",
      "bottomHeader": "Bottom Header",
      "documentContent": "Document Content"
    },
    "label": "Accessibility",
    "accessibilityMode": "Accessibility Mode",
    "skipTo": "Skip to",
    "document": "Document",
    "notes": "Notes"
  },
  "formulaBar": {
    "label": "Formula Bar",
    "range": "Range",
    "formulas": "Formulas"
  },
  "formulas": {
    "SUMIF": {
      "description": "A conditional sum across a range.",
      "parameters": {
        "range": {
          "name": "range",
          "detail": "The range which is tested against `criterion`."
        },
        "criterion": {
          "name": "criterion",
          "detail": "The pattern or test to apply to `range`."
        },
        "sum_range": {
          "name": "sum_range",
          "detail": "The range to be summed, if different from `range`."
        }
      }
    },
    "TAN": {
      "description": "Tangent of an angle provided in radians.",
      "parameters": {
        "angle": {
          "name": "angle",
          "detail": "The angle to find the tangent of, in radians."
        }
      }
    },
    "TANH": {
      "description": "Hyperbolic tangent of any real number.",
      "parameters": {
        "value": {
          "name": "value",
          "detail": "Any real value to calculate the hyperbolic tangent of."
        }
      }
    },
    "CEILING": {
      "description": "Rounds number up to nearest multiple of a factor.",
      "parameters": {
        "value": {
          "name": "value",
          "detail": "The value to round up to the nearest integer multiple of `factor`."
        },
        "factor": {
          "name": "factor",
          "detail": "The number to whose multiples `value` will be rounded."
        }
      }
    },
    "ATAN": {
      "description": "Inverse tangent of a value, in radians.",
      "parameters": {
        "value": {
          "name": "value",
          "detail": "The value for which to calculate the inverse tangent."
        }
      }
    },
    "ASINH": {
      "description": "Inverse hyperbolic sine of a number.",
      "parameters": {
        "value": {
          "name": "value",
          "detail": "The value for which to calculate the inverse hyperbolic sine."
        }
      }
    },
    "ABS": {
      "description": "Absolute value of a number.",
      "parameters": {
        "value": {
          "name": "value",
          "detail": "The number of which to return the absolute value."
        }
      }
    },
    "ACOS": {
      "description": "Inverse cosine of a value, in radians.",
      "parameters": {
        "value": {
          "name": "value",
          "detail": "The value for which to calculate the inverse cosine. Must be between `-1` and `1`, inclusive."
        }
      }
    },
    "ACOSH": {
      "description": "Inverse hyperbolic cosine of a number.",
      "parameters": {
        "value": {
          "name": "value",
          "detail": "The value for which to calculate the inverse hyperbolic cosine. Must be greater than or equal to `1`."
        }
      }
    },
    "MULTINOMIAL": {
      "description": "Multinomial distribution function.",
      "parameters": {
        "value1": {
          "name": "value1",
          "detail": "The first value or range to consider."
        },
        "value2": {
          "name": "value2",
          "detail": "Additional values or ranges to consider."
        }
      }
    },
    "ATANH": {
      "description": "Inverse hyperbolic tangent of a number.",
      "parameters": {
        "value": {
          "name": "value",
          "detail": "The value for which to calculate the inverse hyperbolic tangent. Must be between -1 and 1, exclusive."
        }
      }
    },
    "ATAN2": {
      "description": "Arctangent of a value.",
      "parameters": {
        "x": {
          "name": "x",
          "detail": "The x coordinate of the endpoint of the line segment for which to calculate the angle from the x-axis."
        },
        "y": {
          "name": "y",
          "detail": "The y coordinate of the endpoint of the line segment for which to calculate the angle from the x-axis."
        }
      }
    },
    "COUNTBLANK": {
      "description": "Number of empty values.",
      "parameters": {
        "value1": {
          "name": "value1",
          "detail": "The first value or range in which to count the number of blanks."
        }
      }
    },
    "COSH": {
      "description": "Hyperbolic cosine of any real number.",
      "parameters": {
        "value": {
          "name": "value",
          "detail": "Any real value to calculate the hyperbolic cosine of."
        }
      }
    },
    "INT": {
      "description": "Rounds number down to nearest integer.",
      "parameters": {
        "value": {
          "name": "value",
          "detail": "The value to round down to the nearest integer."
        }
      }
    },
    "ISEVEN": {
      "description": "Whether the provided value is even.",
      "parameters": {
        "value": {
          "name": "value",
          "detail": "The value to be verified as even."
        }
      }
    },
    "ISODD": {
      "description": "Whether the provided value is odd.",
      "parameters": {
        "value": {
          "name": "value",
          "detail": "The value to be verified as odd."
        }
      }
    },
    "LCM": {
      "description": "Least common multiple of one or more integers.",
      "parameters": {
        "value1": {
          "name": "value1",
          "detail": "The first value or range whose factors to consider in a calculation to find the least common multiple."
        },
        "value2": {
          "name": "value2",
          "detail": "Additional values or ranges whose factors to consider to find the least common multiple."
        }
      }
    },
    "LN": {
      "description": "The logarithm of a number, base e (euler's number).",
      "parameters": {
        "value": {
          "name": "value",
          "detail": "The value for which to calculate the logarithm, base e."
        }
      }
    },
    "LOG": {
      "description": "The logarithm of a number with respect to a base.",
      "parameters": {
        "value": {
          "name": "value",
          "detail": "The value for which to calculate the logarithm."
        },
        "base": {
          "name": "base",
          "detail": "The base to use for calculation of the logarithm."
        }
      }
    },
    "LOG10": {
      "description": "The logarithm of a number, base 10.",
      "parameters": {
        "value": {
          "name": "value",
          "detail": "The value for which to calculate the logarithm, base 10."
        }
      }
    },
    "MOD": {
      "description": "Modulo (remainder) operator.",
      "parameters": {
        "dividend": {
          "name": "dividend",
          "detail": "The number to be divided to find the remainder."
        },
        "divisor": {
          "name": "divisor",
          "detail": "The number to divide by."
        }
      }
    },
    "MROUND": {
      "description": "Rounds a number to the nearest integer multiple.",
      "parameters": {
        "value": {
          "name": "value",
          "detail": "The number to round to the nearest integer multiple of another."
        },
        "factor": {
          "name": "factor",
          "detail": "The number to whose multiples `value` will be rounded."
        }
      }
    },
    "ODD": {
      "description": "Rounds a number up to the nearest odd integer.",
      "parameters": {
        "value": {
          "name": "value",
          "detail": "The value to round to the next greatest odd number."
        }
      }
    },
    "SUMSQ": {
      "description": "Sum of squares.",
      "parameters": {
        "value1": {
          "name": "value1",
          "detail": "The first number or range whose squares to add together."
        },
        "value2": {
          "name": "value2",
          "detail": "Additional numbers or ranges whose squares to add to the square(s) of `value1`."
        }
      }
    },
    "COMBIN": {
      "description": "Number of combinations from a set of objects.",
      "parameters": {
        "n": {
          "name": "n",
          "detail": "The size of the pool of objects to choose from."
        },
        "k": {
          "name": "k",
          "detail": "The number of objects to choose."
        }
      }
    },
    "SUM": {
      "description": "Sum of a series of numbers and/or cells.",
      "parameters": {
        "value1": {
          "name": "value1",
          "detail": "The first number or range to add together."
        },
        "value2": {
          "name": "value2",
          "detail": "Additional numbers or ranges to add to `value1`."
        }
      }
    },
    "SUBTOTAL": {
      "description": "Subtotal for a range using a specific function.",
      "parameters": {
        "function_code": {
          "name": "function_code",
          "detail": "The function to use in subtotal aggregation."
        },
        "range1": {
          "name": "range1",
          "detail": "The first range over which to calculate a subtotal."
        },
        "range2": {
          "name": "range2",
          "detail": "Additional ranges over which to calculate subtotals."
        }
      }
    },
    "ASIN": {
      "description": "Inverse sine of a value, in radians.",
      "parameters": {
        "value": {
          "name": "value",
          "detail": "The value for which to calculate the inverse sine. Must be between `-1` and `1`, inclusive."
        }
      }
    },
    "COUNTIF": {
      "description": "A conditional count across a range.",
      "parameters": {
        "range": {
          "name": "range",
          "detail": "The range that is tested against `criterion`."
        },
        "criterion": {
          "name": "criterion",
          "detail": "The pattern or test to apply to `range`."
        }
      }
    },
    "RADIANS": {
      "description": "Converts an angle value in degrees to radians.",
      "parameters": {
        "angle": {
          "name": "angle",
          "detail": "The angle to convert from degrees to radians."
        }
      }
    },
    "RAND": {
      "description": "A random number between 0 inclusive and 1 exclusive."
    },
    "COUNTUNIQUE": {
      "description": "Counts number of unique values in a range.",
      "parameters": {
        "value1": {
          "name": "value1",
          "detail": "The first value or range to consider for uniqueness."
        },
        "value2": {
          "name": "value2",
          "detail": "Additional values or ranges to consider for uniqueness."
        }
      }
    },
    "DEGREES": {
      "description": "Converts an angle value in radians to degrees.",
      "parameters": {
        "angle": {
          "name": "angle",
          "detail": "The angle to convert from radians to degrees."
        }
      }
    },
    "ERFC": {
      "description": "Complementary gauss error function of a value.",
      "parameters": {
        "z": {
          "name": "z",
          "detail": "The number for which to calculate the complementary Gauss error function."
        }
      }
    },
    "EVEN": {
      "description": "Rounds a number up to the nearest even integer.",
      "parameters": {
        "value": {
          "name": "value",
          "detail": "The value to round to the next greatest even number."
        }
      }
    },
    "EXP": {
      "description": "Euler's number, e (~2.718) raised to a power.",
      "parameters": {
        "exponent": {
          "name": "exponent",
          "detail": "The exponent to raise e to."
        }
      }
    },
    "FACT": {
      "description": "Factorial of a number.",
      "parameters": {
        "value": {
          "name": "value",
          "detail": "The number or reference to a number whose factorial will be calculated and returned."
        }
      }
    },
    "FACTDOUBLE": {
      "description": "\"double factorial\" of a number.",
      "parameters": {
        "value": {
          "name": "value",
          "detail": "The number or reference to a number whose double factorial will be calculated and returned."
        }
      }
    },
    "PI": {
      "description": "The number pi."
    },
    "GCD": {
      "description": "Greatest common divisor of one or more integers.",
      "parameters": {
        "value1": {
          "name": "value1",
          "detail": "The first value or range whose factors to consider in a calculation to find the greatest common divisor."
        },
        "value2": {
          "name": "value2",
          "detail": "Additional values or ranges whose factors to consider to find the greatest common divisor."
        }
      }
    },
    "RANDBETWEEN": {
      "description": "Random integer between two values, inclusive.",
      "parameters": {
        "low": {
          "name": "low",
          "detail": "The low end of the random range."
        },
        "high": {
          "name": "high",
          "detail": "The high end of the random range."
        }
      }
    },
    "ROUND": {
      "description": "Rounds a number according to standard rules.",
      "parameters": {
        "value": {
          "name": "value",
          "detail": "The value to round to `places` number of places."
        },
        "places": {
          "name": "places",
          "detail": "The number of decimal places to which to round."
        }
      }
    },
    "ROUNDDOWN": {
      "description": "Rounds down a number.",
      "parameters": {
        "value": {
          "name": "value",
          "detail": "The value to round to `places` number of places, always rounding down."
        },
        "places": {
          "name": "places",
          "detail": "The number of decimal places to which to round."
        }
      }
    },
    "ROUNDUP": {
      "description": "Rounds up a number.",
      "parameters": {
        "value": {
          "name": "value",
          "detail": "The value to round to `places` number of places, always rounding up."
        },
        "places": {
          "name": "places",
          "detail": "The number of decimal places to which to round."
        }
      }
    },
    "SERIESSUM": {
      "description": "Sum of a power series.",
      "parameters": {
        "x": {
          "name": "x",
          "detail": "The input to the power series. Varies depending on the type of approximation, may be angle, exponent, or some other value."
        },
        "n": {
          "name": "n",
          "detail": "The initial power to which to raise `x` in the power series."
        },
        "m": {
          "name": "m",
          "detail": "The additive increment by which to increase `x`."
        },
        "a": {
          "name": "a",
          "detail": "The array or range containing the coefficients of the power series."
        }
      }
    },
    "SIGN": {
      "description": "Sign of a provided number (+/-/0).",
      "parameters": {
        "value": {
          "name": "value",
          "detail": "The value whose sign will be evaluated."
        }
      }
    },
    "SIN": {
      "description": "Sine of an angle provided in radians.",
      "parameters": {
        "angle": {
          "name": "angle",
          "detail": "The angle to find the sine of, in radians."
        }
      }
    },
    "SINH": {
      "description": "Hyperbolic sine of any real number.",
      "parameters": {
        "value": {
          "name": "value",
          "detail": "Any real value to calculate the hyperbolic sine of."
        }
      }
    },
    "SQRT": {
      "description": "Positive square root of a positive number.",
      "parameters": {
        "value": {
          "name": "value",
          "detail": "The number for which to calculate the positive square root."
        }
      }
    },
    "SQRTPI": {
      "description": "Square root of the product of pi and number.",
      "parameters": {
        "value": {
          "name": "value",
          "detail": "The number which will be multiplied by Pi and have the product's square root returned"
        }
      }
    },
    "GAMMALN": {
      "description": "Logarithm of gamma function.",
      "parameters": {
        "value": {
          "name": "value",
          "detail": "The input to the Gamma function. The natural logarithm of Gamma(`value`) will be returned."
        }
      }
    },
    "COS": {
      "description": "Cosine of an angle provided in radians.",
      "parameters": {
        "angle": {
          "name": "angle",
          "detail": "The angle to find the cosine of, in radians."
        }
      }
    },
    "TRUNC": {
      "description": "Truncates a number.",
      "parameters": {
        "value": {
          "name": "value",
          "detail": "The value to be truncated."
        },
        "places": {
          "name": "places",
          "detail": "The number of significant digits to the right of the decimal point to retain."
        }
      }
    },
    "QUOTIENT": {
      "description": "One number divided by another.",
      "parameters": {
        "dividend": {
          "name": "dividend",
          "detail": "The number to be divided."
        },
        "divisor": {
          "name": "divisor",
          "detail": "The number to divide by."
        }
      }
    },
    "POWER": {
      "description": "A number raised to a power.",
      "parameters": {
        "base": {
          "name": "base",
          "detail": "The number to raise to the `exponent` power."
        },
        "exponent": {
          "name": "exponent",
          "detail": "The exponent to raise `base` to."
        }
      }
    },
    "SUMIFS": {
      "description": "Sums a range depending on multiple criteria.",
      "parameters": {
        "sum_range": {
          "name": "sum_range",
          "detail": "The range to sum."
        },
        "criteria_range1": {
          "name": "criteria_range1",
          "detail": "The range to check against criterion1."
        },
        "criterion1": {
          "name": "criterion1",
          "detail": "The pattern or test to apply to criteria_range1."
        },
        "criteria_range2": {
          "name": "criteria_range2",
          "detail": "Additional ranges to check."
        }
      }
    },
    "COUNTIFS": {
      "description": "Count values depending on multiple criteria.",
      "parameters": {
        "criteria_range1": {
          "name": "criteria_range1",
          "detail": "The range to check against `criterion1`."
        },
        "criterion1": {
          "name": "criterion1",
          "detail": "The pattern or test to apply to `criteria_range1`."
        },
        "criteria_range2": {
          "name": "criteria_range2",
          "detail": "Additional ranges to check."
        }
      }
    },
    "PRODUCT": {
      "description": "Result of multiplying a series of numbers together.",
      "parameters": {
        "factor1": {
          "name": "factor1",
          "detail": "The first number or range to calculate for the product."
        },
        "factor2": {
          "name": "factor2",
          "detail": "More numbers or ranges to calculate for the product."
        }
      }
    },
    "HARMEAN": {
      "description": "The harmonic mean of a dataset.",
      "parameters": {
        "value1": {
          "name": "value1",
          "detail": "The first value or range of the population."
        },
        "value2": {
          "name": "value2",
          "detail": "Additional values or ranges to include in the population."
        }
      }
    },
    "HYPGEOMDIST": {
      "description": "Hypergeometric distribution probability.",
      "parameters": {
        "num_successes": {
          "name": "num_successes",
          "detail": "The desired number of successes."
        },
        "num_draws": {
          "name": "num_draws",
          "detail": "The number of permitted draws."
        },
        "successes_in_pop": {
          "name": "successes_in_pop",
          "detail": "The total number of successes in the population."
        },
        "pop_size": {
          "name": "pop_size",
          "detail": "The total size of the population"
        },
        "cumulative": {
          "name": "cumulative",
          "detail": "Determine the logical value of the function form. \n\nIf cumulative is TRUE(), HYPGEOM.DIST returns the cumulative distribution function;\n\nif FALSE(), it returns the probability density function."
        }
      }
    },
    "INTERCEPT": {
      "description": "Y-intercept of line derived via linear regression.",
      "parameters": {
        "data_y": {
          "name": "data_y",
          "detail": "The range representing the array or matrix of dependent data."
        },
        "data_x": {
          "name": "data_x",
          "detail": "The range representing the array or matrix of independent data."
        }
      }
    },
    "KURT": {
      "description": "Kurtosis of a dataset.",
      "parameters": {
        "value1": {
          "name": "value1",
          "detail": "The first value or range of the dataset."
        },
        "value2": {
          "name": "value2",
          "detail": "Additional values or ranges to include in the dataset."
        }
      }
    },
    "LARGE": {
      "description": "Nth largest element from a data set.",
      "parameters": {
        "data": {
          "name": "data",
          "detail": "Array or range containing the dataset to consider."
        },
        "n": {
          "name": "n",
          "detail": "The rank from largest to smallest of the element to return."
        }
      }
    },
    "STDEVA": {
      "description": "Standard deviation of sample (text as 0).",
      "parameters": {
        "value1": {
          "name": "value1",
          "detail": "The first value or range of the sample."
        },
        "value2": {
          "name": "value2",
          "detail": "Additional values or ranges to include in the sample."
        }
      }
    },
    "STDEVP": {
      "description": "Standard deviation of an entire population.",
      "parameters": {
        "value1": {
          "name": "value1",
          "detail": "The first value or range of the population."
        },
        "value2": {
          "name": "value2",
          "detail": "Additional values or ranges to include in the population."
        }
      }
    },
    "GEOMEAN": {
      "description": "The geometric mean of a dataset.",
      "parameters": {
        "value1": {
          "name": "value1",
          "detail": "The first value or range of the population."
        },
        "value2": {
          "name": "value2",
          "detail": "Additional values or ranges to include in the population."
        }
      }
    },
    "PERCENTRANK_INC": {
      "description": "Percentage rank (percentile) from 0 to 1 inclusive.",
      "parameters": {
        "data": {
          "name": "data",
          "detail": "The array or range containing the dataset to consider."
        },
        "value": {
          "name": "value",
          "detail": "The value whose percentage rank will be determined."
        },
        "significant_digits": {
          "name": "significant_digits",
          "detail": "The number of significant figures to use in the calculation. Default is 3."
        }
      }
    },
    "FORECAST": {
      "description": "Expected y-value based of linear regression.",
      "parameters": {
        "x": {
          "name": "x",
          "detail": "The value on the x-axis to forecast."
        },
        "data_y": {
          "name": "data_y",
          "detail": "The range representing the array or matrix of dependent data."
        },
        "data_x": {
          "name": "data_x",
          "detail": "The range representing the array or matrix of independent data."
        }
      }
    },
    "FISHERINV": {
      "description": "Inverse fisher transformation of a specified value.",
      "parameters": {
        "value": {
          "name": "value",
          "detail": "The value for which to calculate the inverse Fisher transformation."
        }
      }
    },
    "FISHER": {
      "description": "Fisher transformation of a specified value.",
      "parameters": {
        "value": {
          "name": "value",
          "detail": "The value for which to calculate the Fisher transformation."
        }
      }
    },
    "COUNT": {
      "description": "The number of numeric values in dataset.",
      "parameters": {
        "value1": {
          "name": "value1",
          "detail": "The first value or range to consider when counting."
        },
        "value2": {
          "name": "value2",
          "detail": "Additional values or ranges to consider when counting."
        }
      }
    },
    "COUNTA": {
      "description": "The number of values in a dataset.",
      "parameters": {
        "value1": {
          "name": "value1",
          "detail": "The first value or range to consider when counting."
        },
        "value2": {
          "name": "value2",
          "detail": "Additional values or ranges to consider when counting."
        }
      }
    },
    "AVERAGE": {
      "description": "Numerical average value in a dataset, ignoring text.",
      "parameters": {
        "value1": {
          "name": "value1",
          "detail": "The first value or range to consider when calculating the average value."
        },
        "value2": {
          "name": "value2",
          "detail": "Additional values or ranges to consider when calculating the average value."
        }
      }
    },
    "BINOM_DIST": {
      "description": "Binomial distribution probability.",
      "parameters": {
        "num_successes": {
          "name": "num_successes",
          "detail": "The number of successes for which to calculate the probability in `num_trials` trials."
        },
        "num_trials": {
          "name": "num_trials",
          "detail": "The number of independent trials."
        },
        "prob_success": {
          "name": "prob_success",
          "detail": "The probability of success in any given trial."
        },
        "cumulative": {
          "name": "cumulative",
          "detail": "Whether to use the binomial cumulative distribution."
        }
      }
    },
    "DEVSQ": {
      "description": "The sum of squares of deviations based on a sample.",
      "parameters": {
        "value1": {
          "name": "value1",
          "detail": "The first value or range of the sample."
        },
        "value2": {
          "name": "value2",
          "detail": "Additional values or ranges to include in the sample."
        }
      }
    },
    "AVERAGEIF": {
      "description": "Average of values depending on criteria.",
      "parameters": {
        "criteria_range": {
          "name": "criteria_range",
          "detail": "The range to check against `criterion`."
        },
        "criterion": {
          "name": "criterion",
          "detail": "The pattern or test to apply to `criteria_range`."
        },
        "average_range": {
          "name": "average_range",
          "detail": "The range to average. If not included, `criteria_range` is used for the average instead."
        }
      }
    },
    "AVERAGEIFS": {
      "description": "Average of values depending on multiple criteria.",
      "parameters": {
        "average_range": {
          "name": "average_range",
          "detail": "The range to average."
        },
        "criteria_range1": {
          "name": "criteria_range1",
          "detail": "The range to check against `criterion1`."
        },
        "criterion1": {
          "name": "criterion1",
          "detail": "The pattern or test to apply to `criteria_range1`."
        },
        "criteria_range2": {
          "name": "criteria_range2",
          "detail": "Additional ranges to check."
        }
      }
    },
    "PERMUT": {
      "description": "Number of permutations from a number of objects.",
      "parameters": {
        "n": {
          "name": "n",
          "detail": "The size of the pool of objects to choose from."
        },
        "k": {
          "name": "k",
          "detail": "The number of objects to choose."
        }
      }
    },
    "TRIMMEAN": {
      "description": "Mean of a dataset excluding high/low ends.",
      "parameters": {
        "data": {
          "name": "data",
          "detail": "Array or range containing the dataset to consider."
        },
        "exclude_proportion": {
          "name": "exclude_proportion",
          "detail": "The proportion of the dataset to exclude, from the extremities of the set."
        }
      }
    },
    "PEARSON": {
      "description": "Pearson Product-Moment Correlation Coefficient.",
      "parameters": {
        "data_y": {
          "name": "data_y",
          "detail": "The range representing the array or matrix of dependent data."
        },
        "data_x": {
          "name": "data_x",
          "detail": "The range representing the array or matrix of independent data."
        }
      }
    },
    "MINA": {
      "description": "Minimum numeric value in a dataset.",
      "parameters": {
        "value1": {
          "name": "value1",
          "detail": "The first value or range to consider when calculating the minimum value."
        },
        "value2": {
          "name": "value2",
          "detail": "Additional values or ranges to consider when calculating the minimum value."
        }
      }
    },
    "MIN": {
      "description": "Minimum value in a numeric dataset.",
      "parameters": {
        "value1": {
          "name": "value1",
          "detail": "The first value or range to consider when calculating the minimum value."
        },
        "value2": {
          "name": "value2",
          "detail": "Additional values or ranges to consider when calculating the minimum value."
        }
      }
    },
    "MEDIAN": {
      "description": "Median value in a numeric dataset.",
      "parameters": {
        "value1": {
          "name": "value1",
          "detail": "The first value or range to consider when calculating the median value."
        },
        "value2": {
          "name": "value2",
          "detail": "Additional values or ranges to consider when calculating the median value."
        }
      }
    },
    "MAXA": {
      "description": "Maximum numeric value in a dataset.",
      "parameters": {
        "value1": {
          "name": "value1",
          "detail": "The first value or range to consider when calculating the maximum value."
        },
        "value2": {
          "name": "value2",
          "detail": "Additional values or ranges to consider when calculating the maximum value."
        }
      }
    },
    "MAX": {
      "description": "Maximum value in a numeric dataset.",
      "parameters": {
        "value1": {
          "name": "value1",
          "detail": "The first value or range to consider when calculating the maximum value."
        },
        "value2": {
          "name": "value2",
          "detail": "Additional values or ranges to consider when calculating the maximum value."
        }
      }
    },
    "PROB": {
      "description": "Probability values lie in a range.",
      "parameters": {
        "data": {
          "name": "data",
          "detail": "Array or range containing the dataset to consider."
        },
        "probabilities": {
          "name": "probabilities",
          "detail": "Array or range containing probabilities corresponding to `data`."
        },
        "low_limit": {
          "name": "low_limit",
          "detail": "The lower bound on the value range for which to calculate the probability."
        },
        "high_limit": {
          "name": "high_limit",
          "detail": "The upper bound on the value range for which to calculate the probability."
        }
      }
    },
    "RSQ": {
      "description": "Square of the correlation coefficient.",
      "parameters": {
        "data_y": {
          "name": "data_y",
          "detail": "The range representing the array or matrix of dependent data."
        },
        "data_x": {
          "name": "data_x",
          "detail": "The range representing the array or matrix of independent data."
        }
      }
    },
    "VARA": {
      "description": "Variance of sample (text as 0).",
      "parameters": {
        "value1": {
          "name": "value1",
          "detail": "The first value or range of the sample."
        },
        "value2": {
          "name": "value2",
          "detail": "Additional values or ranges to include in the sample."
        }
      }
    },
    "VARPA": {
      "description": "Variance of entire population (text as 0).",
      "parameters": {
        "value1": {
          "name": "value1",
          "detail": "The first value or range of the population."
        },
        "value2": {
          "name": "value2",
          "detail": "Additional values or ranges to include in the population."
        }
      }
    },
    "STEYX": {
      "description": "Standard error of predicted y-values in regression.",
      "parameters": {
        "data_y": {
          "name": "data_y",
          "detail": "The range representing the array or matrix of dependent data."
        },
        "data_x": {
          "name": "data_x",
          "detail": "The range representing the array or matrix of independent data."
        }
      }
    },
    "STANDARDIZE": {
      "description": "Normalized equivalent of a random variable.",
      "parameters": {
        "value": {
          "name": "value",
          "detail": "The value of the random variable to normalize."
        },
        "mean": {
          "name": "mean",
          "detail": "The mean of the distribution."
        },
        "standard_deviation": {
          "name": "standard_deviation",
          "detail": "The standard deviation of the distribution."
        }
      }
    },
    "SMALL": {
      "description": "Nth smallest element in a data set.",
      "parameters": {
        "data": {
          "name": "data",
          "detail": "The array or range containing the dataset to consider."
        },
        "n": {
          "name": "n",
          "detail": "The rank from smallest to largest of the element to return."
        }
      }
    },
    "SLOPE": {
      "description": "Slope of line from linear regression of data.",
      "parameters": {
        "data_y": {
          "name": "data_y",
          "detail": "The range representing the array or matrix of dependent data."
        },
        "data_x": {
          "name": "data_x",
          "detail": "The range representing the array or matrix of independent data."
        }
      }
    },
    "SKEW": {
      "description": "Skewness of a dataset.",
      "parameters": {
        "value1": {
          "name": "value1",
          "detail": "The first value or range of the dataset."
        },
        "value2": {
          "name": "value2",
          "detail": "Additional values or ranges to include in the dataset."
        }
      }
    },
    "VLOOKUP": {
      "description": "Vertical lookup.",
      "parameters": {
        "search_key": {
          "name": "search_key",
          "detail": "The value to search for. For example, `42`, `\"Cats\"`, or `I24`."
        },
        "range": {
          "name": "range",
          "detail": "The range to consider for the search. The first column in the range is searched for the key specified in `search_key`."
        },
        "index": {
          "name": "index",
          "detail": "The column index of the value to be returned, where the first column in `range` is numbered 1."
        },
        "is_sorted": {
          "name": "is_sorted",
          "detail": "Indicates whether the column to be searched (the first column of the specified range) is sorted, in which case the closest match for `search_key` will be returned."
        }
      }
    },
    "HLOOKUP": {
      "description": "Horizontal lookup",
      "parameters": {
        "search_key": {
          "name": "search_key",
          "detail": "The value to search for. For example, `42`, `\"Cats\"`, or `I24`."
        },
        "range": {
          "name": "range",
          "detail": "The range to consider for the search. The first row in the range is searched for the key specified in `search_key`."
        },
        "index": {
          "name": "index",
          "detail": "The row index of the value to be returned, where the first row in `range` is numbered 1."
        },
        "is_sorted": {
          "name": "is_sorted",
          "detail": "Indicates whether the row to be searched (the first row of the specified range) is sorted."
        }
      }
    },
    "LOOKUP": {
      "description": "Look up a value.",
      "parameters": {
        "search_key": {
          "name": "search_key",
          "detail": "The value to search for in the row or column. For example, `42`, `\"Cats\"`, or `I24`."
        },
        "search_range|search_result_array": {
          "name": "search_range|search_result_array",
          "detail": "One method of using this function is to provide a single sorted row or column `search_range` to look through for the `search_key` with a second argument `result_range`. The other way is to combine these two arguments into one `search_result_array` where the first row or column is searched and a value is returned from the last row or column in the array. If `search_key` is not found, a non-exact match may be returned."
        },
        "result_range": {
          "name": "result_range",
          "detail": "The range from which to return a result. The value returned corresponds to the location where `search_key` is found in `search_range`. This range must be only a single row or column and should not be used if using the `search_result_array` method."
        }
      }
    },
    "ADDRESS": {
      "description": "Cell reference as a string.",
      "parameters": {
        "row": {
          "name": "row",
          "detail": "The row number of the cell reference"
        },
        "column": {
          "name": "column",
          "detail": "The column number (not name) of the cell reference. `A` is column number `1`."
        },
        "absolute_relative_mode": {
          "name": "absolute_relative_mode",
          "detail": "An indicator of whether the reference is row/column absolute. `1` is row and column absolute (e.g. $A$1), `2` is row absolute and column relative (e.g. A$1), `3` is row relative and column absolute (e.g. $A1), and `4` is row and column relative (e.g. A1)."
        },
        "use_a1_notation": {
          "name": "use_a1_notation",
          "detail": "A boolean indicating whether to use `A1` style notation (TRUE) or `R1C1` style notation (FALSE)."
        },
        "sheet": {
          "name": "sheet",
          "detail": "Text indicating the name of the sheet into which the address points."
        }
      }
    },
    "INDIRECT": {
      "description": "A cell reference specified by a string.",
      "parameters": {
        "cell_reference_as_string": {
          "name": "cell_reference_as_string",
          "detail": "A cell reference, written as a string with surrounding quotation marks."
        },
        "is_A1_notation": {
          "name": "is_A1_notation",
          "detail": "Indicates if the cell reference is in A1 notation (TRUE) or R1C1 notation (FALSE)."
        }
      }
    },
    "ROW": {
      "description": "Row number of a specified cell.",
      "parameters": {
        "cell_reference": {
          "name": "cell_reference",
          "detail": "The cell whose row number will be returned."
        }
      }
    },
    "ROWS": {
      "description": "Number of rows in a specified array or range.",
      "parameters": {
        "range": {
          "name": "range",
          "detail": "The range whose row count will be returned."
        }
      }
    },
    "COLUMN": {
      "description": "Column number of a specified cell.",
      "parameters": {
        "cell_reference": {
          "name": "cell_reference",
          "detail": "The cell whose column number will be returned. Column `A` corresponds to `1`."
        }
      }
    },
    "COLUMNS": {
      "description": "Number of columns in a specified array or range.",
      "parameters": {
        "range": {
          "name": "range",
          "detail": "The range whose column count will be returned."
        }
      }
    },
    "OFFSET": {
      "description": "A range reference offset relative to a cell.",
      "parameters": {
        "cell_reference": {
          "name": "cell_reference",
          "detail": "The starting point from which to count the offset rows and columns."
        },
        "offset_rows": {
          "name": "offset_rows",
          "detail": "The number of rows to offset by."
        },
        "offset_columns": {
          "name": "offset_columns",
          "detail": "The number of columns to offset by."
        },
        "height": {
          "name": "height",
          "detail": "The height of the range to return starting at the offset target."
        },
        "width": {
          "name": "width",
          "detail": "The width of the range to return starting at the offset target."
        }
      }
    },
    "MATCH": {
      "description": "Position of item in range that matches value.",
      "parameters": {
        "search_key": {
          "name": "search_key",
          "detail": "The value to search for. For example, `42`, `\"Cats\"`, or `I24`."
        },
        "range": {
          "name": "range",
          "detail": "The one-dimensional array to be searched."
        },
        "search_type": {
          "name": "search_type",
          "detail": "The search method. `1` (default) finds the largest value less than or equal to `search_key` when `range` is sorted in ascending order. `0` finds the exact value when `range` is unsorted. `-1` finds the smallest value greater than or equal to `search_key` when `range` is sorted in descending order."
        }
      }
    },
    "INDEX": {
      "description": "Content of cell specified by row and column offset.",
      "parameters": {
        "reference": {
          "name": "reference",
          "detail": "The array of cells to be offset into."
        },
        "row": {
          "name": "row",
          "detail": "The number of offset rows."
        },
        "column": {
          "name": "column",
          "detail": "The number of offset columns."
        }
      }
    },
    "GETPIVOTDATA": {
      "description": "Extracts an aggregated value from a pivot table that corresponds to the specified row and column headings.",
      "parameters": {
        "value_name": {
          "name": "value_name",
          "detail": "The name of the value in the pivot table for which you want to get data."
        },
        "any_pivot_table_cell": {
          "name": "any_pivot_table_cell",
          "detail": "Any reference to a cell in the desired pivot table (top corner recommended)."
        },
        "original_column": {
          "name": "original_column",
          "detail": "The name of the column in the original data set (not the pivot table)."
        },
        "pivot_item": {
          "name": "pivot_item",
          "detail": "The name of the row or column shown in the pivot table corresponding to *original_column* that you want to retrieve."
        }
      }
    },
    "CHOOSE": {
      "description": "An element from a list of choices based on index.",
      "parameters": {
        "index": {
          "name": "index",
          "detail": "Which choice (of the up to 30 provided) to return."
        },
        "choice1": {
          "name": "choice1",
          "detail": "A potential value to return. Required. May be a reference to a cell or an individual value."
        },
        "choice2": {
          "name": "choice2",
          "detail": "Additional values among which to choose."
        }
      }
    },
    "TIME": {
      "description": "Converts hour/minute/second into a time.",
      "parameters": {
        "hour": {
          "name": "hour",
          "detail": "The hour component of the time."
        },
        "minute": {
          "name": "minute",
          "detail": "The minute component of the time."
        },
        "second": {
          "name": "second",
          "detail": "The second component of the time."
        }
      }
    },
    "TIMEVALUE": {
      "description": "Converts a time string into its serial number representation.",
      "parameters": {
        "time_string": {
          "name": "time_string",
          "detail": "The string that holds the time representation."
        }
      }
    },
    "EOMONTH": {
      "description": "Last day of a month before or after a date.",
      "parameters": {
        "start_date": {
          "name": "start_date",
          "detail": "The date from which to calculate the result."
        },
        "months": {
          "name": "months",
          "detail": "The number of months before (negative) or after (positive) 'start_date' to consider."
        }
      }
    },
    "EDATE": {
      "description": "Date a number of months before/after another date.",
      "parameters": {
        "start_date": {
          "name": "start_date",
          "detail": "The date from which to calculate the result."
        },
        "months": {
          "name": "months",
          "detail": "The number of months before (negative) or after (positive) 'start_date' to calculate."
        }
      }
    },
    "SECOND": {
      "description": "Second component of a specific time.",
      "parameters": {
        "time": {
          "name": "time",
          "detail": "The time from which to calculate the second component"
        }
      }
    },
    "MINUTE": {
      "description": "Minute component of a specific time.",
      "parameters": {
        "time": {
          "name": "time",
          "detail": "The time from which to calculate the minute component."
        }
      }
    },
    "HOUR": {
      "description": "Hour component of a specific time.",
      "parameters": {
        "time": {
          "name": "time",
          "detail": "The time from which to calculate the hour component."
        }
      }
    },
    "NOW": {
      "description": "Current date and time as a date value."
    },
    "NETWORKDAYS": {
      "description": "Net working days between two provided days.",
      "parameters": {
        "start_date": {
          "name": "start_date",
          "detail": "The start date of the period from which to calculate the number of net working days."
        },
        "end_date": {
          "name": "end_date",
          "detail": "The end date of the period from which to calculate the number of net working days."
        },
        "holidays": {
          "name": "holidays",
          "detail": "A range or array constant containing the date serial numbers to consider holidays."
        }
      }
    },
    "ISOWEEKNUM": {
      "description": "ISO week number of the year.",
      "parameters": {
        "date": {
          "name": "date",
          "detail": "The date for which to determine the ISO week number. Must be a reference to a cell containing a date, a function returning a date type, or a number."
        }
      }
    },
    "WEEKNUM": {
      "description": "Week number of the year.",
      "parameters": {
        "date": {
          "name": "date",
          "detail": "The date for which to determine the week number. Must be a reference to a cell containing a date, a function returning a date type, or a number."
        },
        "type": {
          "name": "type",
          "detail": "A number representing the day that a week starts on. Sunday = 1."
        }
      }
    },
    "WEEKDAY": {
      "description": "Day of the week of the date provided (as number).",
      "parameters": {
        "date": {
          "name": "date",
          "detail": "The date for which to determine the day of the week. Must be a reference to a cell containing a date, a function returning a date type, or a number."
        },
        "type": {
          "name": "type",
          "detail": "A number indicating which numbering system to use to represent weekdays. By default, counts starting with Sunday = 1."
        }
      }
    },
    "DAY": {
      "description": "Day of the month that a specific date falls on.",
      "parameters": {
        "date": {
          "name": "date",
          "detail": "The date from which to extract the day."
        }
      }
    },
    "DAYS": {
      "description": "Number of days between two dates.",
      "parameters": {
        "end_date": {
          "name": "end_date",
          "detail": "The end of the date range."
        },
        "start_date": {
          "name": "start_date",
          "detail": "The start of the date range."
        }
      }
    },
    "DAYS360": {
      "description": "Days between two dates on a 360-day year.",
      "parameters": {
        "start_date": {
          "name": "start_date",
          "detail": "The start date to consider in the calculation. Must be a reference to a cell containing a date, a function returning a date type, or a number."
        },
        "end_date": {
          "name": "end_date",
          "detail": "The end date to consider in the calculation. Must be a reference to a cell containing a date, a function returning a date type, or a number."
        },
        "method": {
          "name": "method",
          "detail": "An indicator of what day count method to use."
        }
      }
    },
    "DATE": {
      "description": "Converts year/month/day into a date.",
      "parameters": {
        "year": {
          "name": "year",
          "detail": "The year component of the date."
        },
        "month": {
          "name": "month",
          "detail": "The month component of the date."
        },
        "day": {
          "name": "day",
          "detail": "The day component of the date."
        }
      }
    },
    "DATEVALUE": {
      "description": "Converts a date string to a date value.",
      "parameters": {
        "date_string": {
          "name": "date_string",
          "detail": "The string representing the date."
        }
      }
    },
    "DATEDIF": {
      "description": "Date Difference.",
      "parameters": {
        "start_date": {
          "name": "start_date",
          "detail": "The start date to consider in the calculation. Must be a reference to a cell containing a date, a function returning a date type, or a number."
        },
        "end_date": {
          "name": "end_date",
          "detail": "The end date to consider in the calculation. Must be a reference to a cell containing a date, a function returning a date type, or a number."
        },
        "unit": {
          "name": "unit",
          "detail": "A string abbreviation for unit of time. For example, \"M\" for month. Accepted values are \"Y\",\"M\",\"D\",\"MD\",\"YM\",\"YD\"."
        }
      }
    },
    "WORKDAY": {
      "description": "Number of working days from start date.",
      "parameters": {
        "start_date": {
          "name": "start_date",
          "detail": "The date from which to begin counting."
        },
        "num_days": {
          "name": "num_days",
          "detail": "The number of working days to advance from `start_date`. If negative, counts backwards."
        },
        "holidays": {
          "name": "holidays",
          "detail": "A range or array constant containing the dates to consider holidays."
        }
      }
    },
    "YEAR": {
      "description": "Year specified by a given date.",
      "parameters": {
        "date": {
          "name": "date",
          "detail": "The date from which to extract the year."
        }
      }
    },
    "YEARFRAC": {
      "description": "Exact number of years between two dates.",
      "parameters": {
        "start_date": {
          "name": "start_date",
          "detail": "The start date to consider in the calculation. Must be a reference to a cell containing a date, a function returning a date type, or a number."
        },
        "end_date": {
          "name": "end_date",
          "detail": "The end date to consider in the calculation. Must be a reference to a cell containing a date, a function returning a date type, or a number."
        },
        "day_count_convention": {
          "name": "day_count_convention",
          "detail": "An indicator of what day count method to use."
        }
      }
    },
    "TODAY": {
      "description": "Current date as a date value."
    },
    "MONTH": {
      "description": "Month of the year a specific date falls in.",
      "parameters": {
        "date": {
          "name": "date",
          "detail": "The date from which to extract the month."
        }
      }
    },
    "EFFECT": {
      "description": "Annual effective interest rate.",
      "parameters": {
        "nominal_rate": {
          "name": "nominal_rate",
          "detail": "The nominal interest rate per year."
        },
        "periods_per_year": {
          "name": "periods_per_year",
          "detail": "The number of compounding periods per year."
        }
      }
    },
    "DOLLAR": {
      "description": "Formats a number as currency specific to your spreadsheet locale.",
      "parameters": {
        "number": {
          "name": "number",
          "detail": "The value to be formatted."
        },
        "number_of_places": {
          "name": "number_of_places",
          "detail": "The number of decimal places to display."
        }
      }
    },
    "DOLLARDE": {
      "description": "Converts a decimal fraction to decimal value.",
      "parameters": {
        "fractional_price": {
          "name": "fractional_price",
          "detail": "The price quotation given using fractional decimal conventions."
        },
        "unit": {
          "name": "unit",
          "detail": "The units of the fraction, e.g. `8` for 1/8ths or `32` for 1/32nds."
        }
      }
    },
    "DOLLARFR": {
      "description": "Converts a decimal value to decimal fraction.",
      "parameters": {
        "decimal_price": {
          "name": "decimal_price",
          "detail": "The price quotation given as a decimal value."
        },
        "unit": {
          "name": "unit",
          "detail": "The units of the desired fraction, e.g. `8` for 1/8ths or `32` for 1/32nds."
        }
      }
    },
    "DB": {
      "description": "Depreciation via declining balance method.",
      "parameters": {
        "cost": {
          "name": "cost",
          "detail": "The initial cost of the asset."
        },
        "salvage": {
          "name": "salvage",
          "detail": "The value of the asset at the end of depreciation."
        },
        "life": {
          "name": "life",
          "detail": "The number of periods over which the asset is depreciated."
        },
        "period": {
          "name": "period",
          "detail": "The single period within `life` for which to calculate depreciation."
        },
        "month": {
          "name": "month",
          "detail": "The number of months in the first year of depreciation."
        }
      }
    },
    "DDB": {
      "description": "Depreciation via double-declining balance method.",
      "parameters": {
        "cost": {
          "name": "cost",
          "detail": "The initial cost of the asset."
        },
        "salvage": {
          "name": "salvage",
          "detail": "The value of the asset at the end of depreciation."
        },
        "life": {
          "name": "life",
          "detail": "The number of periods over which the asset is depreciated."
        },
        "period": {
          "name": "period",
          "detail": "The single period within `life` for which to calculate depreciation."
        },
        "factor": {
          "name": "factor",
          "detail": "The factor by which depreciation decreases."
        }
      }
    },
    "RATE": {
      "description": "Interest rate of an annuity investment.",
      "parameters": {
        "number_of_periods": {
          "name": "number_of_periods",
          "detail": "The number of payments to be made."
        },
        "payment_per_period": {
          "name": "payment_per_period",
          "detail": "The amount per period to be paid."
        },
        "present_value": {
          "name": "present_value",
          "detail": "The current value of the annuity."
        },
        "future_value": {
          "name": "future_value",
          "detail": "The future value remaining after the final payment has been made."
        },
        "end_or_beginning": {
          "name": "end_or_beginning",
          "detail": "Whether payments are due at the end (`0`) or beginning (`1`) of each period."
        },
        "rate_guess": {
          "name": "rate_guess",
          "detail": "An estimate for what the interest rate will be."
        }
      }
    },
    "CUMPRINC": {
      "description": "Cumulative principal paid over a set of periods.",
      "parameters": {
        "rate": {
          "name": "rate",
          "detail": "The interest rate."
        },
        "number_of_periods": {
          "name": "number_of_periods",
          "detail": "The number of payments to be made."
        },
        "present_value": {
          "name": "present_value",
          "detail": "The current value of the annuity."
        },
        "first_period": {
          "name": "first_period",
          "detail": "The number of the payment period to begin the cumulative calculation."
        },
        "last_period": {
          "name": "last_period",
          "detail": "The number of the payment period to end the cumulative calculation."
        },
        "end_or_beginning": {
          "name": "end_or_beginning",
          "detail": "Whether payments are due at the end (`0`) or beginning (`1`) of each period."
        }
      }
    },
    "COUPNUM": {
      "description": "Number of coupons between settlement and maturity.",
      "parameters": {
        "settlement": {
          "name": "settlement",
          "detail": "The settlement date of the security, the date after issuance when the security is delivered to the buyer."
        },
        "maturity": {
          "name": "maturity",
          "detail": "The maturity or end date of the security, when it can be redeemed at face, or par value."
        },
        "frequency": {
          "name": "frequency",
          "detail": "The number of interest or coupon payments per year (1, 2, or 4)."
        },
        "day_count_convention": {
          "name": "day_count_convention",
          "detail": "An indicator of what day count method to use."
        }
      }
    },
    "SYD": {
      "description": "Depreciation via sum of years digits method.",
      "parameters": {
        "cost": {
          "name": "cost",
          "detail": "The initial cost of the asset."
        },
        "salvage": {
          "name": "salvage",
          "detail": "The value of the asset at the end of depreciation."
        },
        "life": {
          "name": "life",
          "detail": "The number of periods over which the asset is depreciated."
        },
        "period": {
          "name": "period",
          "detail": "The single period within `life` for which to calculate depreciation."
        }
      }
    },
    "TBILLEQ": {
      "description": "Equivalent rate of return for a Treasury bill.",
      "parameters": {
        "settlement": {
          "name": "settlement",
          "detail": "The settlement date of the security, the date after issuance when the security is delivered to the buyer."
        },
        "maturity": {
          "name": "maturity",
          "detail": "The maturity or end date of the security, when it can be redeemed at face, or par value."
        },
        "discount": {
          "name": "discount",
          "detail": "The discount rate of the bill at time of purchase."
        }
      }
    },
    "TBILLYIELD": {
      "description": "The yield of a us treasury bill based on price.",
      "parameters": {
        "settlement": {
          "name": "settlement",
          "detail": "The settlement date of the security, the date after issuance when the security is delivered to the buyer."
        },
        "maturity": {
          "name": "maturity",
          "detail": "The maturity or end date of the security, when it can be redeemed at face, or par value."
        },
        "price": {
          "name": "price",
          "detail": "The price at which the security is bought per 100 face value."
        }
      }
    },
    "TBILLPRICE": {
      "description": "Price of US treasury bill.",
      "parameters": {
        "settlement": {
          "name": "settlement",
          "detail": "The settlement date of the security, the date after issuance when the security is delivered to the buyer."
        },
        "maturity": {
          "name": "maturity",
          "detail": "The maturity or end date of the security, when it can be redeemed at face, or par value."
        },
        "discount": {
          "name": "discount",
          "detail": "The discount rate of the bill at time of purchase."
        }
      }
    },
    "PV": {
      "description": "Present value of an annuity investment.",
      "parameters": {
        "rate": {
          "name": "rate",
          "detail": "The interest rate."
        },
        "number_of_periods": {
          "name": "number_of_periods",
          "detail": "The number of payments to be made."
        },
        "payment_amount": {
          "name": "payment_amount",
          "detail": "The amount per period to be paid."
        },
        "future_value": {
          "name": "future_value",
          "detail": "The future value remaining after the final payment has been made."
        },
        "end_or_beginning": {
          "name": "end_or_beginning",
          "detail": "Whether payments are due at the end (`0`) or beginning (`1`) of each period."
        }
      }
    },
    "COUPDAYBS": {
      "description": "Number of days from first coupon to settlement.",
      "parameters": {
        "settlement": {
          "name": "settlement",
          "detail": "The settlement date of the security, the date after issuance when the security is delivered to the buyer."
        },
        "maturity": {
          "name": "maturity",
          "detail": "The maturity or end date of the security, when it can be redeemed at face, or par value."
        },
        "frequency": {
          "name": "frequency",
          "detail": "The number of interest or coupon payments per year (1, 2, or 4)."
        },
        "day_count_convention": {
          "name": "day_count_convention",
          "detail": "An indicator of what day count method to use."
        }
      }
    },
    "COUPDAYS": {
      "description": "Days in coupon period containing settlement date.",
      "parameters": {
        "settlement": {
          "name": "settlement",
          "detail": "The settlement date of the security, the date after issuance when the security is delivered to the buyer."
        },
        "maturity": {
          "name": "maturity",
          "detail": "The maturity or end date of the security, when it can be redeemed at face, or par value."
        },
        "frequency": {
          "name": "frequency",
          "detail": "The number of interest or coupon payments per year (1, 2, or 4)."
        },
        "day_count_convention": {
          "name": "day_count_convention",
          "detail": "An indicator of what day count method to use."
        }
      }
    },
    "FV": {
      "description": "Future value of an annuity investment.",
      "parameters": {
        "rate": {
          "name": "rate",
          "detail": "The interest rate."
        },
        "number_of_periods": {
          "name": "number_of_periods",
          "detail": "The number of payments to be made."
        },
        "payment_amount": {
          "name": "payment_amount",
          "detail": "The amount per period to be paid."
        },
        "present_value": {
          "name": "present_value",
          "detail": "The current value of the annuity."
        },
        "end_or_beginning": {
          "name": "end_or_beginning",
          "detail": "Whether payments are due at the end (`0`) or beginning (`1`) of each period."
        }
      }
    },
    "FVSCHEDULE": {
      "description": "Future value of principal from series of rates.",
      "parameters": {
        "principal": {
          "name": "principal",
          "detail": "The amount of initial capital or value to compound against."
        },
        "rate_schedule": {
          "name": "rate_schedule",
          "detail": "A series of interest rates to compound against the `principal`."
        }
      }
    },
    "YIELD": {
      "description": "Annual yield of a security paying periodic interest.",
      "parameters": {
        "settlement": {
          "name": "settlement",
          "detail": "The settlement date of the security, the date after issuance when the security is delivered to the buyer."
        },
        "maturity": {
          "name": "maturity",
          "detail": "The maturity or end date of the security, when it can be redeemed at face, or par value."
        },
        "rate": {
          "name": "rate",
          "detail": "The annualized rate of interest."
        },
        "price": {
          "name": "price",
          "detail": "The price at which the security is bought per 100 face value."
        },
        "redemption": {
          "name": "redemption",
          "detail": "The redemption amount per 100 face value, or par."
        },
        "frequency": {
          "name": "frequency",
          "detail": "The number of interest or coupon payments per year (1, 2, or 4)."
        },
        "day_count_convention": {
          "name": "day_count_convention",
          "detail": "An indicator of what day count method to use."
        }
      }
    },
    "YIELDDISC": {
      "description": "Annual yield of a discount security.",
      "parameters": {
        "settlement": {
          "name": "settlement",
          "detail": "The settlement date of the security, the date after issuance when the security is delivered to the buyer."
        },
        "maturity": {
          "name": "maturity",
          "detail": "The maturity or end date of the security, when it can be redeemed at face, or par value."
        },
        "price": {
          "name": "price",
          "detail": "The price at which the security is bought per 100 face value."
        },
        "redemption": {
          "name": "redemption",
          "detail": "The redemption amount per 100 face value, or par."
        },
        "day_count_convention": {
          "name": "day_count_convention",
          "detail": "An indicator of what day count method to use."
        }
      }
    },
    "NOMINAL": {
      "description": "Annual nominal interest rate.",
      "parameters": {
        "effective_rate": {
          "name": "effective_rate",
          "detail": "The effective interest rate per year."
        },
        "periods_per_year": {
          "name": "periods_per_year",
          "detail": "The number of compounding periods per year."
        }
      }
    },
    "XIRR": {
      "description": "Internal rate of return given non-periodic cashflows.",
      "parameters": {
        "cashflow_amounts": {
          "name": "cashflow_amounts",
          "detail": "An array or range containing the income or payments associated with the investment."
        },
        "cashflow_dates": {
          "name": "cashflow_dates",
          "detail": "An array or range with dates corresponding to the cash flows in `cashflow_amounts`."
        },
        "rate_guess": {
          "name": "rate_guess",
          "detail": "An estimate for what the internal rate of return will be."
        }
      }
    },
    "MIRR": {
      "description": "Modified internal rate of return.",
      "parameters": {
        "cashflow_amounts": {
          "name": "cashflow_amounts",
          "detail": "An array or range containing the income or payments associated with the investment."
        },
        "financing_rate": {
          "name": "financing_rate",
          "detail": "The interest rate paid on funds invested."
        },
        "reinvestment_return_rate": {
          "name": "reinvestment_return_rate",
          "detail": "The return (as a percentage) earned on reinvestment of income received from the investment."
        }
      }
    },
    "IRR": {
      "description": "Internal rate of return given periodic cashflows.",
      "parameters": {
        "cashflow_amounts": {
          "name": "cashflow_amounts",
          "detail": "An array or range containing the income or payments associated with the investment."
        },
        "rate_guess": {
          "name": "rate_guess",
          "detail": "An estimate for what the internal rate of return will be."
        }
      }
    },
    "NPV": {
      "description": "The net present value of an investment based on a series of periodic cash flows and a discount rate.",
      "parameters": {
        "discount": {
          "name": "discount",
          "detail": "The discount rate of the investment over one period."
        },
        "cashflow1": {
          "name": "cashflow1",
          "detail": "The first future cash flow."
        },
        "cashflow2": {
          "name": "cashflow2",
          "detail": "Additional future cash flows."
        }
      }
    },
    "XNPV": {
      "description": "Net present value given non-periodic cashflows.",
      "parameters": {
        "discount": {
          "name": "discount",
          "detail": "The discount rate of the investment over one period."
        },
        "cashflow_amounts": {
          "name": "cashflow_amounts",
          "detail": "A range of cells containing the income or payments associated with the investment."
        },
        "cashflow_dates": {
          "name": "cashflow_dates",
          "detail": "A range of cells with dates corresponding to the cash flows in `cashflow_amounts`."
        }
      }
    },
    "CUMIPMT": {
      "description": "Cumulative interest paid over a set of periods.",
      "parameters": {
        "rate": {
          "name": "rate",
          "detail": "The interest rate."
        },
        "number_of_periods": {
          "name": "number_of_periods",
          "detail": "The number of payments to be made."
        },
        "present_value": {
          "name": "present_value",
          "detail": "The current value of the annuity."
        },
        "first_period": {
          "name": "first_period",
          "detail": "The number of the payment period to begin the cumulative calculation."
        },
        "last_period": {
          "name": "last_period",
          "detail": "The number of the payment period to end the cumulative calculation."
        },
        "end_or_beginning": {
          "name": "end_or_beginning",
          "detail": "Whether payments are due at the end (`0`) or beginning (`1`) of each period."
        }
      }
    },
    "PMT": {
      "description": "Periodic payment for an annuity investment.",
      "parameters": {
        "rate": {
          "name": "rate",
          "detail": "The interest rate."
        },
        "number_of_periods": {
          "name": "number_of_periods",
          "detail": "The number of payments to be made."
        },
        "present_value": {
          "name": "present_value",
          "detail": "The current value of the annuity."
        },
        "future_value": {
          "name": "future_value",
          "detail": "The future value remaining after the final payment has been made."
        },
        "end_or_beginning": {
          "name": "end_or_beginning",
          "detail": "Whether payments are due at the end (`0`) or beginning (`1`) of each period."
        }
      }
    },
    "IPMT": {
      "description": "Payment on interest for an investment.",
      "parameters": {
        "rate": {
          "name": "rate",
          "detail": "The interest rate."
        },
        "period": {
          "name": "period",
          "detail": "The amortization period, in terms of number of periods."
        },
        "number_of_periods": {
          "name": "number_of_periods",
          "detail": "The number of payments to be made."
        },
        "present_value": {
          "name": "present_value",
          "detail": "The current value of the annuity."
        },
        "future_value": {
          "name": "future_value",
          "detail": "The future value remaining after the final payment has been made."
        },
        "end_or_beginning": {
          "name": "end_or_beginning",
          "detail": "Whether payments are due at the end (`0`) or beginning (`1`) of each period."
        }
      }
    },
    "PPMT": {
      "description": "Payment on the principal of an investment.",
      "parameters": {
        "rate": {
          "name": "rate",
          "detail": "The interest rate."
        },
        "period": {
          "name": "period",
          "detail": "The amortization period, in terms of number of periods."
        },
        "number_of_periods": {
          "name": "number_of_periods",
          "detail": "The number of payments to be made."
        },
        "present_value": {
          "name": "present_value",
          "detail": "The current value of the annuity."
        },
        "future_value": {
          "name": "future_value",
          "detail": "The future value remaining after the final payment has been made."
        },
        "end_or_beginning": {
          "name": "end_or_beginning",
          "detail": "Whether payments are due at the end (`0`) or beginning (`1`) of each period."
        }
      }
    },
    "INTRATE": {
      "description": "Calculates effective interest rate.",
      "parameters": {
        "buy_date": {
          "name": "buy_date",
          "detail": "The date of purchase of the investment."
        },
        "sell_date": {
          "name": "sell_date",
          "detail": "The date of sale of the investment."
        },
        "buy_price": {
          "name": "buy_price",
          "detail": "The price at which the investment was purchased."
        },
        "sell_price": {
          "name": "sell_price",
          "detail": "The price at which the investment was sold."
        },
        "day_count_convention": {
          "name": "day_count_convention",
          "detail": "An indicator of what day count method to use."
        }
      }
    },
    "PRICE": {
      "description": "Price of a security paying periodic interest.",
      "parameters": {
        "settlement": {
          "name": "settlement",
          "detail": "The settlement date of the security, the date after issuance when the security is delivered to the buyer."
        },
        "maturity": {
          "name": "maturity",
          "detail": "The maturity or end date of the security, when it can be redeemed at face, or par value."
        },
        "rate": {
          "name": "rate",
          "detail": "The annualized rate of interest."
        },
        "yield": {
          "name": "yield",
          "detail": "The expected annual yield of the security."
        },
        "redemption": {
          "name": "redemption",
          "detail": "The redemption amount per 100 face value, or par."
        },
        "frequency": {
          "name": "frequency",
          "detail": "The number of interest or coupon payments per year (1, 2, or 4)."
        },
        "day_count_convention": {
          "name": "day_count_convention",
          "detail": "An indicator of what day count method to use."
        }
      }
    },
    "PRICEDISC": {
      "description": "Price of a discount security.",
      "parameters": {
        "settlement": {
          "name": "settlement",
          "detail": "The settlement date of the security, the date after issuance when the security is delivered to the buyer."
        },
        "maturity": {
          "name": "maturity",
          "detail": "The maturity or end date of the security, when it can be redeemed at face, or par value."
        },
        "discount": {
          "name": "discount",
          "detail": "The discount rate of the security at time of purchase."
        },
        "redemption": {
          "name": "redemption",
          "detail": "The redemption amount per 100 face value, or par."
        },
        "day_count_convention": {
          "name": "day_count_convention",
          "detail": "An indicator of what day count method to use."
        }
      }
    },
    "PRICEMAT": {
      "description": "Price of security paying interest at maturity.",
      "parameters": {
        "settlement": {
          "name": "settlement",
          "detail": "The settlement date of the security, the date after issuance when the security is delivered to the buyer."
        },
        "maturity": {
          "name": "maturity",
          "detail": "The maturity or end date of the security, when it can be redeemed at face, or par value."
        },
        "issue": {
          "name": "issue",
          "detail": "The date the security was initially issued."
        },
        "rate": {
          "name": "rate",
          "detail": "The annualized rate of interest."
        },
        "yield": {
          "name": "yield",
          "detail": "The expected annual yield of the security."
        },
        "day_count_convention": {
          "name": "day_count_convention",
          "detail": "An indicator of what day count method to use."
        }
      }
    },
    "RECEIVED": {
      "description": "Amount received at maturity for a security.",
      "parameters": {
        "settlement": {
          "name": "settlement",
          "detail": "The settlement date of the security, the date after issuance when the security is delivered to the buyer."
        },
        "maturity": {
          "name": "maturity",
          "detail": "The maturity or end date of the security, when it can be redeemed at face, or par value."
        },
        "investment": {
          "name": "investment",
          "detail": "The amount invested (irrespective of face value of each security)."
        },
        "discount": {
          "name": "discount",
          "detail": "The discount rate of the security invested in."
        },
        "day_count_convention": {
          "name": "day_count_convention",
          "detail": "An indicator of what day count method to use."
        }
      }
    },
    "DISC": {
      "description": "The discount rate of a security based on price.",
      "parameters": {
        "settlement": {
          "name": "settlement",
          "detail": "The settlement date of the security, the date after issuance when the security is delivered to the buyer."
        },
        "maturity": {
          "name": "maturity",
          "detail": "The maturity or end date of the security, when it can be redeemed at face, or par value."
        },
        "price": {
          "name": "price",
          "detail": "The price at which the security is bought per 100 face value."
        },
        "redemption": {
          "name": "redemption",
          "detail": "The redemption amount per 100 face value, or par."
        },
        "day_count_convention": {
          "name": "day_count_convention",
          "detail": "An indicator of what day count method to use."
        }
      }
    },
    "NPER": {
      "description": "Number of payment periods for an investment.",
      "parameters": {
        "rate": {
          "name": "rate",
          "detail": "The interest rate."
        },
        "payment_amount": {
          "name": "payment_amount",
          "detail": "The amount of each payment made."
        },
        "present_value": {
          "name": "present_value",
          "detail": "The current value of the annuity."
        },
        "future_value": {
          "name": "future_value",
          "detail": "The future value remaining after the final payment has been made."
        },
        "end_or_beginning": {
          "name": "end_or_beginning",
          "detail": "Whether payments are due at the end (`0`) or beginning (`1`) of each period."
        }
      }
    },
    "SLN": {
      "description": "Depreciation of asset using the straight-line method.",
      "parameters": {
        "cost": {
          "name": "cost",
          "detail": "The initial cost of the asset."
        },
        "salvage": {
          "name": "salvage",
          "detail": "The value of the asset at the end of depreciation."
        },
        "life": {
          "name": "life",
          "detail": "The number of periods over which the asset is depreciated."
        }
      }
    },
    "DURATION": {
      "description": "Number of periods for an investment to reach a value.",
      "parameters": {
        "settlement": {
          "name": "settlement",
          "detail": "The settlement date of the security, the date after issuance when the security is delivered to the buyer."
        },
        "maturity": {
          "name": "maturity",
          "detail": "The maturity or end date of the security, when it can be redeemed at face, or par value."
        },
        "rate": {
          "name": "rate",
          "detail": "The annualized rate of interest."
        },
        "yield": {
          "name": "yield",
          "detail": "The expected annual yield of the security."
        },
        "frequency": {
          "name": "frequency",
          "detail": "The number of interest or coupon payments per year (1, 2, or 4)."
        },
        "day_count_convention": {
          "name": "day_count_convention",
          "detail": "An indicator of what day count method to use."
        }
      }
    },
    "MDURATION": {
      "description": "Modified Macaulay duration.",
      "parameters": {
        "settlement": {
          "name": "settlement",
          "detail": "The settlement date of the security, the date after issuance when the security is delivered to the buyer."
        },
        "maturity": {
          "name": "maturity",
          "detail": "The maturity or end date of the security, when it can be redeemed at face, or par value."
        },
        "rate": {
          "name": "rate",
          "detail": "The annualized rate of interest."
        },
        "yield": {
          "name": "yield",
          "detail": "The expected annual yield of the security."
        },
        "frequency": {
          "name": "frequency",
          "detail": "The number of interest or coupon payments per year (1, 2, or 4)."
        },
        "day_count_convention": {
          "name": "day_count_convention",
          "detail": "An indicator of what day count method to use."
        }
      }
    },
    "BIN2DEC": {
      "description": "Converts a signed binary number to decimal format.",
      "parameters": {
        "signed_binary_number": {
          "name": "signed_binary_number",
          "detail": "The signed 10-bit binary value to be converted to decimal, provided as a string."
        }
      }
    },
    "BIN2HEX": {
      "description": "Converts a binary number to hexadecimal.",
      "parameters": {
        "signed_binary_number": {
          "name": "signed_binary_number",
          "detail": "The signed 10-bit binary value to be converted to signed hexademical, provided as a string."
        },
        "significant_digits": {
          "name": "significant_digits",
          "detail": "The number of significant digits to ensure in the result."
        }
      }
    },
    "BIN2OCT": {
      "description": "Converts a binary number to octal.",
      "parameters": {
        "signed_binary_number": {
          "name": "signed_binary_number",
          "detail": "The signed 10-bit binary value to be converted to signed octal, provided as a string."
        },
        "significant_digits": {
          "name": "significant_digits",
          "detail": "The number of significant digits to ensure in the result."
        }
      }
    },
    "DEC2BIN": {
      "description": "Converts a decimal number to signed binary format.",
      "parameters": {
        "decimal_number": {
          "name": "decimal_number",
          "detail": "The decimal value to be converted to signed binary, provided as a string."
        },
        "significant_digits": {
          "name": "significant_digits",
          "detail": "The number of significant digits to ensure in the result."
        }
      }
    },
    "DEC2HEX": {
      "description": "Converts a decimal number to hexadecimal.",
      "parameters": {
        "decimal_number": {
          "name": "decimal_number",
          "detail": "The decimal value to be converted to signed hexadecimal, provided as a string."
        },
        "significant_digits": {
          "name": "significant_digits",
          "detail": "The number of significant digits to ensure in the result."
        }
      }
    },
    "DEC2OCT": {
      "description": "Converts a decimal number to signed octal format.",
      "parameters": {
        "decimal_number": {
          "name": "decimal_number",
          "detail": "The decimal value to be converted to signed octal, provided as a string."
        },
        "significant_digits": {
          "name": "significant_digits",
          "detail": "The number of significant digits to ensure in the result."
        }
      }
    },
    "HEX2BIN": {
      "description": "Converts a hexadecimal number to binary.",
      "parameters": {
        "signed_hexadecimal_number": {
          "name": "signed_hexadecimal_number",
          "detail": "The signed 40-bit hexadecimal value to be converted to signed binary, provided as a string."
        },
        "significant_digits": {
          "name": "significant_digits",
          "detail": "The number of significant digits to ensure in the result."
        }
      }
    },
    "HEX2DEC": {
      "description": "Converts a hexadecimal number to decimal.",
      "parameters": {
        "signed_hexadecimal_number": {
          "name": "signed_hexadecimal_number",
          "detail": "The signed 40-bit hexadecimal value to be converted to decimal, provided as a string."
        }
      }
    },
    "HEX2OCT": {
      "description": "Converts a hexadecimal number to octal.",
      "parameters": {
        "signed_hexadecimal_number": {
          "name": "signed_hexadecimal_number",
          "detail": "The signed 40-bit hexadecimal value to be converted to signed octal, provided as a string."
        },
        "significant_digits": {
          "name": "significant_digits",
          "detail": "The number of significant digits to ensure in the result."
        }
      }
    },
    "OCT2BIN": {
      "description": "Converts an octal number to binary.",
      "parameters": {
        "signed_octal_number": {
          "name": "signed_octal_number",
          "detail": "The signed 30-bit octal value to be converted to signed binary, provided as a string."
        },
        "significant_digits": {
          "name": "significant_digits",
          "detail": "The number of significant digits to ensure in the result."
        }
      }
    },
    "OCT2DEC": {
      "description": "Converts a signed octal number to decimal format.",
      "parameters": {
        "signed_octal_number": {
          "name": "signed_octal_number",
          "detail": "The signed 30-bit octal value to be converted to decimal, provided as a string."
        }
      }
    },
    "OCT2HEX": {
      "description": "Converts an octal number to hexadecimal.",
      "parameters": {
        "signed_octal_number": {
          "name": "signed_octal_number",
          "detail": "The signed 30-bit octal value to be converted to signed hexadecimal, provided as a string."
        },
        "significant_digits": {
          "name": "significant_digits",
          "detail": "The number of significant digits to ensure in the result."
        }
      }
    },
    "COMPLEX": {
      "description": "Creates a complex number.",
      "parameters": {
        "real_part": {
          "name": "real_part",
          "detail": "The real coefficient."
        },
        "imaginary_part": {
          "name": "imaginary_part",
          "detail": "The imaginary coefficient."
        },
        "suffix": {
          "name": "suffix",
          "detail": "The suffix for the imaginary coefficient, can only be 'i' or 'j'. If omitted, 'i' will be used."
        }
      }
    },
    "IMREAL": {
      "description": "The real coefficient of a complex number.",
      "parameters": {
        "complex_number": {
          "name": "complex_number",
          "detail": "The complex number, in the a+bi or a+bj format."
        }
      }
    },
    "IMAGINARY": {
      "description": "The imaginary coefficient of a complex number.",
      "parameters": {
        "complex_number": {
          "name": "complex_number",
          "detail": "The complex number, in the a+bi or a+bj format."
        }
      }
    },
    "IMCONJUGATE": {
      "description": "The complex conjugate of a number.",
      "parameters": {
        "number": {
          "name": "number",
          "detail": "The complex number to calculate the conjugate for."
        }
      }
    },
    "IMABS": {
      "description": "The absolute value of a complex number.",
      "parameters": {
        "number": {
          "name": "number",
          "detail": "The complex number to calculate the absolute value of."
        }
      }
    },
    "DELTA": {
      "description": "Compare two numeric values.",
      "parameters": {
        "number1": {
          "name": "number1",
          "detail": "The first number to compare."
        },
        "number2": {
          "name": "number2",
          "detail": "The second number to compare."
        }
      }
    },
    "IMSUM": {
      "description": "Sum of a series of complex numbers.",
      "parameters": {
        "value1": {
          "name": "value1",
          "detail": "The first complex number or range to add together."
        },
        "value2": {
          "name": "value2",
          "detail": "Additional complex numbers or ranges to add to `value1`."
        }
      }
    },
    "IMSUB": {
      "description": "The difference between two complex numbers.",
      "parameters": {
        "first_number": {
          "name": "first_number",
          "detail": "The complex number to subtract second_number from."
        },
        "second_number": {
          "name": "second_number",
          "detail": "The complex number to subtract from first_number."
        }
      }
    },
    "IMPRODUCT": {
      "description": "Result of multiplying a series of complex numbers together.",
      "parameters": {
        "factor1": {
          "name": "factor1",
          "detail": "The first number or range to calculate for the product."
        },
        "factor2": {
          "name": "factor2",
          "detail": "Additional complex numbers or ranges to calculate for the product."
        }
      }
    },
    "IMDIV": {
      "description": "One complex number divided by another.",
      "parameters": {
        "dividend": {
          "name": "dividend",
          "detail": "The complex number to be divided."
        },
        "divisor": {
          "name": "divisor",
          "detail": "The complex number to divide by."
        }
      }
    },
    "NOT": {
      "description": "Returns opposite of provided logical value.",
      "parameters": {
        "logical_expression": {
          "name": "logical_expression",
          "detail": "An expression or reference to a cell holding an expression that represents some logical value."
        }
      }
    },
    "TRUE": {
      "description": "Logical value `true`."
    },
    "FALSE": {
      "description": "Logical value `false`."
    },
    "AND": {
      "description": "Logical `and` operator.",
      "parameters": {
        "logical_expression1": {
          "name": "logical_expression1",
          "detail": "An expression or reference to a cell containing an expression that represents some logical value, i.e. `TRUE` or `FALSE`, or an expression that can be coerced to a logical value."
        },
        "logical_expression2": {
          "name": "logical_expression2",
          "detail": "More expressions that represent logical values."
        }
      }
    },
    "IFERROR": {
      "description": "Value if it is not an error, otherwise 2nd argument.",
      "parameters": {
        "value": {
          "name": "value",
          "detail": "The value to return if `value` itself is not an error."
        },
        "value_if_error": {
          "name": "value_if_error",
          "detail": "The value the function returns if `value` is an error."
        }
      }
    },
    "IF": {
      "description": "Returns value depending on logical expression.",
      "parameters": {
        "logical_expression": {
          "name": "logical_expression",
          "detail": "An expression or reference to a cell containing an expression that represents some logical value, i.e. `TRUE` or `FALSE`."
        },
        "value_if_true": {
          "name": "value_if_true",
          "detail": "The value the function returns if `logical_expression` is `TRUE`."
        },
        "value_if_false": {
          "name": "value_if_false",
          "detail": "The value the function returns if `logical_expression` is `FALSE`."
        }
      }
    },
    "OR": {
      "description": "Logical `or` operator.",
      "parameters": {
        "logical_expression1": {
          "name": "logical_expression1",
          "detail": "An expression or reference to a cell containing an expression that represents some logical value, i.e. `TRUE` or `FALSE`, or an expression that can be coerced to a logical value."
        },
        "logical_expression2": {
          "name": "logical_expression2",
          "detail": "More expressions that evaluate to logical values."
        }
      }
    },
    "NE": {
      "description": "Not equal.",
      "parameters": {
        "value1": {
          "name": "value1",
          "detail": "The first value."
        },
        "value2": {
          "name": "value2",
          "detail": "The value to test against `value1` for inequality."
        }
      }
    },
    "EQ": {
      "description": "Equal.",
      "parameters": {
        "value1": {
          "name": "value1",
          "detail": "The first value."
        },
        "value2": {
          "name": "value2",
          "detail": "The value to test against `value1` for equality."
        }
      }
    },
    "GT": {
      "description": "Strictly greater than.",
      "parameters": {
        "value1": {
          "name": "value1",
          "detail": "The value to test as being greater than `value2`."
        },
        "value2": {
          "name": "value2",
          "detail": "The second value."
        }
      }
    },
    "GTE": {
      "description": "Greater than or equal to.",
      "parameters": {
        "value1": {
          "name": "value1",
          "detail": "The value to test as being greater than or equal to `value2`."
        },
        "value2": {
          "name": "value2",
          "detail": "The second value."
        }
      }
    },
    "LT": {
      "description": "Less than.",
      "parameters": {
        "value1": {
          "name": "value1",
          "detail": "The value to test as being less than `value2`."
        },
        "value2": {
          "name": "value2",
          "detail": "The second value."
        }
      }
    },
    "LTE": {
      "description": "Less than or equal to.",
      "parameters": {
        "value1": {
          "name": "value1",
          "detail": "The value to test as being less than or equal to `value2`."
        },
        "value2": {
          "name": "value2",
          "detail": "The second value."
        }
      }
    },
    "ADD": {
      "description": "Sum of two numbers",
      "parameters": {
        "value1": {
          "name": "value1",
          "detail": "The first addend."
        },
        "value2": {
          "name": "value2",
          "detail": "The second addend."
        }
      }
    },
    "MINUS": {
      "description": "Difference of two numbers",
      "parameters": {
        "value1": {
          "name": "value1",
          "detail": "The minuend, or number to be subtracted from."
        },
        "value2": {
          "name": "value2",
          "detail": "The subtrahend, or number to subtract from `value1`."
        }
      }
    },
    "MULTIPLY": {
      "description": "Product of two numbers",
      "parameters": {
        "factor1": {
          "name": "factor1",
          "detail": "The first multiplicand."
        },
        "factor2": {
          "name": "factor2",
          "detail": "The second multiplicand."
        }
      }
    },
    "DIVIDE": {
      "description": "One number divided by another",
      "parameters": {
        "dividend": {
          "name": "dividend",
          "detail": "The number to be divided."
        },
        "divisor": {
          "name": "divisor",
          "detail": "The number to divide by."
        }
      }
    },
    "CONCAT": {
      "description": "Concatenation of two values",
      "parameters": {
        "value1": {
          "name": "value1",
          "detail": "The value to which `value2` will be appended."
        },
        "value2": {
          "name": "value2",
          "detail": "The value to append to `value1`."
        }
      }
    },
    "UNARY_PERCENT": {
      "description": "Value interpreted as a percentage.",
      "parameters": {
        "percentage": {
          "name": "percentage",
          "detail": "The value to interpret as a percentage."
        }
      }
    },
    "CONCATENATE": {
      "description": "Appends strings to one another.",
      "parameters": {
        "string1": {
          "name": "string1",
          "detail": "The initial string."
        },
        "string2": {
          "name": "string2",
          "detail": "More strings to append in sequence."
        }
      }
    },
    "CODE": {
      "description": "Numeric unicode map value of character.",
      "parameters": {
        "string": {
          "name": "string",
          "detail": "The string whose first character's Unicode map value will be returned."
        }
      }
    },
    "CHAR": {
      "description": "Gets character associated with number.",
      "parameters": {
        "table_number": {
          "name": "table_number",
          "detail": "The number of the character to look up from the current Unicode table in decimal format."
        }
      }
    },
    "ARABIC": {
      "description": "Computes the value of a roman numeral.",
      "parameters": {
        "roman_numeral": {
          "name": "roman_numeral",
          "detail": "The Roman numeral to format, whose value must be between 1 and 3999, inclusive."
        }
      }
    },
    "ROMAN": {
      "description": "Formats a number in Roman numerals.",
      "parameters": {
        "number": {
          "name": "number",
          "detail": "The number to format, between 1 and 3999, inclusive."
        }
      }
    },
    "REGEXEXTRACT": {
      "description": "Extracts matching substrings with regular expression.",
      "parameters": {
        "text": {
          "name": "text",
          "detail": "The input text."
        },
        "regular_expression": {
          "name": "regular_expression",
          "detail": "The first part of `text` that matches this expression will be returned."
        }
      }
    },
    "REGEXMATCH": {
      "description": "Whether a piece of text matches regular expression.",
      "parameters": {
        "text": {
          "name": "text",
          "detail": "The text to be tested against the regular expression."
        },
        "regular_expression": {
          "name": "regular_expression",
          "detail": "The regular expression to test the text against."
        }
      }
    },
    "REGEXREPLACE": {
      "description": "Replaces text with regular expressions.",
      "parameters": {
        "text": {
          "name": "text",
          "detail": "The text, a part of which will be replaced."
        },
        "regular_expression": {
          "name": "regular_expression",
          "detail": "The regular expression.  All matching instances in `text` will be replaced."
        },
        "replacement": {
          "name": "replacement",
          "detail": "The text which will be inserted into the original text."
        }
      }
    },
    "T": {
      "description": "String arguments as text.",
      "parameters": {
        "value": {
          "name": "value",
          "detail": "The argument to be converted to text."
        }
      }
    },
    "FIXED": {
      "description": "Formats number with fixed number of decimal places.",
      "parameters": {
        "number": {
          "name": "number",
          "detail": "The number to format."
        },
        "number_of_places": {
          "name": "number_of_places",
          "detail": "The number of decimal places to display in the result."
        },
        "suppress_separator": {
          "name": "suppress_separator",
          "detail": "Whether or not to suppress the thousands separator used in some locales (e.g. `1,000` becomes `1000`). Separators will be present if this value is 0 or omitted, and absent otherwise."
        }
      }
    },
    "FIND": {
      "description": "First position of string found in text, case-sensitive.",
      "parameters": {
        "search_for": {
          "name": "search_for",
          "detail": "The string to look for within `text_to_search`."
        },
        "text_to_search": {
          "name": "text_to_search",
          "detail": "The text to search for the first occurrence of `search_for`."
        },
        "starting_at": {
          "name": "starting_at",
          "detail": "The character within `text_to_search` at which to start the search."
        }
      }
    },
    "FINDB": {
      "description": "Position at which a string is first found within text (binary).",
      "parameters": {
        "search_for": {
          "name": "search_for",
          "detail": "The string to look for within `text_to_search`."
        },
        "text_to_search": {
          "name": "text_to_search",
          "detail": "The text to search for the first occurrence of `search_for`."
        },
        "starting_at": {
          "name": "starting_at",
          "detail": "The character within `text_to_search` at which to start the search."
        }
      }
    },
    "JOIN": {
      "description": "Concatenates elements of arrays with delimiter.",
      "parameters": {
        "delimiter": {
          "name": "delimiter",
          "detail": "The character or string to place between each concatenated value."
        },
        "value_or_array1": {
          "name": "value_or_array1",
          "detail": "The value or values to be appended using `delimiter`."
        },
        "value_or_array2": {
          "name": "value_or_array2",
          "detail": "More values to be appended using `delimiter`."
        }
      }
    },
    "LEFT": {
      "description": "Substring from beginning of specified string.",
      "parameters": {
        "string": {
          "name": "string",
          "detail": "The string from which the left portion will be returned."
        },
        "number_of_characters": {
          "name": "number_of_characters",
          "detail": "The number of characters to return from the left side of `string`."
        }
      }
    },
    "RIGHT": {
      "description": "A substring from the end of a specified string.",
      "parameters": {
        "string": {
          "name": "string",
          "detail": "The string from which the right portion will be returned."
        },
        "number_of_characters": {
          "name": "number_of_characters",
          "detail": "The number of characters to return from the right side of `string`."
        }
      }
    },
    "MID": {
      "description": "A segment of a string.",
      "parameters": {
        "string": {
          "name": "string",
          "detail": "The string to extract a segment from."
        },
        "starting_at": {
          "name": "starting_at",
          "detail": "The index from the left of `string` from which to begin extracting. The first character in `string` has the index 1."
        },
        "extract_length": {
          "name": "extract_length",
          "detail": "The length of the segment to extract."
        }
      }
    },
    "LEN": {
      "description": "Length of a string.",
      "parameters": {
        "text": {
          "name": "text",
          "detail": "The string whose length will be returned."
        }
      }
    },
    "LENB": {
      "description": "Length of a string in bytes.",
      "parameters": {
        "text": {
          "name": "text",
          "detail": "The string whose length will be returned."
        }
      }
    },
    "LOWER": {
      "description": "Converts a specified string to lowercase.",
      "parameters": {
        "text": {
          "name": "text",
          "detail": "The string to convert to lowercase."
        }
      }
    },
    "UPPER": {
      "description": "Converts a specified string to uppercase.",
      "parameters": {
        "text": {
          "name": "text",
          "detail": "The string to convert to uppercase."
        }
      }
    },
    "EXACT": {
      "description": "Tests whether two strings are identical.",
      "parameters": {
        "string1": {
          "name": "string1",
          "detail": "The first string to compare"
        },
        "string2": {
          "name": "string2",
          "detail": "The second string to compare"
        }
      }
    },
    "REPLACE": {
      "description": "Replaces part of a text string with different text.",
      "parameters": {
        "text": {
          "name": "text",
          "detail": "The text, a part of which will be replaced."
        },
        "position": {
          "name": "position",
          "detail": "The position where the replacement will begin (starting from 1)."
        },
        "length": {
          "name": "length",
          "detail": "The number of characters in the text to be replaced."
        },
        "new_text": {
          "name": "new_text",
          "detail": "The text which will be inserted into the original text."
        }
      }
    },
    "REPT": {
      "description": "Specified text repeated a number of times.",
      "parameters": {
        "text_to_repeat": {
          "name": "text_to_repeat",
          "detail": "The character or string to repeat."
        },
        "number_of_repetitions": {
          "name": "number_of_repetitions",
          "detail": "The number of times `text_to_repeat` should appear in the value returned."
        }
      }
    },
    "SEARCH": {
      "description": "First position of string found in text, ignoring case.",
      "parameters": {
        "search_for": {
          "name": "search_for",
          "detail": "The string to look for within `text_to_search`."
        },
        "text_to_search": {
          "name": "text_to_search",
          "detail": "The text to search for the first occurrence of `search_for`."
        },
        "starting_at": {
          "name": "starting_at",
          "detail": "The character within `text_to_search` at which to start the search."
        }
      }
    },
    "SUBSTITUTE": {
      "description": "Replaces existing text with new text in a string.",
      "parameters": {
        "text_to_search": {
          "name": "text_to_search",
          "detail": "The text within which to search and replace."
        },
        "search_for": {
          "name": "search_for",
          "detail": "The string to search for within `text_to_search`."
        },
        "replace_with": {
          "name": "replace_with",
          "detail": "The string that will replace `search_for`."
        },
        "occurrence_number": {
          "name": "occurrence_number",
          "detail": "The instance of `search_for` within `text_to_search` to replace with `replace_with`. By default, all occurrences of `search_for` are replaced; however, if `occurrence_number` is specified, only the indicated instance of `search_for` is replaced."
        }
      }
    },
    "CLEAN": {
      "description": "Removes non-printable characters from a piece of text.",
      "parameters": {
        "text": {
          "name": "text",
          "detail": "The text whose non-printable characters are to be removed."
        }
      }
    },
    "TEXT": {
      "description": "Formats a number into text.",
      "parameters": {
        "number": {
          "name": "number",
          "detail": "The number, date, or time to format."
        },
        "format": {
          "name": "format",
          "detail": "The pattern by which to format the number, enclosed in quotation marks."
        }
      }
    },
    "TRIM": {
      "description": "Removes space characters.",
      "parameters": {
        "text": {
          "name": "text",
          "detail": "The text or reference to a cell containing text to be trimmed."
        }
      }
    },
    "VALUE": {
      "description": "Converts a date/time/number string into a number.",
      "parameters": {
        "text": {
          "name": "text",
          "detail": "The string containing the value to be converted."
        }
      }
    },
    "PROPER": {
      "description": "Capitalizes each word in a specified string.",
      "parameters": {
        "text_to_capitalize": {
          "name": "text_to_capitalize",
          "detail": "The text which will be returned with the first letter of each word in uppercase and all other letters in lowercase."
        }
      }
    },
    "CONVERT": {
      "description": "Unit conversion for numbers.",
      "parameters": {
        "value": {
          "name": "value",
          "detail": "The numeric value in `start_unit` to convert to `end_unit`."
        },
        "start_unit": {
          "name": "start_unit",
          "detail": "The starting unit, the unit currently assigned to `value`."
        },
        "end_unit": {
          "name": "end_unit",
          "detail": "The unit of measure into which to convert the argument, `value`."
        }
      }
    },
    "SUMX2MY2": {
      "description": "Sum of the differences of squares.",
      "parameters": {
        "array_x": {
          "name": "array_x",
          "detail": "The array or range of values whose squares will be reduced by the squares of corresponding entries in `array_y` and added together."
        },
        "array_y": {
          "name": "array_y",
          "detail": "The array or range of values whose squares will be subtracted from the squares of corresponding entries in `array_x` and added together."
        }
      }
    },
    "SUMX2PY2": {
      "description": "Sum of the sums of squares.",
      "parameters": {
        "array_x": {
          "name": "array_x",
          "detail": "The array or range of values whose squares will be added to the squares of corresponding entries in `array_y` and added together."
        },
        "array_y": {
          "name": "array_y",
          "detail": "The array or range of values whose squares will be added to the squares of corresponding entries in `array_x` and added together."
        }
      }
    },
    "SUMXMY2": {
      "description": "Sum of the squares of differences.",
      "parameters": {
        "array_x": {
          "name": "array_x",
          "detail": "The array or range of values that will be reduced by corresponding entries in `array_y`, squared, and added together."
        },
        "array_y": {
          "name": "array_y",
          "detail": "The array or range of values that will be subtracted from corresponding entries in `array_x`, the result squared, and all such results added together."
        }
      }
    },
    "TRANSPOSE": {
      "description": "Transposes the rows and columns of an array.",
      "parameters": {
        "array_or_range": {
          "name": "array_or_range",
          "detail": "The array or range whose rows and columns will be swapped."
        }
      }
    },
    "TREND": {
      "description": "Fits points to linear trend derived via least-squares.",
      "parameters": {
        "known_data_y": {
          "name": "known_data_y",
          "detail": "The array or range containing dependent (y) values that are already known, used to curve fit an ideal linear trend."
        },
        "known_data_x": {
          "name": "known_data_x",
          "detail": "The values of the independent variable(s) corresponding with `known_data_y`."
        },
        "new_data_x": {
          "name": "new_data_x",
          "detail": "The data points to return the `y` values for on the ideal curve fit."
        },
        "b": {
          "name": "b",
          "detail": "Given a general linear form of `y = m*x+b` for a curve fit, calculates `b` if `TRUE` or forces `b` to be `0` and only calculates the `m` values if `FALSE`, i.e. forces the curve fit to pass through the origin."
        }
      }
    },
    "FREQUENCY": {
      "description": "The frequency distribution of array.",
      "parameters": {
        "data": {
          "name": "data",
          "detail": "The array or range containing the values to be counted."
        },
        "classes": {
          "name": "classes",
          "detail": "The array or range containing the set of classes."
        }
      }
    },
    "GROWTH": {
      "description": "Fits points to exponential growth trend.",
      "parameters": {
        "known_data_y": {
          "name": "known_data_y",
          "detail": "The array or range containing dependent (y) values that are already known, used to curve fit an ideal exponential growth curve."
        },
        "known_data_x": {
          "name": "known_data_x",
          "detail": "The values of the independent variable(s) corresponding with `known_data_y`."
        },
        "new_data_x": {
          "name": "new_data_x",
          "detail": "The data points to return the `y` values for on the ideal curve fit."
        },
        "b": {
          "name": "b",
          "detail": "Given a general exponential form of `y = b*m^x` for a curve fit, calculates `b` if `TRUE` or forces `b` to be `1` and only calculates the `m` values if `FALSE`."
        }
      }
    },
    "LINEST": {
      "description": "Best-fit linear trend via least-squares.",
      "parameters": {
        "known_data_y": {
          "name": "known_data_y",
          "detail": "The array or range containing dependent (y) values that are already known, used to curve fit an ideal linear trend."
        },
        "known_data_x": {
          "name": "known_data_x",
          "detail": "The values of the independent variable(s) corresponding with `known_data_y`."
        },
        "calculate_b": {
          "name": "calculate_b",
          "detail": "Given a linear form of `y = m*x+b`, calculates the y-intercept (`b`) if `TRUE`. Otherwise, forces `b` to be `0` and only calculates the `m` values if `FALSE`, i.e. forces the curve fit to pass through the origin."
        },
        "verbose": {
          "name": "verbose",
          "detail": "A flag specifying whether to return additional regression statistics or only the linear coefficients and the y-intercept (default)."
        }
      }
    },
    "LOGEST": {
      "description": "Best-fit exponential growth curve.",
      "parameters": {
        "known_data_y": {
          "name": "known_data_y",
          "detail": "The array or range containing dependent (y) values that are already known, used to curve fit an ideal exponential growth curve."
        },
        "known_data_x": {
          "name": "known_data_x",
          "detail": "The values of the independent variable(s) corresponding with `known_data_y`."
        },
        "b": {
          "name": "b",
          "detail": "Given a general exponential form of `y = b*m^x` for a curve fit, calculates `b` if `TRUE` or forces `b` to be `1` and only calculates the `m` values if `FALSE`."
        },
        "verbose": {
          "name": "verbose",
          "detail": "A flag specifying whether to return additional regression statistics or only the calculated coefficient and exponents."
        }
      }
    },
    "MDETERM": {
      "description": "Matrix determinant of a square matrix.",
      "parameters": {
        "square_matrix": {
          "name": "square_matrix",
          "detail": "An array or range with an equal number of rows and columns representing a matrix whose determinant will be calculated."
        }
      }
    },
    "MINVERSE": {
      "description": "Multiplicative inverse of square matrix.",
      "parameters": {
        "square_matrix": {
          "name": "square_matrix",
          "detail": "An array or range with an equal number of rows and columns representing a matrix whose multiplicative inverse will be calculated."
        }
      }
    },
    "MMULT": {
      "description": "The matrix product of two matrices.",
      "parameters": {
        "matrix1": {
          "name": "matrix1",
          "detail": "The first matrix in the matrix multiplication operation, represented as an array or range."
        },
        "matrix2": {
          "name": "matrix2",
          "detail": "The second matrix in the matrix multiplication operation, represented as an array or range."
        }
      }
    },
    "SUMPRODUCT": {
      "description": "Sum of products of elements in two arrays.",
      "parameters": {
        "array1": {
          "name": "array1",
          "detail": "The first array or range whose entries will be multiplied with corresponding entries in the second such array or range."
        },
        "array2": {
          "name": "array2",
          "detail": "The second array or range whose entries will be multiplied with corresponding entries in the first such array or range."
        }
      }
    },
    "ISFORMULA": {
      "description": "Whether a value is a formula.",
      "parameters": {
        "cell": {
          "name": "cell",
          "detail": "The cell to be verified as containing a formula."
        }
      }
    },
    "CELL": {
      "description": "Gets information about a cell.",
      "parameters": {
        "info_type": {
          "name": "info_type",
          "detail": "The type of information requested (see article for available types)"
        },
        "reference": {
          "name": "reference",
          "detail": "The reference to the cell."
        }
      }
    },
    "NA": {
      "description": "The `#N/A` error."
    },
    "ISBLANK": {
      "description": "Whether the referenced cell is empty.",
      "parameters": {
        "value": {
          "name": "value",
          "detail": "Reference to the cell that will be checked for emptiness."
        }
      }
    },
    "ISERR": {
      "description": "Whether a value is an error other than `#n/a`.",
      "parameters": {
        "value": {
          "name": "value",
          "detail": "The value to be verified as an error type other than `#N/A`."
        }
      }
    },
    "ISERROR": {
      "description": "Whether a value is an error.",
      "parameters": {
        "value": {
          "name": "value",
          "detail": "The value to be verified as an error type."
        }
      }
    },
    "ISLOGICAL": {
      "description": "Whether a value is `true` or `false`.",
      "parameters": {
        "value": {
          "name": "value",
          "detail": "The value to be verified as a logical `TRUE` or `FALSE`."
        }
      }
    },
    "ISNA": {
      "description": "Whether a value is the error `#n/a`.",
      "parameters": {
        "value": {
          "name": "value",
          "detail": "The value to be compared with the error value `#N/A`."
        }
      }
    },
    "ISNONTEXT": {
      "description": "Whether a value is non-textual.",
      "parameters": {
        "value": {
          "name": "value",
          "detail": "The value to be checked."
        }
      }
    },
    "ISNUMBER": {
      "description": "Whether a value is a number.",
      "parameters": {
        "value": {
          "name": "value",
          "detail": "The value to be verified as a number."
        }
      }
    },
    "ISREF": {
      "description": "Whether a value is a valid cell reference.",
      "parameters": {
        "value": {
          "name": "value",
          "detail": "The value to be verified as a cell reference."
        }
      }
    },
    "ISTEXT": {
      "description": "Whether a value is text.",
      "parameters": {
        "value": {
          "name": "value",
          "detail": "The value to be verified as text."
        }
      }
    },
    "TYPE": {
      "description": "Get the type of a value.",
      "parameters": {
        "value": {
          "name": "value",
          "detail": "The value whose type is to be determined."
        }
      }
    },
    "N": {
      "description": "Argument provided as a number.",
      "parameters": {
        "value": {
          "name": "value",
          "detail": "The argument to be converted to a number."
        }
      }
    },
    "TO_DATE": {
      "description": "Converts a provided number to a date.",
      "parameters": {
        "value": {
          "name": "value",
          "detail": "The argument or reference to a cell to be converted to a date."
        }
      }
    },
    "TO_PURE_NUMBER": {
      "description": "Converts any numeric value to a pure number.",
      "parameters": {
        "value": {
          "name": "value",
          "detail": "The argument or reference to a cell to be converted to a pure number."
        }
      }
    },
    "TO_TEXT": {
      "description": "Converts a provided numeric value to a text value.",
      "parameters": {
        "value": {
          "name": "value",
          "detail": "The argument or reference to a cell to be converted to text."
        }
      }
    },
    "TO_DOLLARS": {
      "description": "Converts a provided number to a dollar value.",
      "parameters": {
        "value": {
          "name": "value",
          "detail": "The argument or reference to a cell to be converted to a dollar value."
        }
      }
    },
    "TO_PERCENT": {
      "description": "Converts a provided number to a percentage.",
      "parameters": {
        "value": {
          "name": "value",
          "detail": "The argument or reference to a cell to be converted to a percentage."
        }
      }
    },
    "DGET": {
      "description": "Single value from a table-like range.",
      "parameters": {
        "database": {
          "name": "database",
          "detail": "The array or range containing the data to consider, structured in such a way that the first row contains the labels for each column's values."
        },
        "field": {
          "name": "field",
          "detail": "Indicates which column in `database` contains the values to be extracted and operated on."
        },
        "criteria": {
          "name": "criteria",
          "detail": "An array or range containing zero or more criteria to filter the `database` values by before operating."
        }
      }
    },
    "DMAX": {
      "description": "Maximum of values from a table-like range.",
      "parameters": {
        "database": {
          "name": "database",
          "detail": "The array or range containing the data to consider, structured in such a way that the first row contains the labels for each column's values."
        },
        "field": {
          "name": "field",
          "detail": "Indicates which column in `database` contains the values to be extracted and operated on."
        },
        "criteria": {
          "name": "criteria",
          "detail": "An array or range containing zero or more criteria to filter the `database` values by before operating."
        }
      }
    },
    "DMIN": {
      "description": "Minimum of values from a table-like range.",
      "parameters": {
        "database": {
          "name": "database",
          "detail": "The array or range containing the data to consider, structured in such a way that the first row contains the labels for each column's values."
        },
        "field": {
          "name": "field",
          "detail": "Indicates which column in `database` contains the values to be extracted and operated on."
        },
        "criteria": {
          "name": "criteria",
          "detail": "An array or range containing zero or more criteria to filter the `database` values by before operating."
        }
      }
    },
    "DAVERAGE": {
      "description": "Average of a set of values from a table-like range.",
      "parameters": {
        "database": {
          "name": "database",
          "detail": "The array or range containing the data to consider, structured in such a way that the first row contains the labels for each column's values."
        },
        "field": {
          "name": "field",
          "detail": "Indicates which column in `database` contains the values to be extracted and operated on."
        },
        "criteria": {
          "name": "criteria",
          "detail": "An array or range containing zero or more criteria to filter the `database` values by before operating."
        }
      }
    },
    "DCOUNT": {
      "description": "Counts values from a table-like range.",
      "parameters": {
        "database": {
          "name": "database",
          "detail": "The array or range containing the data to consider, structured in such a way that the first row contains the labels for each column's values."
        },
        "field": {
          "name": "field",
          "detail": "Indicates which column in `database` contains the values to be extracted and operated on."
        },
        "criteria": {
          "name": "criteria",
          "detail": "An array or range containing zero or more criteria to filter the `database` values by before operating."
        }
      }
    },
    "DCOUNTA": {
      "description": "Counts values and text from a table-like range.",
      "parameters": {
        "database": {
          "name": "database",
          "detail": "The array or range containing the data to consider, structured in such a way that the first row contains the labels for each column's values."
        },
        "field": {
          "name": "field",
          "detail": "Indicates which column in `database` contains the values to be extracted and operated on."
        },
        "criteria": {
          "name": "criteria",
          "detail": "An array or range containing zero or more criteria to filter the `database` values by before operating."
        }
      }
    },
    "DPRODUCT": {
      "description": "Product of values from a table-like range.",
      "parameters": {
        "database": {
          "name": "database",
          "detail": "The array or range containing the data to consider, structured in such a way that the first row contains the labels for each column's values."
        },
        "field": {
          "name": "field",
          "detail": "Indicates which column in `database` contains the values to be extracted and operated on."
        },
        "criteria": {
          "name": "criteria",
          "detail": "An array or range containing zero or more criteria to filter the `database` values by before operating."
        }
      }
    },
    "DSTDEV": {
      "description": "Standard deviation of population sample from table.",
      "parameters": {
        "database": {
          "name": "database",
          "detail": "The array or range containing the data to consider, structured in such a way that the first row contains the labels for each column's values."
        },
        "field": {
          "name": "field",
          "detail": "Indicates which column in `database` contains the values to be extracted and operated on."
        },
        "criteria": {
          "name": "criteria",
          "detail": "An array or range containing zero or more criteria to filter the `database` values by before operating."
        }
      }
    },
    "DSTDEVP": {
      "description": "Standard deviation of entire population from table.",
      "parameters": {
        "database": {
          "name": "database",
          "detail": "The array or range containing the data to consider, structured in such a way that the first row contains the labels for each column's values."
        },
        "field": {
          "name": "field",
          "detail": "Indicates which column in `database` contains the values to be extracted and operated on."
        },
        "criteria": {
          "name": "criteria",
          "detail": "An array or range containing zero or more criteria to filter the `database` values by before operating."
        }
      }
    },
    "DSUM": {
      "description": "Sum of values from a table-like range.",
      "parameters": {
        "database": {
          "name": "database",
          "detail": "The array or range containing the data to consider, structured in such a way that the first row contains the labels for each column's values."
        },
        "field": {
          "name": "field",
          "detail": "Indicates which column in `database` contains the values to be extracted and operated on."
        },
        "criteria": {
          "name": "criteria",
          "detail": "An array or range containing zero or more criteria to filter the `database` values by before operating."
        }
      }
    },
    "DVAR": {
      "description": "Variance of population sample from table-like range.",
      "parameters": {
        "database": {
          "name": "database",
          "detail": "The array or range containing the data to consider, structured in such a way that the first row contains the labels for each column's values."
        },
        "field": {
          "name": "field",
          "detail": "Indicates which column in `database` contains the values to be extracted and operated on."
        },
        "criteria": {
          "name": "criteria",
          "detail": "An array or range containing zero or more criteria to filter the `database` values by before operating."
        }
      }
    },
    "DVARP": {
      "description": "Variance of a population from a table-like range.",
      "parameters": {
        "database": {
          "name": "database",
          "detail": "The array or range containing the data to consider, structured in such a way that the first row contains the labels for each column's values."
        },
        "field": {
          "name": "field",
          "detail": "Indicates which column in `database` contains the values to be extracted and operated on."
        },
        "criteria": {
          "name": "criteria",
          "detail": "An array or range containing zero or more criteria to filter the `database` values by before operating."
        }
      }
    },
    "SEX_BY_IDCARD": {
      "description": "Get gender based on ID number.",
      "parameters": {
        "ID number": {
          "name": "ID number",
          "detail": "15-digit or 18-digit ID number or range."
        }
      }
    },
    "PROVINCE_BY_IDCARD": {
      "description": "Get the province of birthplace based on the ID number.",
      "parameters": {
        "ID number": {
          "name": "ID number",
          "detail": "15-digit or 18-digit ID number or range."
        }
      }
    },
    "STAR_BY_IDCARD": {
      "description": "Get the constellation based on the ID number.",
      "parameters": {
        "ID number": {
          "name": "ID number",
          "detail": "15-digit or 18-digit ID number or range."
        }
      }
    },
    "DATA_CN_STOCK_VOLUMN": {
      "description": "Returns the corresponding stock trading volume of A shares.",
      "parameters": {
        "Stock code": {
          "name": "Stock code",
          "detail": "6-digit stock code, required."
        },
        "Date": {
          "name": "Date",
          "detail": "The trading day of the stock, the default is the latest trading day"
        },
        "Reversion and exclusion": {
          "name": "Reversion and exclusion",
          "detail": "Select the ex right restoration type of the stock, default to 0 [former reversion], 1 [original price], 2 [post reversion]"
        }
      }
    },
    "ISDATE": {
      "description": "Whether a value is a date.",
      "parameters": {
        "value": {
          "name": "value",
          "detail": "The value to be verified as a date."
        }
      }
    },
    "LINESPLINES": {
      "description": "Generate sparklines line chart",
      "parameters": {
        "Range": {
          "name": "Range",
          "detail": "Range，Values can be calculated effectively, such as A1:A20, {1,2,3,4,5}, etc."
        },
        "Line color": {
          "name": "Line color",
          "detail": "The line color of the line graph can be range A1, color table index value or specific color value. Set it to 0 or false to not display it. It supports regx, rgb, rgba, etc. Default #2ec7c9"
        },
        "Line thickness": {
          "name": "Line thickness",
          "detail": "Line thickness of the line graph, the default is 1px"
        },
        "Auxiliary line": {
          "name": "Auxiliary line",
          "detail": "A horizontal line, which can be min, max, avg, median, range or custom value, default 0 none"
        },
        "Auxiliary line color": {
          "name": "Auxiliary line color",
          "detail": "Color setting of auxiliary line, same as line color configuration, default #000"
        },
        "Maximum mark": {
          "name": "Maximum mark",
          "detail": "Identifies the maximum value of the line graph, the same line color configuration, default 0 does not display"
        },
        "Minimum mark": {
          "name": "Minimum mark",
          "detail": "Identify the minimum value of the line graph, the same line color configuration, default 0 does not display"
        },
        "Mark size": {
          "name": "Mark size",
          "detail": "The maximum and minimum mark size settings, the default is 1.5"
        }
      }
    },
    "STACKCOLUMNSPLINES": {
      "description": "Generate sparklines cumulative vertical histogram",
      "parameters": {
        "Range": {
          "name": "Range",
          "detail": "Range，Values can be calculated effectively, such as A1:A20, {1,2,3,4,5}, etc."
        },
        "Stack by column": {
          "name": "Stack by column",
          "detail": "If you need to stack by row, set this item to false or 0, the default is 1"
        },
        "Bar interval": {
          "name": "Bar interval",
          "detail": "The distance between bars, the default is 1"
        },
        "Max": {
          "name": "Max",
          "detail": "The maximum value of the cumulative bar, used to regulate the length of the bar, the default is to automatically calculate false, auto, null"
        },
        "Color palette": {
          "name": "Color palette",
          "detail": "The color palette can individually set the bar color of each dimension, which can be set to the range of A1:A10, etc. The default is #2ec7c9, #fc5c5c, #5ab1ef, #ffb980..."
        }
      }
    },
    "STACKBARSPLINES": {
      "description": "Generate sparklines cumulative horizontal bar graph",
      "parameters": {
        "Range": {
          "name": "Range",
          "detail": "Range，Values can be calculated effectively, such as A1:A20, {1,2,3,4,5}, etc."
        },
        "Stack by column": {
          "name": "Stack by column",
          "detail": "If you need to stack by row, set this item to false or 0, the default is 1"
        },
        "Bar interval": {
          "name": "Bar interval",
          "detail": "The distance between bars, the default is 1"
        },
        "Max": {
          "name": "Max",
          "detail": "The maximum value of the cumulative bar, used to regulate the length of the bar, the default is to automatically calculate false, auto, null"
        },
        "Color palette": {
          "name": "Color palette",
          "detail": "The color palette can individually set the bar color of each dimension, which can be set to the range of A1:A10, etc. The default is #2ec7c9, #fc5c5c, #5ab1ef, #ffb980..."
        }
      }
    },
    "DISCRETESPLINES": {
      "description": "Generate sparklines discrete graph",
      "parameters": {
        "Range": {
          "name": "Range",
          "detail": "Range，Values can be calculated effectively, such as A1:A20, {1,2,3,4,5}, etc."
        },
        "Segmentation threshold": {
          "name": "Segmentation threshold",
          "detail": "Discrete graph column color distinction, for example: if the value is 0, blue is greater than 0, red is less than 0, and the default is 0"
        },
        "Above threshold color": {
          "name": "Above threshold color",
          "detail": "The line color of the line graph can be range A1, color table index value or specific color value. Set it to 0 or false to not display it. It supports regx, rgb, rgba, etc. Default #2ec7c9"
        },
        "Below threshold color": {
          "name": "Below threshold color",
          "detail": "The color setting of the bar below the threshold, the same as the color above the threshold, default #fc5c5c"
        }
      }
    },
    "TRISTATESPLINES": {
      "description": "Generate sparklines three-state graph",
      "parameters": {
        "Range": {
          "name": "Range",
          "detail": "Range，Values can be calculated effectively, such as A1:A20, {1,2,3,4,5}, etc."
        },
        "Bar interval": {
          "name": "Bar interval",
          "detail": "The distance between bars, the default is 1"
        },
        "Bar color": {
          "name": "Bar color",
          "detail": "The line color of the line graph can be range A1, color table index value or specific color value. Set it to 0 or false to not display it. It supports regx, rgb, rgba, etc. Default #fc5c5c"
        },
        "Negative bar color": {
          "name": "Negative bar color",
          "detail": "Negative bar color setting, representing the color of negative value, same as the bar color configuration, default #97b552"
        },
        "Zero value bar color": {
          "name": "Zero value bar color",
          "detail": "Zero value bar color setting, representing 0 value color, the same color configuration of the bar, default #999"
        },
        "Color palette": {
          "name": "Color palette",
          "detail": "The color palette can set the color of each bar individually, multiple settings can be set, and two formats are supported: 1 color such as #000, which means that the color of the first bar is black; 2 value range: color, such as -2:# 000 indicates that the bar with a value of -2 is black, 0:5:#000 indicates that the bar with a value of 0-5 is black, and the default is empty"
        }
      }
    },
    "PIESPLINES": {
      "description": "Generate sparklines pie chart",
      "parameters": {
        "Range": {
          "name": "Range",
          "detail": "Range，Values can be calculated effectively, such as A1:A20, {1,2,3,4,5}, etc."
        },
        "Rotation angle": {
          "name": "Rotation angle",
          "detail": "The rotation angle of the pie chart, the default is 0"
        },
        "border": {
          "name": "border",
          "detail": "Pie chart border size, default is none 0"
        },
        "Border color": {
          "name": "Border color",
          "detail": "The border color of the pie chart, the default is #000"
        },
        "Color palette": {
          "name": "Color palette",
          "detail": "The color of the slice can be set in the palette, which can be set to the range of A1:A10, etc. The default is #2ec7c9, #fc5c5c, #5ab1ef, #ffb980..."
        }
      }
    },
    "BULLETSPLINES": {
      "description": "Generating sparklines bullets",
      "parameters": {
        "Target": {
          "name": "Target",
          "detail": "The numerical value can be calculated effectively for the achieved target value, such as A1, 100, etc."
        },
        "achieved": {
          "name": "achieved",
          "detail": "Only when the value is completed can the value be calculated effectively, such as A1, 100, etc."
        },
        "Contrast": {
          "name": "Contrast",
          "detail": "Comparative values, such as excess, minimum, and bottom line for awards, can be effectively calculated, such as A1, 100, etc. You can set up to 9 comparison values"
        }
      }
    },
    "COMPOSESPLINES": {
      "description": "Combine sparklines graphs into one cell",
      "parameters": {
        "config": {
          "name": "config",
          "detail": "Sparklines chart settings, such as A1:A20, a completed pie chart, line chart settings, etc."
        }
      }
    },
    "SORT": {
      "description": "Sorts rows of range by specified column.",
      "parameters": {
        "range": {
          "name": "range",
          "detail": "The data to be sorted."
        },
        "sort_column": {
          "name": "sort_column",
          "detail": "The index of the column in `range` or a range outside of `range` containing the values by which to sort."
        },
        "is_ascending": {
          "name": "is_ascending",
          "detail": "`TRUE` or `FALSE` indicating whether to sort `sort_column` in ascending order. `FALSE` sorts in descending order."
        },
        "sort_column2": {
          "name": "sort_column2",
          "detail": "Additional columns."
        }
      }
    },
    "FILTER": {
      "description": "Filters a range based off provided conditions.",
      "parameters": {
        "range": {
          "name": "range",
          "detail": "The data to be filtered."
        },
        "condition1": {
          "name": "condition1",
          "detail": "A column or row containing true or false values corresponding to the first column or row of `range`, or an array formula evaluating to true or false."
        },
        "condition2": {
          "name": "condition2",
          "detail": "Additional rows or columns containing boolean values `TRUE` or `FALSE` indicating whether the corresponding row or column in `range` should pass through `FILTER`. Can also contain array formula expressions which evaluate to such rows or columns. All conditions must be of the same type (row or column). Mixing row conditions and column conditions is not permitted."
        }
      }
    },
    "UNIQUE": {
      "description": "Unique rows in the provided source range.",
      "parameters": {
        "range": {
          "name": "range",
          "detail": "The data to filter by unique entries."
        },
        "by_col": {
          "name": "by_col",
          "detail": "[Option] - Logical value, indicating how to compare; by row = FALSE() or omitted; by column = TRUE()."
        },
        "occurs_once": {
          "name": "occurs_once",
          "detail": "[Option] - Logical value, only one occurrence in the unique value is returned = TRUE(); including all unique values = FALSE() or omitted."
        }
      }
    },
    "RANDARRAY": {
      "description": "Returns a grid of random numbers.",
      "parameters": {
        "rows": {
          "name": "rows",
          "detail": "The number of rows to populate with a random number."
        },
        "columns": {
          "name": "columns",
          "detail": "The number of columns to populate with a random number."
        }
      }
    },
    "SEQUENCE": {
      "description": "Returns a grid of sequential numbers.",
      "parameters": {
        "rows": {
          "name": "rows",
          "detail": "The number of rows in the function's resulting grid."
        },
        "columns": {
          "name": "columns",
          "detail": "The number of columns in the function's resulting grid. If omitted, the result grid will have 1 column."
        },
        "start": {
          "name": "start",
          "detail": "The number, at which to start the sequence. If omitted, the sequence will start at 1."
        },
        "step": {
          "name": "step",
          "detail": "The amount each value in the sequence will differ by. If omitted, each value will differ by 1."
        }
      }
    },
    "EVALUATE": {
      "description": "Evaluate according to literal formula or expression.",
      "parameters": {
        "expression": {
          "name": "expression",
          "detail": "Formula or expression"
        }
      }
    },
    "REMOTE": {
      "description": "Calls a function on a remote back end server/API.",
      "parameters": {
        "remote_expression": {
          "name": "remote_expression",
          "detail": "Formula"
        }
      }
    }
  }
}